'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _actionstatustype = require('./actionstatustype.js');

var _actionstatustype2 = _interopRequireDefault(_actionstatustype);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _entrypoint = require('./entrypoint.js');

var _entrypoint2 = _interopRequireDefault(_entrypoint);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Action - An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               See also blog post and Actions overview document.. Generated automatically by the reactGenerator. */


var Action = function (_Component) {
    _inherits(Action, _Component);

    function Action() {
        _classCallCheck(this, Action);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Action).apply(this, arguments));
    }

    _createClass(Action, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(Action, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(Action, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var participant = undefined;
            if (this.props.participant) {
                if (this.props.participant instanceof Array) {
                    participant = _react2.default.createElement(
                        'div',
                        { className: 'participant__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'participant__header', 'data-advice': 'HTML for the *head* of the section' },
                            'participants'
                        ),
                        this.props.participant.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.participant));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.participant));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'participant__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        participant = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.participant));
                    } else if (this.props['@type'] === 'Organization') {
                        participant = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.participant));
                    }
                }
            }

            var target = undefined;
            if (this.props.target) {
                if (this.props.target instanceof Array) {
                    target = _react2.default.createElement(
                        'div',
                        { className: 'target__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'target__header', 'data-advice': 'HTML for the *head* of the section' },
                            'targets'
                        ),
                        this.props.target.map(function (item, index) {
                            return _react2.default.createElement(_entrypoint2.default, _extends({ key: index }, _this2.props.target));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'target__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    target = _react2.default.createElement(_entrypoint2.default, _extends({ key: index }, this.props.target));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Action-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Action-image', src: this.props.image })
                        );
                    }
                }
            }

            var object = undefined;
            if (this.props.object) {
                if (this.props.object instanceof Array) {
                    object = _react2.default.createElement(
                        'div',
                        { className: 'object__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'object__header', 'data-advice': 'HTML for the *head* of the section' },
                            'objects'
                        ),
                        this.props.object.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.object));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'object__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    object = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.object));
                }
            }

            var agent = undefined;
            if (this.props.agent) {
                if (this.props.agent instanceof Array) {
                    agent = _react2.default.createElement(
                        'div',
                        { className: 'agent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'agent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'agents'
                        ),
                        this.props.agent.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.agent));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.agent));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'agent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        agent = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.agent));
                    } else if (this.props['@type'] === 'Organization') {
                        agent = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.agent));
                    }
                }
            }

            var actionStatus = undefined;
            if (this.props.actionStatus) {
                if (this.props.actionStatus instanceof Array) {
                    actionStatus = _react2.default.createElement(
                        'div',
                        { className: 'actionStatus__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'actionStatus__header', 'data-advice': 'HTML for the *head* of the section' },
                            'actionStatuss'
                        ),
                        this.props.actionStatus.map(function (item, index) {
                            return _react2.default.createElement(_actionstatustype2.default, _extends({ key: index }, _this2.props.actionStatus));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'actionStatus__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    actionStatus = _react2.default.createElement(_actionstatustype2.default, _extends({ key: index }, this.props.actionStatus));
                }
            }

            var instrument = undefined;
            if (this.props.instrument) {
                if (this.props.instrument instanceof Array) {
                    instrument = _react2.default.createElement(
                        'div',
                        { className: 'instrument__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'instrument__header', 'data-advice': 'HTML for the *head* of the section' },
                            'instruments'
                        ),
                        this.props.instrument.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.instrument));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'instrument__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    instrument = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.instrument));
                }
            }

            var location = undefined;
            if (this.props.location) {
                if (this.props.location instanceof Array) {
                    location = _react2.default.createElement(
                        'div',
                        { className: 'location__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'location__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locations'
                        ),
                        this.props.location.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.location));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Action-location' },
                                        'location: ',
                                        _this2.props.location
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.location));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'location__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        location = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.location));
                    } else if (this.props['@type'] === 'Text') {
                        location = _react2.default.createElement(
                            'div',
                            { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Action-location' },
                                'location: ',
                                this.props.location
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        location = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.location));
                    }
                }
            }

            var error = undefined;
            if (this.props.error) {
                if (this.props.error instanceof Array) {
                    error = _react2.default.createElement(
                        'div',
                        { className: 'error__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'error__header', 'data-advice': 'HTML for the *head* of the section' },
                            'errors'
                        ),
                        this.props.error.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.error));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'error__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    error = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.error));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Action-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Action-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var result = undefined;
            if (this.props.result) {
                if (this.props.result instanceof Array) {
                    result = _react2.default.createElement(
                        'div',
                        { className: 'result__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'result__header', 'data-advice': 'HTML for the *head* of the section' },
                            'results'
                        ),
                        this.props.result.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.result));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'result__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    result = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.result));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Action' },
                potentialAction,
                participant,
                target,
                image,
                object,
                agent,
                actionStatus,
                instrument,
                location,
                error,
                mainEntityOfPage,
                result
            );
        }
    }]);

    return Action;
}(_react.Component);

exports.default = Action;
;

Action.defaultProps = {};

Action.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    participant: _react2.default.propTypes.object,
    target: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    object: _react2.default.propTypes.object,
    agent: _react2.default.propTypes.object,
    actionStatus: _react2.default.propTypes.object,
    instrument: _react2.default.propTypes.object,
    location: _react2.default.propTypes.object,
    error: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    result: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ActionStatusType - The status of an Action.. Generated automatically by the reactGenerator. */


var ActionStatusType = function (_Component) {
    _inherits(ActionStatusType, _Component);

    function ActionStatusType() {
        _classCallCheck(this, ActionStatusType);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ActionStatusType).apply(this, arguments));
    }

    _createClass(ActionStatusType, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ActionStatusType-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ActionStatusType-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ActionStatusType-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ActionStatusType-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ActionStatusType' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return ActionStatusType;
}(_react.Component);

exports.default = ActionStatusType;
;

ActionStatusType.defaultProps = {};

ActionStatusType.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _map = require('./map.js');

var _map2 = _interopRequireDefault(_map);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _openinghoursspecification = require('./openinghoursspecification.js');

var _openinghoursspecification2 = _interopRequireDefault(_openinghoursspecification);

var _photograph = require('./photograph.js');

var _photograph2 = _interopRequireDefault(_photograph);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _propertyvalue = require('./propertyvalue.js');

var _propertyvalue2 = _interopRequireDefault(_propertyvalue);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _geocoordinates = require('./geocoordinates.js');

var _geocoordinates2 = _interopRequireDefault(_geocoordinates);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* AdministrativeArea - A geographical region, typically under the jurisdiction of a particular government.. Generated automatically by the reactGenerator. */


var AdministrativeArea = function (_Component) {
    _inherits(AdministrativeArea, _Component);

    function AdministrativeArea() {
        _classCallCheck(this, AdministrativeArea);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(AdministrativeArea).apply(this, arguments));
    }

    _createClass(AdministrativeArea, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var openingHoursSpecification = undefined;
            if (this.props.openingHoursSpecification) {
                if (this.props.openingHoursSpecification instanceof Array) {
                    openingHoursSpecification = _react2.default.createElement(
                        'div',
                        { className: 'openingHoursSpecification__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'openingHoursSpecification__header', 'data-advice': 'HTML for the *head* of the section' },
                            'openingHoursSpecifications'
                        ),
                        this.props.openingHoursSpecification.map(function (item, index) {
                            return _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, _this2.props.openingHoursSpecification));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'openingHoursSpecification__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    openingHoursSpecification = _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, this.props.openingHoursSpecification));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var photo = undefined;
            if (this.props.photo) {
                if (this.props.photo instanceof Array) {
                    photo = _react2.default.createElement(
                        'div',
                        { className: 'photo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'photo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'photos'
                        ),
                        this.props.photo.map(function (item, index) {
                            if (_this2.props['@type'] === 'Photograph') {
                                return _react2.default.createElement(_photograph2.default, _extends({ key: index }, _this2.props.photo));
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.photo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'photo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Photograph') {
                        photo = _react2.default.createElement(_photograph2.default, _extends({ key: index }, this.props.photo));
                    } else if (this.props['@type'] === 'ImageObject') {
                        photo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.photo));
                    }
                }
            }

            var hasMap = undefined;
            if (this.props.hasMap) {
                if (this.props.hasMap instanceof Array) {
                    hasMap = _react2.default.createElement(
                        'div',
                        { className: 'hasMap__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasMap__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasMaps'
                        ),
                        this.props.hasMap.map(function (item, index) {
                            if (_this2.props['@type'] === 'Map') {
                                return _react2.default.createElement(_map2.default, _extends({ key: index }, _this2.props.hasMap));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'hasMap', 'data-advice': 'Put your HTML here. hasMap is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AdministrativeArea-hasMap', href: _this2.props.hasMap, target: '_blank' },
                                        'hasMap'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasMap__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Map') {
                        hasMap = _react2.default.createElement(_map2.default, _extends({ key: index }, this.props.hasMap));
                    } else if (this.props['@type'] === 'URL') {
                        hasMap = _react2.default.createElement(
                            'div',
                            { className: 'hasMap', 'data-advice': 'Put your HTML here. hasMap is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AdministrativeArea-hasMap', href: this.props.hasMap, target: '_blank' },
                                'hasMap'
                            )
                        );
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var containedInPlace = undefined;
            if (this.props.containedInPlace) {
                if (this.props.containedInPlace instanceof Array) {
                    containedInPlace = _react2.default.createElement(
                        'div',
                        { className: 'containedInPlace__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'containedInPlace__header', 'data-advice': 'HTML for the *head* of the section' },
                            'containedInPlaces'
                        ),
                        this.props.containedInPlace.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.containedInPlace));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'containedInPlace__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    containedInPlace = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.containedInPlace));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var additionalProperty = undefined;
            if (this.props.additionalProperty) {
                if (this.props.additionalProperty instanceof Array) {
                    additionalProperty = _react2.default.createElement(
                        'div',
                        { className: 'additionalProperty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'additionalProperty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'additionalPropertys'
                        ),
                        this.props.additionalProperty.map(function (item, index) {
                            return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.additionalProperty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'additionalProperty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    additionalProperty = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.additionalProperty));
                }
            }

            var containsPlace = undefined;
            if (this.props.containsPlace) {
                if (this.props.containsPlace instanceof Array) {
                    containsPlace = _react2.default.createElement(
                        'div',
                        { className: 'containsPlace__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'containsPlace__header', 'data-advice': 'HTML for the *head* of the section' },
                            'containsPlaces'
                        ),
                        this.props.containsPlace.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.containsPlace));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'containsPlace__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    containsPlace = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.containsPlace));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'AdministrativeArea-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'AdministrativeArea-image', src: this.props.image })
                        );
                    }
                }
            }

            var address = undefined;
            if (this.props.address) {
                if (this.props.address instanceof Array) {
                    address = _react2.default.createElement(
                        'div',
                        { className: 'address__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'address__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addresss'
                        ),
                        this.props.address.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AdministrativeArea-address' },
                                        'address: ',
                                        _this2.props.address
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.address));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'address__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        address = _react2.default.createElement(
                            'div',
                            { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AdministrativeArea-address' },
                                'address: ',
                                this.props.address
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        address = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.address));
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AdministrativeArea-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AdministrativeArea-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var logo = undefined;
            if (this.props.logo) {
                if (this.props.logo instanceof Array) {
                    logo = _react2.default.createElement(
                        'div',
                        { className: 'logo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'logo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'logos'
                        ),
                        this.props.logo.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.logo));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AdministrativeArea-logo', href: _this2.props.logo, target: '_blank' },
                                        'logo'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'logo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        logo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.logo));
                    } else if (this.props['@type'] === 'URL') {
                        logo = _react2.default.createElement(
                            'div',
                            { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AdministrativeArea-logo', href: this.props.logo, target: '_blank' },
                                'logo'
                            )
                        );
                    }
                }
            }

            var geo = undefined;
            if (this.props.geo) {
                if (this.props.geo instanceof Array) {
                    geo = _react2.default.createElement(
                        'div',
                        { className: 'geo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'geo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'geos'
                        ),
                        this.props.geo.map(function (item, index) {
                            if (_this2.props['@type'] === 'GeoCoordinates') {
                                return _react2.default.createElement(_geocoordinates2.default, _extends({ key: index }, _this2.props.geo));
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.geo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'geo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'GeoCoordinates') {
                        geo = _react2.default.createElement(_geocoordinates2.default, _extends({ key: index }, this.props.geo));
                    } else if (this.props['@type'] === 'GeoShape') {
                        geo = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.geo));
                    }
                }
            }

            var event = undefined;
            if (this.props.event) {
                if (this.props.event instanceof Array) {
                    event = _react2.default.createElement(
                        'div',
                        { className: 'event__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'event__header', 'data-advice': 'HTML for the *head* of the section' },
                            'events'
                        ),
                        this.props.event.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.event));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'event__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    event = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.event));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'AdministrativeArea' },
                openingHoursSpecification,
                potentialAction,
                photo,
                hasMap,
                review,
                containedInPlace,
                aggregateRating,
                additionalProperty,
                containsPlace,
                image,
                address,
                mainEntityOfPage,
                logo,
                geo,
                event
            );
        }
    }]);

    return AdministrativeArea;
}(_react.Component);

exports.default = AdministrativeArea;
;

AdministrativeArea.defaultProps = {};

AdministrativeArea.propTypes = {
    openingHoursSpecification: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    photo: _react2.default.propTypes.object,
    hasMap: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    containedInPlace: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    additionalProperty: _react2.default.propTypes.object,
    containsPlace: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    address: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    logo: _react2.default.propTypes.object,
    geo: _react2.default.propTypes.object,
    event: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* AggregateRating - The average rating based on multiple ratings or reviews.. Generated automatically by the reactGenerator. */


var AggregateRating = function (_Component) {
    _inherits(AggregateRating, _Component);

    function AggregateRating() {
        _classCallCheck(this, AggregateRating);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(AggregateRating).apply(this, arguments));
    }

    _createClass(AggregateRating, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'AggregateRating-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'AggregateRating-image', src: this.props.image })
                        );
                    }
                }
            }

            var bestRating = undefined;
            if (this.props.bestRating) {
                if (this.props.bestRating instanceof Array) {
                    bestRating = _react2.default.createElement(
                        'div',
                        { className: 'bestRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'bestRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'bestRatings'
                        ),
                        this.props.bestRating.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'bestRating', 'data-advice': 'Put your HTML here. bestRating is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AggregateRating-bestRating' },
                                        'bestRating: ',
                                        _this2.props.bestRating
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'bestRating', 'data-advice': 'Put your HTML here. bestRating is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AggregateRating-bestRating' },
                                        'bestRating: ',
                                        _this2.props.bestRating
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'bestRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        bestRating = _react2.default.createElement(
                            'div',
                            { className: 'bestRating', 'data-advice': 'Put your HTML here. bestRating is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AggregateRating-bestRating' },
                                'bestRating: ',
                                this.props.bestRating
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        bestRating = _react2.default.createElement(
                            'div',
                            { className: 'bestRating', 'data-advice': 'Put your HTML here. bestRating is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AggregateRating-bestRating' },
                                'bestRating: ',
                                this.props.bestRating
                            )
                        );
                    }
                }
            }

            var worstRating = undefined;
            if (this.props.worstRating) {
                if (this.props.worstRating instanceof Array) {
                    worstRating = _react2.default.createElement(
                        'div',
                        { className: 'worstRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'worstRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'worstRatings'
                        ),
                        this.props.worstRating.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'worstRating', 'data-advice': 'Put your HTML here. worstRating is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AggregateRating-worstRating' },
                                        'worstRating: ',
                                        _this2.props.worstRating
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'worstRating', 'data-advice': 'Put your HTML here. worstRating is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AggregateRating-worstRating' },
                                        'worstRating: ',
                                        _this2.props.worstRating
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'worstRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        worstRating = _react2.default.createElement(
                            'div',
                            { className: 'worstRating', 'data-advice': 'Put your HTML here. worstRating is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AggregateRating-worstRating' },
                                'worstRating: ',
                                this.props.worstRating
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        worstRating = _react2.default.createElement(
                            'div',
                            { className: 'worstRating', 'data-advice': 'Put your HTML here. worstRating is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AggregateRating-worstRating' },
                                'worstRating: ',
                                this.props.worstRating
                            )
                        );
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AggregateRating-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AggregateRating-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var itemReviewed = undefined;
            if (this.props.itemReviewed) {
                if (this.props.itemReviewed instanceof Array) {
                    itemReviewed = _react2.default.createElement(
                        'div',
                        { className: 'itemReviewed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemReviewed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemRevieweds'
                        ),
                        this.props.itemReviewed.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.itemReviewed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemReviewed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    itemReviewed = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.itemReviewed));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'AggregateRating' },
                potentialAction,
                image,
                bestRating,
                worstRating,
                mainEntityOfPage,
                itemReviewed
            );
        }
    }]);

    return AggregateRating;
}(_react.Component);

exports.default = AggregateRating;
;

AggregateRating.defaultProps = {};

AggregateRating.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    bestRating: _react2.default.propTypes.object,
    worstRating: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    itemReviewed: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* AlignmentObject - An intangible item that describes an alignment between a learning resource and a node in an educational framework.. Generated automatically by the reactGenerator. */


var AlignmentObject = function (_Component) {
    _inherits(AlignmentObject, _Component);

    function AlignmentObject() {
        _classCallCheck(this, AlignmentObject);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(AlignmentObject).apply(this, arguments));
    }

    _createClass(AlignmentObject, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AlignmentObject-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AlignmentObject-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'AlignmentObject-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'AlignmentObject-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'AlignmentObject' },
                mainEntityOfPage,
                image,
                potentialAction
            );
        }
    }]);

    return AlignmentObject;
}(_react.Component);

exports.default = AlignmentObject;
;

AlignmentObject.defaultProps = {};

AlignmentObject.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _question = require('./question.js');

var _question2 = _interopRequireDefault(_question);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Answer - An answer offered to a question; perhaps correct, perhaps opinionated or wrong.. Generated automatically by the reactGenerator. */


var Answer = function (_Component) {
    _inherits(Answer, _Component);

    function Answer() {
        _classCallCheck(this, Answer);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Answer).apply(this, arguments));
    }

    _createClass(Answer, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Answer-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Answer-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Answer-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Answer-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Answer-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Answer-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var parentItem = undefined;
            if (this.props.parentItem) {
                if (this.props.parentItem instanceof Array) {
                    parentItem = _react2.default.createElement(
                        'div',
                        { className: 'parentItem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'parentItem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'parentItems'
                        ),
                        this.props.parentItem.map(function (item, index) {
                            return _react2.default.createElement(_question2.default, _extends({ key: index }, _this2.props.parentItem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'parentItem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    parentItem = _react2.default.createElement(_question2.default, _extends({ key: index }, this.props.parentItem));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Answer-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Answer-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Answer-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Answer-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Answer-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Answer-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Answer-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Answer-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Answer-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Answer-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Answer-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Answer-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Answer-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Answer-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Answer-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Answer-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Answer-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Answer-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Answer-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Answer-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Answer-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Answer-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Answer-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    } else if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Answer-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Answer' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                parentItem,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return Answer;
}(_react.Component);

exports.default = Answer;
;

Answer.defaultProps = {};

Answer.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    parentItem: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Audience - Intended audience for an item, i.e. the group for whom the item was created.. Generated automatically by the reactGenerator. */


var Audience = function (_Component) {
    _inherits(Audience, _Component);

    function Audience() {
        _classCallCheck(this, Audience);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Audience).apply(this, arguments));
    }

    _createClass(Audience, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Audience-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Audience-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Audience-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Audience-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var geographicArea = undefined;
            if (this.props.geographicArea) {
                if (this.props.geographicArea instanceof Array) {
                    geographicArea = _react2.default.createElement(
                        'div',
                        { className: 'geographicArea__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'geographicArea__header', 'data-advice': 'HTML for the *head* of the section' },
                            'geographicAreas'
                        ),
                        this.props.geographicArea.map(function (item, index) {
                            return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.geographicArea));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'geographicArea__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    geographicArea = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.geographicArea));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Audience' },
                mainEntityOfPage,
                image,
                potentialAction,
                geographicArea
            );
        }
    }]);

    return Audience;
}(_react.Component);

exports.default = Audience;
;

Audience.defaultProps = {};

Audience.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    geographicArea: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _newsarticle = require('./newsarticle.js');

var _newsarticle2 = _interopRequireDefault(_newsarticle);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _distance = require('./distance.js');

var _distance2 = _interopRequireDefault(_distance);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* AudioObject - An audio file.. Generated automatically by the reactGenerator. */


var AudioObject = function (_Component) {
    _inherits(AudioObject, _Component);

    function AudioObject() {
        _classCallCheck(this, AudioObject);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(AudioObject).apply(this, arguments));
    }

    _createClass(AudioObject, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AudioObject-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AudioObject-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var encodesCreativeWork = undefined;
            if (this.props.encodesCreativeWork) {
                if (this.props.encodesCreativeWork instanceof Array) {
                    encodesCreativeWork = _react2.default.createElement(
                        'div',
                        { className: 'encodesCreativeWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encodesCreativeWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodesCreativeWorks'
                        ),
                        this.props.encodesCreativeWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.encodesCreativeWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encodesCreativeWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encodesCreativeWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.encodesCreativeWork));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'AudioObject-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'AudioObject-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AudioObject-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AudioObject-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var height = undefined;
            if (this.props.height) {
                if (this.props.height instanceof Array) {
                    height = _react2.default.createElement(
                        'div',
                        { className: 'height__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'height__header', 'data-advice': 'HTML for the *head* of the section' },
                            'heights'
                        ),
                        this.props.height.map(function (item, index) {
                            if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.height));
                            } else if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.height));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'height__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'QuantitativeValue') {
                        height = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.height));
                    } else if (this.props['@type'] === 'Distance') {
                        height = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.height));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var productionCompany = undefined;
            if (this.props.productionCompany) {
                if (this.props.productionCompany instanceof Array) {
                    productionCompany = _react2.default.createElement(
                        'div',
                        { className: 'productionCompany__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'productionCompany__header', 'data-advice': 'HTML for the *head* of the section' },
                            'productionCompanys'
                        ),
                        this.props.productionCompany.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.productionCompany));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'productionCompany__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    productionCompany = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.productionCompany));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AudioObject-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AudioObject-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var associatedArticle = undefined;
            if (this.props.associatedArticle) {
                if (this.props.associatedArticle instanceof Array) {
                    associatedArticle = _react2.default.createElement(
                        'div',
                        { className: 'associatedArticle__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedArticle__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedArticles'
                        ),
                        this.props.associatedArticle.map(function (item, index) {
                            return _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, _this2.props.associatedArticle));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedArticle__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedArticle = _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, this.props.associatedArticle));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'AudioObject-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'AudioObject-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'AudioObject-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'AudioObject-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'AudioObject-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'AudioObject-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'AudioObject-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'AudioObject-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AudioObject-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AudioObject-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AudioObject-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AudioObject-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AudioObject-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AudioObject-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AudioObject-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AudioObject-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'AudioObject-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AudioObject-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'AudioObject-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AudioObject-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'AudioObject-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'AudioObject-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(AudioObject, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(AudioObject, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            var width = undefined;
            if (this.props.width) {
                if (this.props.width instanceof Array) {
                    width = _react2.default.createElement(
                        'div',
                        { className: 'width__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'width__header', 'data-advice': 'HTML for the *head* of the section' },
                            'widths'
                        ),
                        this.props.width.map(function (item, index) {
                            if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.width));
                            } else if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.width));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'width__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'QuantitativeValue') {
                        width = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.width));
                    } else if (this.props['@type'] === 'Distance') {
                        width = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.width));
                    }
                }
            }

            var regionsAllowed = undefined;
            if (this.props.regionsAllowed) {
                if (this.props.regionsAllowed instanceof Array) {
                    regionsAllowed = _react2.default.createElement(
                        'div',
                        { className: 'regionsAllowed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'regionsAllowed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'regionsAlloweds'
                        ),
                        this.props.regionsAllowed.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.regionsAllowed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'regionsAllowed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    regionsAllowed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.regionsAllowed));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'AudioObject' },
                comment,
                inLanguage,
                encodesCreativeWork,
                creator,
                image,
                citation,
                height,
                aggregateRating,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                producer,
                productionCompany,
                review,
                encoding,
                character,
                mainEntityOfPage,
                associatedArticle,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                timeRequired,
                interactionStatistic,
                educationalAlignment,
                duration,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                publication,
                hasPart,
                publisher,
                about,
                potentialAction,
                license,
                associatedMedia,
                workExample,
                author,
                audience,
                mentions,
                audio,
                sourceOrganization,
                width,
                regionsAllowed
            );
        }
    }]);

    return AudioObject;
}(_react.Component);

exports.default = AudioObject;
;

AudioObject.defaultProps = {};

AudioObject.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    encodesCreativeWork: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    height: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    productionCompany: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    associatedArticle: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object,
    width: _react2.default.propTypes.object,
    regionsAllowed: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Brand - A brand is a name used by an organization or business person for labeling a product, product group, or similar.. Generated automatically by the reactGenerator. */


var Brand = function (_Component) {
    _inherits(Brand, _Component);

    function Brand() {
        _classCallCheck(this, Brand);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Brand).apply(this, arguments));
    }

    _createClass(Brand, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Brand-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Brand-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var logo = undefined;
            if (this.props.logo) {
                if (this.props.logo instanceof Array) {
                    logo = _react2.default.createElement(
                        'div',
                        { className: 'logo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'logo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'logos'
                        ),
                        this.props.logo.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Brand-logo', href: _this2.props.logo, target: '_blank' },
                                        'logo'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.logo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'logo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        logo = _react2.default.createElement(
                            'div',
                            { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Brand-logo', href: this.props.logo, target: '_blank' },
                                'logo'
                            )
                        );
                    } else if (this.props['@type'] === 'ImageObject') {
                        logo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.logo));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Brand-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Brand-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Brand' },
                potentialAction,
                review,
                aggregateRating,
                mainEntityOfPage,
                logo,
                image
            );
        }
    }]);

    return Brand;
}(_react.Component);

exports.default = Brand;
;

Brand.defaultProps = {};

Brand.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    logo: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _openinghoursspecification = require('./openinghoursspecification.js');

var _openinghoursspecification2 = _interopRequireDefault(_openinghoursspecification);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _offercatalog = require('./offercatalog.js');

var _offercatalog2 = _interopRequireDefault(_offercatalog);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _physicalactivitycategory = require('./physicalactivitycategory.js');

var _physicalactivitycategory2 = _interopRequireDefault(_physicalactivitycategory);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _servicechannel = require('./servicechannel.js');

var _servicechannel2 = _interopRequireDefault(_servicechannel);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* BroadcastService - A delivery service through which content is provided via broadcast over the air or online.. Generated automatically by the reactGenerator. */


var BroadcastService = function (_Component) {
    _inherits(BroadcastService, _Component);

    function BroadcastService() {
        _classCallCheck(this, BroadcastService);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(BroadcastService).apply(this, arguments));
    }

    _createClass(BroadcastService, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var category = undefined;
            if (this.props.category) {
                if (this.props.category instanceof Array) {
                    category = _react2.default.createElement(
                        'div',
                        { className: 'category__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'category__header', 'data-advice': 'HTML for the *head* of the section' },
                            'categorys'
                        ),
                        this.props.category.map(function (item, index) {
                            if (_this2.props['@type'] === 'Thing') {
                                return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'PhysicalActivityCategory') {
                                return _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'BroadcastService-category' },
                                        'category: ',
                                        _this2.props.category
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'category__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Thing') {
                        category = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'PhysicalActivityCategory') {
                        category = _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'Text') {
                        category = _react2.default.createElement(
                            'div',
                            { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'BroadcastService-category' },
                                'category: ',
                                this.props.category
                            )
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var availableChannel = undefined;
            if (this.props.availableChannel) {
                if (this.props.availableChannel instanceof Array) {
                    availableChannel = _react2.default.createElement(
                        'div',
                        { className: 'availableChannel__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableChannel__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableChannels'
                        ),
                        this.props.availableChannel.map(function (item, index) {
                            return _react2.default.createElement(_servicechannel2.default, _extends({ key: index }, _this2.props.availableChannel));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableChannel__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableChannel = _react2.default.createElement(_servicechannel2.default, _extends({ key: index }, this.props.availableChannel));
                }
            }

            var broadcastAffiliateOf = undefined;
            if (this.props.broadcastAffiliateOf) {
                if (this.props.broadcastAffiliateOf instanceof Array) {
                    broadcastAffiliateOf = _react2.default.createElement(
                        'div',
                        { className: 'broadcastAffiliateOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'broadcastAffiliateOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'broadcastAffiliateOfs'
                        ),
                        this.props.broadcastAffiliateOf.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.broadcastAffiliateOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'broadcastAffiliateOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    broadcastAffiliateOf = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.broadcastAffiliateOf));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var serviceOutput = undefined;
            if (this.props.serviceOutput) {
                if (this.props.serviceOutput instanceof Array) {
                    serviceOutput = _react2.default.createElement(
                        'div',
                        { className: 'serviceOutput__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'serviceOutput__header', 'data-advice': 'HTML for the *head* of the section' },
                            'serviceOutputs'
                        ),
                        this.props.serviceOutput.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.serviceOutput));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'serviceOutput__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    serviceOutput = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.serviceOutput));
                }
            }

            var parentService = undefined;
            if (this.props.parentService) {
                if (this.props.parentService instanceof Array) {
                    parentService = _react2.default.createElement(
                        'div',
                        { className: 'parentService__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'parentService__header', 'data-advice': 'HTML for the *head* of the section' },
                            'parentServices'
                        ),
                        this.props.parentService.map(function (item, index) {
                            return _react2.default.createElement(BroadcastService, _extends({ key: index }, _this2.props.parentService));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'parentService__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    parentService = _react2.default.createElement(BroadcastService, _extends({ key: index }, this.props.parentService));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'BroadcastService-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'BroadcastService-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var broadcaster = undefined;
            if (this.props.broadcaster) {
                if (this.props.broadcaster instanceof Array) {
                    broadcaster = _react2.default.createElement(
                        'div',
                        { className: 'broadcaster__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'broadcaster__header', 'data-advice': 'HTML for the *head* of the section' },
                            'broadcasters'
                        ),
                        this.props.broadcaster.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.broadcaster));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'broadcaster__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    broadcaster = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.broadcaster));
                }
            }

            var hoursAvailable = undefined;
            if (this.props.hoursAvailable) {
                if (this.props.hoursAvailable instanceof Array) {
                    hoursAvailable = _react2.default.createElement(
                        'div',
                        { className: 'hoursAvailable__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hoursAvailable__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hoursAvailables'
                        ),
                        this.props.hoursAvailable.map(function (item, index) {
                            return _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, _this2.props.hoursAvailable));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hoursAvailable__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hoursAvailable = _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, this.props.hoursAvailable));
                }
            }

            var areaServed = undefined;
            if (this.props.areaServed) {
                if (this.props.areaServed instanceof Array) {
                    areaServed = _react2.default.createElement(
                        'div',
                        { className: 'areaServed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'areaServed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'areaServeds'
                        ),
                        this.props.areaServed.map(function (item, index) {
                            if (_this2.props['@type'] === 'AdministrativeArea') {
                                return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'BroadcastService-areaServed' },
                                        'areaServed: ',
                                        _this2.props.areaServed
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.areaServed));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'areaServed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'AdministrativeArea') {
                        areaServed = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Place') {
                        areaServed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Text') {
                        areaServed = _react2.default.createElement(
                            'div',
                            { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'BroadcastService-areaServed' },
                                'areaServed: ',
                                this.props.areaServed
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        areaServed = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.areaServed));
                    }
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var hasOfferCatalog = undefined;
            if (this.props.hasOfferCatalog) {
                if (this.props.hasOfferCatalog instanceof Array) {
                    hasOfferCatalog = _react2.default.createElement(
                        'div',
                        { className: 'hasOfferCatalog__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasOfferCatalog__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasOfferCatalogs'
                        ),
                        this.props.hasOfferCatalog.map(function (item, index) {
                            return _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, _this2.props.hasOfferCatalog));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasOfferCatalog__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasOfferCatalog = _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, this.props.hasOfferCatalog));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'BroadcastService-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'BroadcastService-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'BroadcastService' },
                category,
                potentialAction,
                availableChannel,
                broadcastAffiliateOf,
                review,
                serviceOutput,
                parentService,
                mainEntityOfPage,
                offers,
                aggregateRating,
                broadcaster,
                hoursAvailable,
                areaServed,
                provider,
                hasOfferCatalog,
                image
            );
        }
    }]);

    return BroadcastService;
}(_react.Component);

exports.default = BroadcastService;
;

BroadcastService.defaultProps = {};

BroadcastService.propTypes = {
    category: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    availableChannel: _react2.default.propTypes.object,
    broadcastAffiliateOf: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    serviceOutput: _react2.default.propTypes.object,
    parentService: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    broadcaster: _react2.default.propTypes.object,
    hoursAvailable: _react2.default.propTypes.object,
    areaServed: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    hasOfferCatalog: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* BusinessEntityType - A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Commonly used values:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Business
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Enduser
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#PublicInstitution
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Reseller. Generated automatically by the reactGenerator. */


var BusinessEntityType = function (_Component) {
    _inherits(BusinessEntityType, _Component);

    function BusinessEntityType() {
        _classCallCheck(this, BusinessEntityType);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(BusinessEntityType).apply(this, arguments));
    }

    _createClass(BusinessEntityType, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'BusinessEntityType-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'BusinessEntityType-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'BusinessEntityType-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'BusinessEntityType-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'BusinessEntityType' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return BusinessEntityType;
}(_react.Component);

exports.default = BusinessEntityType;
;

BusinessEntityType.defaultProps = {};

BusinessEntityType.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* BusinessFunction - The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Commonly used values:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#ConstructionInstallation
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Dispose
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#LeaseOut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Maintain
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#ProvideService
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Repair
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Sell
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Buy. Generated automatically by the reactGenerator. */


var BusinessFunction = function (_Component) {
    _inherits(BusinessFunction, _Component);

    function BusinessFunction() {
        _classCallCheck(this, BusinessFunction);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(BusinessFunction).apply(this, arguments));
    }

    _createClass(BusinessFunction, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'BusinessFunction-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'BusinessFunction-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'BusinessFunction-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'BusinessFunction-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'BusinessFunction' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return BusinessFunction;
}(_react.Component);

exports.default = BusinessFunction;
;

BusinessFunction.defaultProps = {};

BusinessFunction.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Class - A class, also often called a 'Type'; equivalent to rdfs:Class.. Generated automatically by the reactGenerator. */


var Class = function (_Component) {
    _inherits(Class, _Component);

    function Class() {
        _classCallCheck(this, Class);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Class).apply(this, arguments));
    }

    _createClass(Class, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Class-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Class-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Class-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Class-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(Class, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(Class, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Class' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return Class;
}(_react.Component);

exports.default = Class;
;

Class.defaultProps = {};

Class.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _question = require('./question.js');

var _question2 = _interopRequireDefault(_question);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Comment - A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the "text" property, and its topic via "about", properties shared with all CreativeWorks.. Generated automatically by the reactGenerator. */


var Comment = function (_Component) {
    _inherits(Comment, _Component);

    function Comment() {
        _classCallCheck(this, Comment);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Comment).apply(this, arguments));
    }

    _createClass(Comment, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(Comment, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(Comment, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Comment-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Comment-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Comment-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Comment-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Comment-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Comment-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var parentItem = undefined;
            if (this.props.parentItem) {
                if (this.props.parentItem instanceof Array) {
                    parentItem = _react2.default.createElement(
                        'div',
                        { className: 'parentItem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'parentItem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'parentItems'
                        ),
                        this.props.parentItem.map(function (item, index) {
                            return _react2.default.createElement(_question2.default, _extends({ key: index }, _this2.props.parentItem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'parentItem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    parentItem = _react2.default.createElement(_question2.default, _extends({ key: index }, this.props.parentItem));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Comment-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Comment-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Comment-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Comment-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Comment-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Comment-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Comment-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Comment-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Comment-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Comment-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Comment-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Comment-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Comment-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Comment-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Comment-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Comment-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Comment-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Comment-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Comment-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Comment-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Comment-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Comment-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Comment-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    } else if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Comment-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Comment' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                parentItem,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return Comment;
}(_react.Component);

exports.default = Comment;
;

Comment.defaultProps = {};

Comment.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    parentItem: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _openinghoursspecification = require('./openinghoursspecification.js');

var _openinghoursspecification2 = _interopRequireDefault(_openinghoursspecification);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _contactpointoption = require('./contactpointoption.js');

var _contactpointoption2 = _interopRequireDefault(_contactpointoption);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ContactPoint - A contact point\u2014for example, a Customer Complaints department.. Generated automatically by the reactGenerator. */


var ContactPoint = function (_Component) {
    _inherits(ContactPoint, _Component);

    function ContactPoint() {
        _classCallCheck(this, ContactPoint);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ContactPoint).apply(this, arguments));
    }

    _createClass(ContactPoint, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var productSupported = undefined;
            if (this.props.productSupported) {
                if (this.props.productSupported instanceof Array) {
                    productSupported = _react2.default.createElement(
                        'div',
                        { className: 'productSupported__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'productSupported__header', 'data-advice': 'HTML for the *head* of the section' },
                            'productSupporteds'
                        ),
                        this.props.productSupported.map(function (item, index) {
                            if (_this2.props['@type'] === 'Product') {
                                return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.productSupported));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'productSupported', 'data-advice': 'Put your HTML here. productSupported is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ContactPoint-productSupported' },
                                        'productSupported: ',
                                        _this2.props.productSupported
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'productSupported__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Product') {
                        productSupported = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.productSupported));
                    } else if (this.props['@type'] === 'Text') {
                        productSupported = _react2.default.createElement(
                            'div',
                            { className: 'productSupported', 'data-advice': 'Put your HTML here. productSupported is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ContactPoint-productSupported' },
                                'productSupported: ',
                                this.props.productSupported
                            )
                        );
                    }
                }
            }

            var contactOption = undefined;
            if (this.props.contactOption) {
                if (this.props.contactOption instanceof Array) {
                    contactOption = _react2.default.createElement(
                        'div',
                        { className: 'contactOption__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contactOption__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contactOptions'
                        ),
                        this.props.contactOption.map(function (item, index) {
                            return _react2.default.createElement(_contactpointoption2.default, _extends({ key: index }, _this2.props.contactOption));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contactOption__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contactOption = _react2.default.createElement(_contactpointoption2.default, _extends({ key: index }, this.props.contactOption));
                }
            }

            var hoursAvailable = undefined;
            if (this.props.hoursAvailable) {
                if (this.props.hoursAvailable instanceof Array) {
                    hoursAvailable = _react2.default.createElement(
                        'div',
                        { className: 'hoursAvailable__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hoursAvailable__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hoursAvailables'
                        ),
                        this.props.hoursAvailable.map(function (item, index) {
                            return _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, _this2.props.hoursAvailable));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hoursAvailable__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hoursAvailable = _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, this.props.hoursAvailable));
                }
            }

            var areaServed = undefined;
            if (this.props.areaServed) {
                if (this.props.areaServed instanceof Array) {
                    areaServed = _react2.default.createElement(
                        'div',
                        { className: 'areaServed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'areaServed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'areaServeds'
                        ),
                        this.props.areaServed.map(function (item, index) {
                            if (_this2.props['@type'] === 'AdministrativeArea') {
                                return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ContactPoint-areaServed' },
                                        'areaServed: ',
                                        _this2.props.areaServed
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.areaServed));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'areaServed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'AdministrativeArea') {
                        areaServed = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Place') {
                        areaServed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Text') {
                        areaServed = _react2.default.createElement(
                            'div',
                            { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ContactPoint-areaServed' },
                                'areaServed: ',
                                this.props.areaServed
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        areaServed = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.areaServed));
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ContactPoint-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ContactPoint-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ContactPoint-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ContactPoint-image', src: this.props.image })
                        );
                    }
                }
            }

            var availableLanguage = undefined;
            if (this.props.availableLanguage) {
                if (this.props.availableLanguage instanceof Array) {
                    availableLanguage = _react2.default.createElement(
                        'div',
                        { className: 'availableLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableLanguages'
                        ),
                        this.props.availableLanguage.map(function (item, index) {
                            return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.availableLanguage));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.availableLanguage));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ContactPoint' },
                potentialAction,
                productSupported,
                contactOption,
                hoursAvailable,
                areaServed,
                mainEntityOfPage,
                image,
                availableLanguage
            );
        }
    }]);

    return ContactPoint;
}(_react.Component);

exports.default = ContactPoint;
;

ContactPoint.defaultProps = {};

ContactPoint.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    productSupported: _react2.default.propTypes.object,
    contactOption: _react2.default.propTypes.object,
    hoursAvailable: _react2.default.propTypes.object,
    areaServed: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    availableLanguage: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ContactPointOption - Enumerated options related to a ContactPoint.. Generated automatically by the reactGenerator. */


var ContactPointOption = function (_Component) {
    _inherits(ContactPointOption, _Component);

    function ContactPointOption() {
        _classCallCheck(this, ContactPointOption);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ContactPointOption).apply(this, arguments));
    }

    _createClass(ContactPointOption, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ContactPointOption-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ContactPointOption-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ContactPointOption-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ContactPointOption-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ContactPointOption' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return ContactPointOption;
}(_react.Component);

exports.default = ContactPointOption;
;

ContactPointOption.defaultProps = {};

ContactPointOption.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _map = require('./map.js');

var _map2 = _interopRequireDefault(_map);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _openinghoursspecification = require('./openinghoursspecification.js');

var _openinghoursspecification2 = _interopRequireDefault(_openinghoursspecification);

var _photograph = require('./photograph.js');

var _photograph2 = _interopRequireDefault(_photograph);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _propertyvalue = require('./propertyvalue.js');

var _propertyvalue2 = _interopRequireDefault(_propertyvalue);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _geocoordinates = require('./geocoordinates.js');

var _geocoordinates2 = _interopRequireDefault(_geocoordinates);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Country - A country.. Generated automatically by the reactGenerator. */


var Country = function (_Component) {
    _inherits(Country, _Component);

    function Country() {
        _classCallCheck(this, Country);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Country).apply(this, arguments));
    }

    _createClass(Country, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var openingHoursSpecification = undefined;
            if (this.props.openingHoursSpecification) {
                if (this.props.openingHoursSpecification instanceof Array) {
                    openingHoursSpecification = _react2.default.createElement(
                        'div',
                        { className: 'openingHoursSpecification__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'openingHoursSpecification__header', 'data-advice': 'HTML for the *head* of the section' },
                            'openingHoursSpecifications'
                        ),
                        this.props.openingHoursSpecification.map(function (item, index) {
                            return _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, _this2.props.openingHoursSpecification));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'openingHoursSpecification__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    openingHoursSpecification = _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, this.props.openingHoursSpecification));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var photo = undefined;
            if (this.props.photo) {
                if (this.props.photo instanceof Array) {
                    photo = _react2.default.createElement(
                        'div',
                        { className: 'photo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'photo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'photos'
                        ),
                        this.props.photo.map(function (item, index) {
                            if (_this2.props['@type'] === 'Photograph') {
                                return _react2.default.createElement(_photograph2.default, _extends({ key: index }, _this2.props.photo));
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.photo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'photo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Photograph') {
                        photo = _react2.default.createElement(_photograph2.default, _extends({ key: index }, this.props.photo));
                    } else if (this.props['@type'] === 'ImageObject') {
                        photo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.photo));
                    }
                }
            }

            var hasMap = undefined;
            if (this.props.hasMap) {
                if (this.props.hasMap instanceof Array) {
                    hasMap = _react2.default.createElement(
                        'div',
                        { className: 'hasMap__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasMap__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasMaps'
                        ),
                        this.props.hasMap.map(function (item, index) {
                            if (_this2.props['@type'] === 'Map') {
                                return _react2.default.createElement(_map2.default, _extends({ key: index }, _this2.props.hasMap));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'hasMap', 'data-advice': 'Put your HTML here. hasMap is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Country-hasMap', href: _this2.props.hasMap, target: '_blank' },
                                        'hasMap'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasMap__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Map') {
                        hasMap = _react2.default.createElement(_map2.default, _extends({ key: index }, this.props.hasMap));
                    } else if (this.props['@type'] === 'URL') {
                        hasMap = _react2.default.createElement(
                            'div',
                            { className: 'hasMap', 'data-advice': 'Put your HTML here. hasMap is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Country-hasMap', href: this.props.hasMap, target: '_blank' },
                                'hasMap'
                            )
                        );
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var containedInPlace = undefined;
            if (this.props.containedInPlace) {
                if (this.props.containedInPlace instanceof Array) {
                    containedInPlace = _react2.default.createElement(
                        'div',
                        { className: 'containedInPlace__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'containedInPlace__header', 'data-advice': 'HTML for the *head* of the section' },
                            'containedInPlaces'
                        ),
                        this.props.containedInPlace.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.containedInPlace));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'containedInPlace__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    containedInPlace = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.containedInPlace));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var additionalProperty = undefined;
            if (this.props.additionalProperty) {
                if (this.props.additionalProperty instanceof Array) {
                    additionalProperty = _react2.default.createElement(
                        'div',
                        { className: 'additionalProperty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'additionalProperty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'additionalPropertys'
                        ),
                        this.props.additionalProperty.map(function (item, index) {
                            return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.additionalProperty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'additionalProperty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    additionalProperty = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.additionalProperty));
                }
            }

            var containsPlace = undefined;
            if (this.props.containsPlace) {
                if (this.props.containsPlace instanceof Array) {
                    containsPlace = _react2.default.createElement(
                        'div',
                        { className: 'containsPlace__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'containsPlace__header', 'data-advice': 'HTML for the *head* of the section' },
                            'containsPlaces'
                        ),
                        this.props.containsPlace.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.containsPlace));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'containsPlace__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    containsPlace = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.containsPlace));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Country-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Country-image', src: this.props.image })
                        );
                    }
                }
            }

            var address = undefined;
            if (this.props.address) {
                if (this.props.address instanceof Array) {
                    address = _react2.default.createElement(
                        'div',
                        { className: 'address__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'address__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addresss'
                        ),
                        this.props.address.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Country-address' },
                                        'address: ',
                                        _this2.props.address
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.address));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'address__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        address = _react2.default.createElement(
                            'div',
                            { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Country-address' },
                                'address: ',
                                this.props.address
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        address = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.address));
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Country-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Country-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var logo = undefined;
            if (this.props.logo) {
                if (this.props.logo instanceof Array) {
                    logo = _react2.default.createElement(
                        'div',
                        { className: 'logo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'logo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'logos'
                        ),
                        this.props.logo.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Country-logo', href: _this2.props.logo, target: '_blank' },
                                        'logo'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.logo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'logo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        logo = _react2.default.createElement(
                            'div',
                            { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Country-logo', href: this.props.logo, target: '_blank' },
                                'logo'
                            )
                        );
                    } else if (this.props['@type'] === 'ImageObject') {
                        logo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.logo));
                    }
                }
            }

            var geo = undefined;
            if (this.props.geo) {
                if (this.props.geo instanceof Array) {
                    geo = _react2.default.createElement(
                        'div',
                        { className: 'geo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'geo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'geos'
                        ),
                        this.props.geo.map(function (item, index) {
                            if (_this2.props['@type'] === 'GeoCoordinates') {
                                return _react2.default.createElement(_geocoordinates2.default, _extends({ key: index }, _this2.props.geo));
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.geo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'geo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'GeoCoordinates') {
                        geo = _react2.default.createElement(_geocoordinates2.default, _extends({ key: index }, this.props.geo));
                    } else if (this.props['@type'] === 'GeoShape') {
                        geo = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.geo));
                    }
                }
            }

            var event = undefined;
            if (this.props.event) {
                if (this.props.event instanceof Array) {
                    event = _react2.default.createElement(
                        'div',
                        { className: 'event__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'event__header', 'data-advice': 'HTML for the *head* of the section' },
                            'events'
                        ),
                        this.props.event.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.event));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'event__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    event = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.event));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Country' },
                openingHoursSpecification,
                potentialAction,
                photo,
                hasMap,
                review,
                containedInPlace,
                aggregateRating,
                additionalProperty,
                containsPlace,
                image,
                address,
                mainEntityOfPage,
                logo,
                geo,
                event
            );
        }
    }]);

    return Country;
}(_react.Component);

exports.default = Country;
;

Country.defaultProps = {};

Country.propTypes = {
    openingHoursSpecification: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    photo: _react2.default.propTypes.object,
    hasMap: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    containedInPlace: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    additionalProperty: _react2.default.propTypes.object,
    containsPlace: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    address: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    logo: _react2.default.propTypes.object,
    geo: _react2.default.propTypes.object,
    event: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* CreativeWork - The most generic kind of creative work, including books, movies, photographs, software programs, etc.. Generated automatically by the reactGenerator. */


var CreativeWork = function (_Component) {
    _inherits(CreativeWork, _Component);

    function CreativeWork() {
        _classCallCheck(this, CreativeWork);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(CreativeWork).apply(this, arguments));
    }

    _createClass(CreativeWork, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'CreativeWork-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'CreativeWork-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'CreativeWork-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'CreativeWork-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'CreativeWork-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(CreativeWork, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'CreativeWork-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(CreativeWork, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'CreativeWork-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(CreativeWork, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'CreativeWork-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(CreativeWork, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(CreativeWork, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(CreativeWork, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(CreativeWork, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(CreativeWork, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(CreativeWork, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(CreativeWork, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'CreativeWork-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'CreativeWork-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'CreativeWork-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'CreativeWork-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'CreativeWork-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'CreativeWork-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'CreativeWork-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'CreativeWork-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'CreativeWork-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'CreativeWork-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'CreativeWork-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'CreativeWork-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'CreativeWork-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'CreativeWork-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'CreativeWork-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'CreativeWork-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'CreativeWork-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'CreativeWork-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'CreativeWork-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'CreativeWork-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'CreativeWork-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(CreativeWork, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'CreativeWork-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(CreativeWork, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(CreativeWork, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(CreativeWork, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'CreativeWork' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return CreativeWork;
}(_react.Component);

exports.default = CreativeWork;
;

CreativeWork.defaultProps = {};

CreativeWork.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _dataset = require('./dataset.js');

var _dataset2 = _interopRequireDefault(_dataset);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* DataCatalog - A collection of datasets.. Generated automatically by the reactGenerator. */


var DataCatalog = function (_Component) {
    _inherits(DataCatalog, _Component);

    function DataCatalog() {
        _classCallCheck(this, DataCatalog);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DataCatalog).apply(this, arguments));
    }

    _createClass(DataCatalog, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataCatalog-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataCatalog-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'DataCatalog-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'DataCatalog-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataCatalog-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataCatalog-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var dataset = undefined;
            if (this.props.dataset) {
                if (this.props.dataset instanceof Array) {
                    dataset = _react2.default.createElement(
                        'div',
                        { className: 'dataset__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dataset__header', 'data-advice': 'HTML for the *head* of the section' },
                            'datasets'
                        ),
                        this.props.dataset.map(function (item, index) {
                            return _react2.default.createElement(_dataset2.default, _extends({ key: index }, _this2.props.dataset));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dataset__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    dataset = _react2.default.createElement(_dataset2.default, _extends({ key: index }, this.props.dataset));
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataCatalog-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataCatalog-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataCatalog-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataCatalog-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataCatalog-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataCatalog-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataCatalog-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataCatalog-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataCatalog-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataCatalog-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataCatalog-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataCatalog-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataCatalog-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataCatalog-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataCatalog-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataCatalog-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataCatalog-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataCatalog-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataCatalog-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataCatalog-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataCatalog-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataCatalog-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataCatalog-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataCatalog-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'DataCatalog' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                dataset,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return DataCatalog;
}(_react.Component);

exports.default = DataCatalog;
;

DataCatalog.defaultProps = {};

DataCatalog.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    dataset: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _newsarticle = require('./newsarticle.js');

var _newsarticle2 = _interopRequireDefault(_newsarticle);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _distance = require('./distance.js');

var _distance2 = _interopRequireDefault(_distance);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* DataDownload - A dataset in downloadable form.. Generated automatically by the reactGenerator. */


var DataDownload = function (_Component) {
    _inherits(DataDownload, _Component);

    function DataDownload() {
        _classCallCheck(this, DataDownload);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DataDownload).apply(this, arguments));
    }

    _createClass(DataDownload, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataDownload-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataDownload-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var encodesCreativeWork = undefined;
            if (this.props.encodesCreativeWork) {
                if (this.props.encodesCreativeWork instanceof Array) {
                    encodesCreativeWork = _react2.default.createElement(
                        'div',
                        { className: 'encodesCreativeWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encodesCreativeWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodesCreativeWorks'
                        ),
                        this.props.encodesCreativeWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.encodesCreativeWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encodesCreativeWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encodesCreativeWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.encodesCreativeWork));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'DataDownload-image', src: _this2.props.image })
                                );
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'DataDownload-image', src: this.props.image })
                        );
                    } else if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataDownload-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataDownload-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var height = undefined;
            if (this.props.height) {
                if (this.props.height instanceof Array) {
                    height = _react2.default.createElement(
                        'div',
                        { className: 'height__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'height__header', 'data-advice': 'HTML for the *head* of the section' },
                            'heights'
                        ),
                        this.props.height.map(function (item, index) {
                            if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.height));
                            } else if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.height));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'height__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'QuantitativeValue') {
                        height = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.height));
                    } else if (this.props['@type'] === 'Distance') {
                        height = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.height));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var productionCompany = undefined;
            if (this.props.productionCompany) {
                if (this.props.productionCompany instanceof Array) {
                    productionCompany = _react2.default.createElement(
                        'div',
                        { className: 'productionCompany__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'productionCompany__header', 'data-advice': 'HTML for the *head* of the section' },
                            'productionCompanys'
                        ),
                        this.props.productionCompany.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.productionCompany));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'productionCompany__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    productionCompany = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.productionCompany));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataDownload-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataDownload-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var associatedArticle = undefined;
            if (this.props.associatedArticle) {
                if (this.props.associatedArticle instanceof Array) {
                    associatedArticle = _react2.default.createElement(
                        'div',
                        { className: 'associatedArticle__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedArticle__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedArticles'
                        ),
                        this.props.associatedArticle.map(function (item, index) {
                            return _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, _this2.props.associatedArticle));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedArticle__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedArticle = _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, this.props.associatedArticle));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataDownload-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataDownload-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataDownload-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataDownload-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataDownload-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataDownload-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataDownload-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataDownload-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataDownload-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataDownload-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataDownload-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataDownload-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataDownload-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataDownload-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataDownload-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataDownload-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataDownload-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataDownload-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataDownload-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataDownload-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataDownload-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataDownload-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            var width = undefined;
            if (this.props.width) {
                if (this.props.width instanceof Array) {
                    width = _react2.default.createElement(
                        'div',
                        { className: 'width__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'width__header', 'data-advice': 'HTML for the *head* of the section' },
                            'widths'
                        ),
                        this.props.width.map(function (item, index) {
                            if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.width));
                            } else if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.width));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'width__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'QuantitativeValue') {
                        width = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.width));
                    } else if (this.props['@type'] === 'Distance') {
                        width = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.width));
                    }
                }
            }

            var regionsAllowed = undefined;
            if (this.props.regionsAllowed) {
                if (this.props.regionsAllowed instanceof Array) {
                    regionsAllowed = _react2.default.createElement(
                        'div',
                        { className: 'regionsAllowed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'regionsAllowed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'regionsAlloweds'
                        ),
                        this.props.regionsAllowed.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.regionsAllowed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'regionsAllowed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    regionsAllowed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.regionsAllowed));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'DataDownload' },
                comment,
                inLanguage,
                encodesCreativeWork,
                creator,
                image,
                citation,
                height,
                aggregateRating,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                producer,
                productionCompany,
                review,
                encoding,
                character,
                mainEntityOfPage,
                associatedArticle,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                timeRequired,
                interactionStatistic,
                educationalAlignment,
                duration,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                publication,
                hasPart,
                publisher,
                about,
                potentialAction,
                license,
                associatedMedia,
                workExample,
                author,
                audience,
                mentions,
                audio,
                sourceOrganization,
                width,
                regionsAllowed
            );
        }
    }]);

    return DataDownload;
}(_react.Component);

exports.default = DataDownload;
;

DataDownload.defaultProps = {};

DataDownload.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    encodesCreativeWork: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    height: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    productionCompany: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    associatedArticle: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object,
    width: _react2.default.propTypes.object,
    regionsAllowed: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _datadownload = require('./datadownload.js');

var _datadownload2 = _interopRequireDefault(_datadownload);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _datafeeditem = require('./datafeeditem.js');

var _datafeeditem2 = _interopRequireDefault(_datafeeditem);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _datacatalog = require('./datacatalog.js');

var _datacatalog2 = _interopRequireDefault(_datacatalog);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* DataFeed - A single feed providing structured information about one or more entities or topics.. Generated automatically by the reactGenerator. */


var DataFeed = function (_Component) {
    _inherits(DataFeed, _Component);

    function DataFeed() {
        _classCallCheck(this, DataFeed);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DataFeed).apply(this, arguments));
    }

    _createClass(DataFeed, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataFeed-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataFeed-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'DataFeed-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'DataFeed-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataFeed-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataFeed-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataFeed-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataFeed-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var spatial = undefined;
            if (this.props.spatial) {
                if (this.props.spatial instanceof Array) {
                    spatial = _react2.default.createElement(
                        'div',
                        { className: 'spatial__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'spatial__header', 'data-advice': 'HTML for the *head* of the section' },
                            'spatials'
                        ),
                        this.props.spatial.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.spatial));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'spatial__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    spatial = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.spatial));
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataFeed-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataFeed-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataFeed-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataFeed-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var includedDataCatalog = undefined;
            if (this.props.includedDataCatalog) {
                if (this.props.includedDataCatalog instanceof Array) {
                    includedDataCatalog = _react2.default.createElement(
                        'div',
                        { className: 'includedDataCatalog__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'includedDataCatalog__header', 'data-advice': 'HTML for the *head* of the section' },
                            'includedDataCatalogs'
                        ),
                        this.props.includedDataCatalog.map(function (item, index) {
                            return _react2.default.createElement(_datacatalog2.default, _extends({ key: index }, _this2.props.includedDataCatalog));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'includedDataCatalog__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    includedDataCatalog = _react2.default.createElement(_datacatalog2.default, _extends({ key: index }, this.props.includedDataCatalog));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataFeed-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataFeed-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataFeed-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataFeed-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataFeed-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataFeed-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataFeed-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataFeed-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataFeed-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataFeed-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataFeed-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataFeed-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataFeed-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataFeed-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataFeed-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataFeed-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataFeed-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataFeed-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var dataFeedElement = undefined;
            if (this.props.dataFeedElement) {
                if (this.props.dataFeedElement instanceof Array) {
                    dataFeedElement = _react2.default.createElement(
                        'div',
                        { className: 'dataFeedElement__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dataFeedElement__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dataFeedElements'
                        ),
                        this.props.dataFeedElement.map(function (item, index) {
                            if (_this2.props['@type'] === 'Thing') {
                                return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.dataFeedElement));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dataFeedElement', 'data-advice': 'Put your HTML here. dataFeedElement is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'DataFeed-dataFeedElement' },
                                        'dataFeedElement: ',
                                        _this2.props.dataFeedElement
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DataFeedItem') {
                                return _react2.default.createElement(_datafeeditem2.default, _extends({ key: index }, _this2.props.dataFeedElement));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dataFeedElement__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Thing') {
                        dataFeedElement = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.dataFeedElement));
                    } else if (this.props['@type'] === 'Text') {
                        dataFeedElement = _react2.default.createElement(
                            'div',
                            { className: 'dataFeedElement', 'data-advice': 'Put your HTML here. dataFeedElement is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'DataFeed-dataFeedElement' },
                                'dataFeedElement: ',
                                this.props.dataFeedElement
                            )
                        );
                    } else if (this.props['@type'] === 'DataFeedItem') {
                        dataFeedElement = _react2.default.createElement(_datafeeditem2.default, _extends({ key: index }, this.props.dataFeedElement));
                    }
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var distribution = undefined;
            if (this.props.distribution) {
                if (this.props.distribution instanceof Array) {
                    distribution = _react2.default.createElement(
                        'div',
                        { className: 'distribution__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'distribution__header', 'data-advice': 'HTML for the *head* of the section' },
                            'distributions'
                        ),
                        this.props.distribution.map(function (item, index) {
                            return _react2.default.createElement(_datadownload2.default, _extends({ key: index }, _this2.props.distribution));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'distribution__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    distribution = _react2.default.createElement(_datadownload2.default, _extends({ key: index }, this.props.distribution));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'DataFeed' },
                comment,
                inLanguage,
                producer,
                creator,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                encoding,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                spatial,
                isPartOf,
                recordedAt,
                dateModified,
                includedDataCatalog,
                interactionStatistic,
                educationalAlignment,
                provider,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                dataFeedElement,
                audience,
                mentions,
                distribution,
                audio,
                sourceOrganization
            );
        }
    }]);

    return DataFeed;
}(_react.Component);

exports.default = DataFeed;
;

DataFeed.defaultProps = {};

DataFeed.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    spatial: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    includedDataCatalog: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    dataFeedElement: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    distribution: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* DataFeedItem - A single item within a larger data feed.. Generated automatically by the reactGenerator. */


var DataFeedItem = function (_Component) {
    _inherits(DataFeedItem, _Component);

    function DataFeedItem() {
        _classCallCheck(this, DataFeedItem);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DataFeedItem).apply(this, arguments));
    }

    _createClass(DataFeedItem, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'DataFeedItem-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'DataFeedItem-image', src: this.props.image })
                        );
                    }
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataFeedItem-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataFeedItem-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataFeedItem-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataFeedItem-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var item = undefined;
            if (this.props.item) {
                if (this.props.item instanceof Array) {
                    item = _react2.default.createElement(
                        'div',
                        { className: 'item__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'item__header', 'data-advice': 'HTML for the *head* of the section' },
                            'items'
                        ),
                        this.props.item.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.item));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'item__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    item = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.item));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DataFeedItem-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DataFeedItem-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataFeedItem-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'DataFeedItem-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataFeedItem-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'DataFeedItem-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'DataFeedItem' },
                potentialAction,
                image,
                dateCreated,
                item,
                mainEntityOfPage,
                dateModified
            );
        }
    }]);

    return DataFeedItem;
}(_react.Component);

exports.default = DataFeedItem;
;

DataFeedItem.defaultProps = {};

DataFeedItem.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    item: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _datadownload = require('./datadownload.js');

var _datadownload2 = _interopRequireDefault(_datadownload);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _datacatalog = require('./datacatalog.js');

var _datacatalog2 = _interopRequireDefault(_datacatalog);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Dataset - A body of structured information describing some topic(s) of interest.. Generated automatically by the reactGenerator. */


var Dataset = function (_Component) {
    _inherits(Dataset, _Component);

    function Dataset() {
        _classCallCheck(this, Dataset);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Dataset).apply(this, arguments));
    }

    _createClass(Dataset, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Dataset-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Dataset-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Dataset-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Dataset-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Dataset-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Dataset-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Dataset-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Dataset-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var spatial = undefined;
            if (this.props.spatial) {
                if (this.props.spatial instanceof Array) {
                    spatial = _react2.default.createElement(
                        'div',
                        { className: 'spatial__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'spatial__header', 'data-advice': 'HTML for the *head* of the section' },
                            'spatials'
                        ),
                        this.props.spatial.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.spatial));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'spatial__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    spatial = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.spatial));
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Dataset-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Dataset-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Dataset-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Dataset-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var includedDataCatalog = undefined;
            if (this.props.includedDataCatalog) {
                if (this.props.includedDataCatalog instanceof Array) {
                    includedDataCatalog = _react2.default.createElement(
                        'div',
                        { className: 'includedDataCatalog__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'includedDataCatalog__header', 'data-advice': 'HTML for the *head* of the section' },
                            'includedDataCatalogs'
                        ),
                        this.props.includedDataCatalog.map(function (item, index) {
                            return _react2.default.createElement(_datacatalog2.default, _extends({ key: index }, _this2.props.includedDataCatalog));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'includedDataCatalog__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    includedDataCatalog = _react2.default.createElement(_datacatalog2.default, _extends({ key: index }, this.props.includedDataCatalog));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Dataset-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Dataset-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Dataset-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Dataset-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Dataset-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Dataset-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Dataset-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Dataset-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Dataset-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Dataset-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Dataset-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Dataset-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Dataset-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Dataset-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Dataset-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Dataset-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Dataset-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    } else if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Dataset-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var distribution = undefined;
            if (this.props.distribution) {
                if (this.props.distribution instanceof Array) {
                    distribution = _react2.default.createElement(
                        'div',
                        { className: 'distribution__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'distribution__header', 'data-advice': 'HTML for the *head* of the section' },
                            'distributions'
                        ),
                        this.props.distribution.map(function (item, index) {
                            return _react2.default.createElement(_datadownload2.default, _extends({ key: index }, _this2.props.distribution));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'distribution__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    distribution = _react2.default.createElement(_datadownload2.default, _extends({ key: index }, this.props.distribution));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Dataset' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                spatial,
                isPartOf,
                recordedAt,
                dateModified,
                includedDataCatalog,
                interactionStatistic,
                educationalAlignment,
                provider,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                distribution,
                audio,
                sourceOrganization
            );
        }
    }]);

    return Dataset;
}(_react.Component);

exports.default = Dataset;
;

Dataset.defaultProps = {};

Dataset.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    spatial: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    includedDataCatalog: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    distribution: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* DayOfWeek - The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Commonly used values:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Monday
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Tuesday
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Wednesday
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Thursday
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Friday
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Saturday
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Sunday
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#PublicHolidays. Generated automatically by the reactGenerator. */


var DayOfWeek = function (_Component) {
    _inherits(DayOfWeek, _Component);

    function DayOfWeek() {
        _classCallCheck(this, DayOfWeek);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DayOfWeek).apply(this, arguments));
    }

    _createClass(DayOfWeek, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DayOfWeek-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DayOfWeek-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'DayOfWeek-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'DayOfWeek-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'DayOfWeek' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return DayOfWeek;
}(_react.Component);

exports.default = DayOfWeek;
;

DayOfWeek.defaultProps = {};

DayOfWeek.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* DeliveryMethod - A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Commonly used values:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#DeliveryModeDirectDownload
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#DeliveryModeFreight
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#DeliveryModeMail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#DeliveryModeOwnFleet
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#DeliveryModePickUp
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#DHL
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#FederalExpress
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#UPS. Generated automatically by the reactGenerator. */


var DeliveryMethod = function (_Component) {
    _inherits(DeliveryMethod, _Component);

    function DeliveryMethod() {
        _classCallCheck(this, DeliveryMethod);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DeliveryMethod).apply(this, arguments));
    }

    _createClass(DeliveryMethod, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'DeliveryMethod-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'DeliveryMethod-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'DeliveryMethod-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'DeliveryMethod-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'DeliveryMethod' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return DeliveryMethod;
}(_react.Component);

exports.default = DeliveryMethod;
;

DeliveryMethod.defaultProps = {};

DeliveryMethod.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _itemavailability = require('./itemavailability.js');

var _itemavailability2 = _interopRequireDefault(_itemavailability);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _warrantypromise = require('./warrantypromise.js');

var _warrantypromise2 = _interopRequireDefault(_warrantypromise);

var _service = require('./service.js');

var _service2 = _interopRequireDefault(_service);

var _offeritemcondition = require('./offeritemcondition.js');

var _offeritemcondition2 = _interopRequireDefault(_offeritemcondition);

var _businessentitytype = require('./businessentitytype.js');

var _businessentitytype2 = _interopRequireDefault(_businessentitytype);

var _businessfunction = require('./businessfunction.js');

var _businessfunction2 = _interopRequireDefault(_businessfunction);

var _pricespecification = require('./pricespecification.js');

var _pricespecification2 = _interopRequireDefault(_pricespecification);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _deliverymethod = require('./deliverymethod.js');

var _deliverymethod2 = _interopRequireDefault(_deliverymethod);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _paymentmethod = require('./paymentmethod.js');

var _paymentmethod2 = _interopRequireDefault(_paymentmethod);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _typeandquantitynode = require('./typeandquantitynode.js');

var _typeandquantitynode2 = _interopRequireDefault(_typeandquantitynode);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Demand - A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.. Generated automatically by the reactGenerator. */


var Demand = function (_Component) {
    _inherits(Demand, _Component);

    function Demand() {
        _classCallCheck(this, Demand);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Demand).apply(this, arguments));
    }

    _createClass(Demand, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var warranty = undefined;
            if (this.props.warranty) {
                if (this.props.warranty instanceof Array) {
                    warranty = _react2.default.createElement(
                        'div',
                        { className: 'warranty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'warranty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'warrantys'
                        ),
                        this.props.warranty.map(function (item, index) {
                            return _react2.default.createElement(_warrantypromise2.default, _extends({ key: index }, _this2.props.warranty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'warranty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    warranty = _react2.default.createElement(_warrantypromise2.default, _extends({ key: index }, this.props.warranty));
                }
            }

            var ineligibleRegion = undefined;
            if (this.props.ineligibleRegion) {
                if (this.props.ineligibleRegion instanceof Array) {
                    ineligibleRegion = _react2.default.createElement(
                        'div',
                        { className: 'ineligibleRegion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ineligibleRegion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'ineligibleRegions'
                        ),
                        this.props.ineligibleRegion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.ineligibleRegion));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'ineligibleRegion', 'data-advice': 'Put your HTML here. ineligibleRegion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Demand-ineligibleRegion' },
                                        'ineligibleRegion: ',
                                        _this2.props.ineligibleRegion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.ineligibleRegion));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'ineligibleRegion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        ineligibleRegion = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.ineligibleRegion));
                    } else if (this.props['@type'] === 'Text') {
                        ineligibleRegion = _react2.default.createElement(
                            'div',
                            { className: 'ineligibleRegion', 'data-advice': 'Put your HTML here. ineligibleRegion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Demand-ineligibleRegion' },
                                'ineligibleRegion: ',
                                this.props.ineligibleRegion
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        ineligibleRegion = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.ineligibleRegion));
                    }
                }
            }

            var eligibleRegion = undefined;
            if (this.props.eligibleRegion) {
                if (this.props.eligibleRegion instanceof Array) {
                    eligibleRegion = _react2.default.createElement(
                        'div',
                        { className: 'eligibleRegion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleRegion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleRegions'
                        ),
                        this.props.eligibleRegion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.eligibleRegion));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'eligibleRegion', 'data-advice': 'Put your HTML here. eligibleRegion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Demand-eligibleRegion' },
                                        'eligibleRegion: ',
                                        _this2.props.eligibleRegion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.eligibleRegion));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleRegion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        eligibleRegion = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.eligibleRegion));
                    } else if (this.props['@type'] === 'Text') {
                        eligibleRegion = _react2.default.createElement(
                            'div',
                            { className: 'eligibleRegion', 'data-advice': 'Put your HTML here. eligibleRegion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Demand-eligibleRegion' },
                                'eligibleRegion: ',
                                this.props.eligibleRegion
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        eligibleRegion = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.eligibleRegion));
                    }
                }
            }

            var businessFunction = undefined;
            if (this.props.businessFunction) {
                if (this.props.businessFunction instanceof Array) {
                    businessFunction = _react2.default.createElement(
                        'div',
                        { className: 'businessFunction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'businessFunction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'businessFunctions'
                        ),
                        this.props.businessFunction.map(function (item, index) {
                            return _react2.default.createElement(_businessfunction2.default, _extends({ key: index }, _this2.props.businessFunction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'businessFunction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    businessFunction = _react2.default.createElement(_businessfunction2.default, _extends({ key: index }, this.props.businessFunction));
                }
            }

            var deliveryLeadTime = undefined;
            if (this.props.deliveryLeadTime) {
                if (this.props.deliveryLeadTime instanceof Array) {
                    deliveryLeadTime = _react2.default.createElement(
                        'div',
                        { className: 'deliveryLeadTime__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'deliveryLeadTime__header', 'data-advice': 'HTML for the *head* of the section' },
                            'deliveryLeadTimes'
                        ),
                        this.props.deliveryLeadTime.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.deliveryLeadTime));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'deliveryLeadTime__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    deliveryLeadTime = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.deliveryLeadTime));
                }
            }

            var availability = undefined;
            if (this.props.availability) {
                if (this.props.availability instanceof Array) {
                    availability = _react2.default.createElement(
                        'div',
                        { className: 'availability__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availability__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availabilitys'
                        ),
                        this.props.availability.map(function (item, index) {
                            return _react2.default.createElement(_itemavailability2.default, _extends({ key: index }, _this2.props.availability));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availability__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availability = _react2.default.createElement(_itemavailability2.default, _extends({ key: index }, this.props.availability));
                }
            }

            var inventoryLevel = undefined;
            if (this.props.inventoryLevel) {
                if (this.props.inventoryLevel instanceof Array) {
                    inventoryLevel = _react2.default.createElement(
                        'div',
                        { className: 'inventoryLevel__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inventoryLevel__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inventoryLevels'
                        ),
                        this.props.inventoryLevel.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.inventoryLevel));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inventoryLevel__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    inventoryLevel = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.inventoryLevel));
                }
            }

            var seller = undefined;
            if (this.props.seller) {
                if (this.props.seller instanceof Array) {
                    seller = _react2.default.createElement(
                        'div',
                        { className: 'seller__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'seller__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sellers'
                        ),
                        this.props.seller.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.seller));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.seller));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'seller__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        seller = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.seller));
                    } else if (this.props['@type'] === 'Organization') {
                        seller = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.seller));
                    }
                }
            }

            var includesObject = undefined;
            if (this.props.includesObject) {
                if (this.props.includesObject instanceof Array) {
                    includesObject = _react2.default.createElement(
                        'div',
                        { className: 'includesObject__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'includesObject__header', 'data-advice': 'HTML for the *head* of the section' },
                            'includesObjects'
                        ),
                        this.props.includesObject.map(function (item, index) {
                            return _react2.default.createElement(_typeandquantitynode2.default, _extends({ key: index }, _this2.props.includesObject));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'includesObject__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    includesObject = _react2.default.createElement(_typeandquantitynode2.default, _extends({ key: index }, this.props.includesObject));
                }
            }

            var eligibleDuration = undefined;
            if (this.props.eligibleDuration) {
                if (this.props.eligibleDuration instanceof Array) {
                    eligibleDuration = _react2.default.createElement(
                        'div',
                        { className: 'eligibleDuration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleDuration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleDurations'
                        ),
                        this.props.eligibleDuration.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.eligibleDuration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleDuration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleDuration = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.eligibleDuration));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Demand-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Demand-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Demand-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Demand-image', src: this.props.image })
                        );
                    }
                }
            }

            var advanceBookingRequirement = undefined;
            if (this.props.advanceBookingRequirement) {
                if (this.props.advanceBookingRequirement instanceof Array) {
                    advanceBookingRequirement = _react2.default.createElement(
                        'div',
                        { className: 'advanceBookingRequirement__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'advanceBookingRequirement__header', 'data-advice': 'HTML for the *head* of the section' },
                            'advanceBookingRequirements'
                        ),
                        this.props.advanceBookingRequirement.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.advanceBookingRequirement));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'advanceBookingRequirement__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    advanceBookingRequirement = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.advanceBookingRequirement));
                }
            }

            var availableAtOrFrom = undefined;
            if (this.props.availableAtOrFrom) {
                if (this.props.availableAtOrFrom instanceof Array) {
                    availableAtOrFrom = _react2.default.createElement(
                        'div',
                        { className: 'availableAtOrFrom__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableAtOrFrom__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableAtOrFroms'
                        ),
                        this.props.availableAtOrFrom.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.availableAtOrFrom));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableAtOrFrom__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableAtOrFrom = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.availableAtOrFrom));
                }
            }

            var eligibleCustomerType = undefined;
            if (this.props.eligibleCustomerType) {
                if (this.props.eligibleCustomerType instanceof Array) {
                    eligibleCustomerType = _react2.default.createElement(
                        'div',
                        { className: 'eligibleCustomerType__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleCustomerType__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleCustomerTypes'
                        ),
                        this.props.eligibleCustomerType.map(function (item, index) {
                            return _react2.default.createElement(_businessentitytype2.default, _extends({ key: index }, _this2.props.eligibleCustomerType));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleCustomerType__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleCustomerType = _react2.default.createElement(_businessentitytype2.default, _extends({ key: index }, this.props.eligibleCustomerType));
                }
            }

            var priceSpecification = undefined;
            if (this.props.priceSpecification) {
                if (this.props.priceSpecification instanceof Array) {
                    priceSpecification = _react2.default.createElement(
                        'div',
                        { className: 'priceSpecification__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'priceSpecification__header', 'data-advice': 'HTML for the *head* of the section' },
                            'priceSpecifications'
                        ),
                        this.props.priceSpecification.map(function (item, index) {
                            return _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, _this2.props.priceSpecification));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'priceSpecification__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    priceSpecification = _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, this.props.priceSpecification));
                }
            }

            var acceptedPaymentMethod = undefined;
            if (this.props.acceptedPaymentMethod) {
                if (this.props.acceptedPaymentMethod instanceof Array) {
                    acceptedPaymentMethod = _react2.default.createElement(
                        'div',
                        { className: 'acceptedPaymentMethod__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'acceptedPaymentMethod__header', 'data-advice': 'HTML for the *head* of the section' },
                            'acceptedPaymentMethods'
                        ),
                        this.props.acceptedPaymentMethod.map(function (item, index) {
                            return _react2.default.createElement(_paymentmethod2.default, _extends({ key: index }, _this2.props.acceptedPaymentMethod));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'acceptedPaymentMethod__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    acceptedPaymentMethod = _react2.default.createElement(_paymentmethod2.default, _extends({ key: index }, this.props.acceptedPaymentMethod));
                }
            }

            var eligibleTransactionVolume = undefined;
            if (this.props.eligibleTransactionVolume) {
                if (this.props.eligibleTransactionVolume instanceof Array) {
                    eligibleTransactionVolume = _react2.default.createElement(
                        'div',
                        { className: 'eligibleTransactionVolume__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleTransactionVolume__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleTransactionVolumes'
                        ),
                        this.props.eligibleTransactionVolume.map(function (item, index) {
                            return _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, _this2.props.eligibleTransactionVolume));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleTransactionVolume__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleTransactionVolume = _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, this.props.eligibleTransactionVolume));
                }
            }

            var eligibleQuantity = undefined;
            if (this.props.eligibleQuantity) {
                if (this.props.eligibleQuantity instanceof Array) {
                    eligibleQuantity = _react2.default.createElement(
                        'div',
                        { className: 'eligibleQuantity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleQuantity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleQuantitys'
                        ),
                        this.props.eligibleQuantity.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.eligibleQuantity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleQuantity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleQuantity = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.eligibleQuantity));
                }
            }

            var itemCondition = undefined;
            if (this.props.itemCondition) {
                if (this.props.itemCondition instanceof Array) {
                    itemCondition = _react2.default.createElement(
                        'div',
                        { className: 'itemCondition__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemCondition__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemConditions'
                        ),
                        this.props.itemCondition.map(function (item, index) {
                            return _react2.default.createElement(_offeritemcondition2.default, _extends({ key: index }, _this2.props.itemCondition));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemCondition__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    itemCondition = _react2.default.createElement(_offeritemcondition2.default, _extends({ key: index }, this.props.itemCondition));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var availableDeliveryMethod = undefined;
            if (this.props.availableDeliveryMethod) {
                if (this.props.availableDeliveryMethod instanceof Array) {
                    availableDeliveryMethod = _react2.default.createElement(
                        'div',
                        { className: 'availableDeliveryMethod__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableDeliveryMethod__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableDeliveryMethods'
                        ),
                        this.props.availableDeliveryMethod.map(function (item, index) {
                            return _react2.default.createElement(_deliverymethod2.default, _extends({ key: index }, _this2.props.availableDeliveryMethod));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableDeliveryMethod__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableDeliveryMethod = _react2.default.createElement(_deliverymethod2.default, _extends({ key: index }, this.props.availableDeliveryMethod));
                }
            }

            var itemOffered = undefined;
            if (this.props.itemOffered) {
                if (this.props.itemOffered instanceof Array) {
                    itemOffered = _react2.default.createElement(
                        'div',
                        { className: 'itemOffered__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemOffered__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemOffereds'
                        ),
                        this.props.itemOffered.map(function (item, index) {
                            if (_this2.props['@type'] === 'Product') {
                                return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.itemOffered));
                            } else if (_this2.props['@type'] === 'Service') {
                                return _react2.default.createElement(_service2.default, _extends({ key: index }, _this2.props.itemOffered));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemOffered__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Product') {
                        itemOffered = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.itemOffered));
                    } else if (this.props['@type'] === 'Service') {
                        itemOffered = _react2.default.createElement(_service2.default, _extends({ key: index }, this.props.itemOffered));
                    }
                }
            }

            var areaServed = undefined;
            if (this.props.areaServed) {
                if (this.props.areaServed instanceof Array) {
                    areaServed = _react2.default.createElement(
                        'div',
                        { className: 'areaServed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'areaServed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'areaServeds'
                        ),
                        this.props.areaServed.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Demand-areaServed' },
                                        'areaServed: ',
                                        _this2.props.areaServed
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'AdministrativeArea') {
                                return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.areaServed));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'areaServed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        areaServed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Text') {
                        areaServed = _react2.default.createElement(
                            'div',
                            { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Demand-areaServed' },
                                'areaServed: ',
                                this.props.areaServed
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        areaServed = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'AdministrativeArea') {
                        areaServed = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.areaServed));
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Demand' },
                warranty,
                ineligibleRegion,
                eligibleRegion,
                businessFunction,
                deliveryLeadTime,
                availability,
                inventoryLevel,
                seller,
                includesObject,
                eligibleDuration,
                mainEntityOfPage,
                image,
                advanceBookingRequirement,
                availableAtOrFrom,
                eligibleCustomerType,
                priceSpecification,
                acceptedPaymentMethod,
                eligibleTransactionVolume,
                eligibleQuantity,
                itemCondition,
                potentialAction,
                availableDeliveryMethod,
                itemOffered,
                areaServed
            );
        }
    }]);

    return Demand;
}(_react.Component);

exports.default = Demand;
;

Demand.defaultProps = {};

Demand.propTypes = {
    warranty: _react2.default.propTypes.object,
    ineligibleRegion: _react2.default.propTypes.object,
    eligibleRegion: _react2.default.propTypes.object,
    businessFunction: _react2.default.propTypes.object,
    deliveryLeadTime: _react2.default.propTypes.object,
    availability: _react2.default.propTypes.object,
    inventoryLevel: _react2.default.propTypes.object,
    seller: _react2.default.propTypes.object,
    includesObject: _react2.default.propTypes.object,
    eligibleDuration: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    advanceBookingRequirement: _react2.default.propTypes.object,
    availableAtOrFrom: _react2.default.propTypes.object,
    eligibleCustomerType: _react2.default.propTypes.object,
    priceSpecification: _react2.default.propTypes.object,
    acceptedPaymentMethod: _react2.default.propTypes.object,
    eligibleTransactionVolume: _react2.default.propTypes.object,
    eligibleQuantity: _react2.default.propTypes.object,
    itemCondition: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    availableDeliveryMethod: _react2.default.propTypes.object,
    itemOffered: _react2.default.propTypes.object,
    areaServed: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Distance - Properties that take Distances as values are of the form '<Number> <Length unit of measure>'. E.g., '7 ft'.. Generated automatically by the reactGenerator. */


var Distance = function (_Component) {
    _inherits(Distance, _Component);

    function Distance() {
        _classCallCheck(this, Distance);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Distance).apply(this, arguments));
    }

    _createClass(Distance, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Distance-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Distance-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Distance-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Distance-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Distance' },
                mainEntityOfPage,
                image,
                potentialAction
            );
        }
    }]);

    return Distance;
}(_react.Component);

exports.default = Distance;
;

Distance.defaultProps = {};

Distance.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Duration - Quantity: Duration (use ISO 8601 duration format).. Generated automatically by the reactGenerator. */


var Duration = function (_Component) {
    _inherits(Duration, _Component);

    function Duration() {
        _classCallCheck(this, Duration);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Duration).apply(this, arguments));
    }

    _createClass(Duration, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Duration-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Duration-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Duration-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Duration-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Duration' },
                mainEntityOfPage,
                image,
                potentialAction
            );
        }
    }]);

    return Duration;
}(_react.Component);

exports.default = Duration;
;

Duration.defaultProps = {};

Duration.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _softwareapplication = require('./softwareapplication.js');

var _softwareapplication2 = _interopRequireDefault(_softwareapplication);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* EntryPoint - An entry point, within some Web-based protocol.. Generated automatically by the reactGenerator. */


var EntryPoint = function (_Component) {
    _inherits(EntryPoint, _Component);

    function EntryPoint() {
        _classCallCheck(this, EntryPoint);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(EntryPoint).apply(this, arguments));
    }

    _createClass(EntryPoint, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'EntryPoint-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'EntryPoint-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var actionApplication = undefined;
            if (this.props.actionApplication) {
                if (this.props.actionApplication instanceof Array) {
                    actionApplication = _react2.default.createElement(
                        'div',
                        { className: 'actionApplication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'actionApplication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'actionApplications'
                        ),
                        this.props.actionApplication.map(function (item, index) {
                            return _react2.default.createElement(_softwareapplication2.default, _extends({ key: index }, _this2.props.actionApplication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'actionApplication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    actionApplication = _react2.default.createElement(_softwareapplication2.default, _extends({ key: index }, this.props.actionApplication));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'EntryPoint-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'EntryPoint-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var actionPlatform = undefined;
            if (this.props.actionPlatform) {
                if (this.props.actionPlatform instanceof Array) {
                    actionPlatform = _react2.default.createElement(
                        'div',
                        { className: 'actionPlatform__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'actionPlatform__header', 'data-advice': 'HTML for the *head* of the section' },
                            'actionPlatforms'
                        ),
                        this.props.actionPlatform.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'actionPlatform', 'data-advice': 'Put your HTML here. actionPlatform is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'EntryPoint-actionPlatform', href: _this2.props.actionPlatform, target: '_blank' },
                                        'actionPlatform'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'actionPlatform', 'data-advice': 'Put your HTML here. actionPlatform is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'EntryPoint-actionPlatform' },
                                        'actionPlatform: ',
                                        _this2.props.actionPlatform
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'actionPlatform__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        actionPlatform = _react2.default.createElement(
                            'div',
                            { className: 'actionPlatform', 'data-advice': 'Put your HTML here. actionPlatform is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'EntryPoint-actionPlatform', href: this.props.actionPlatform, target: '_blank' },
                                'actionPlatform'
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        actionPlatform = _react2.default.createElement(
                            'div',
                            { className: 'actionPlatform', 'data-advice': 'Put your HTML here. actionPlatform is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'EntryPoint-actionPlatform' },
                                'actionPlatform: ',
                                this.props.actionPlatform
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'EntryPoint' },
                mainEntityOfPage,
                actionApplication,
                image,
                potentialAction,
                actionPlatform
            );
        }
    }]);

    return EntryPoint;
}(_react.Component);

exports.default = EntryPoint;
;

EntryPoint.defaultProps = {};

EntryPoint.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    actionApplication: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    actionPlatform: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Enumeration - Lists or enumerations\u2014for example, a list of cuisines or music genres, etc.. Generated automatically by the reactGenerator. */


var Enumeration = function (_Component) {
    _inherits(Enumeration, _Component);

    function Enumeration() {
        _classCallCheck(this, Enumeration);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Enumeration).apply(this, arguments));
    }

    _createClass(Enumeration, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Enumeration-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Enumeration-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Enumeration-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Enumeration-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(Enumeration, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(Enumeration, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Enumeration' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return Enumeration;
}(_react.Component);

exports.default = Enumeration;
;

Enumeration.defaultProps = {};

Enumeration.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _eventstatustype = require('./eventstatustype.js');

var _eventstatustype2 = _interopRequireDefault(_eventstatustype);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Event - An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the 'offers' property. Repeated events may be structured as separate Event objects.. Generated automatically by the reactGenerator. */


var Event = function (_Component) {
    _inherits(Event, _Component);

    function Event() {
        _classCallCheck(this, Event);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Event).apply(this, arguments));
    }

    _createClass(Event, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Event-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Event-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var attendee = undefined;
            if (this.props.attendee) {
                if (this.props.attendee instanceof Array) {
                    attendee = _react2.default.createElement(
                        'div',
                        { className: 'attendee__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'attendee__header', 'data-advice': 'HTML for the *head* of the section' },
                            'attendees'
                        ),
                        this.props.attendee.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.attendee));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.attendee));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'attendee__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        attendee = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.attendee));
                    } else if (this.props['@type'] === 'Organization') {
                        attendee = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.attendee));
                    }
                }
            }

            var performer = undefined;
            if (this.props.performer) {
                if (this.props.performer instanceof Array) {
                    performer = _react2.default.createElement(
                        'div',
                        { className: 'performer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'performer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'performers'
                        ),
                        this.props.performer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.performer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.performer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'performer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        performer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.performer));
                    } else if (this.props['@type'] === 'Organization') {
                        performer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.performer));
                    }
                }
            }

            var workPerformed = undefined;
            if (this.props.workPerformed) {
                if (this.props.workPerformed instanceof Array) {
                    workPerformed = _react2.default.createElement(
                        'div',
                        { className: 'workPerformed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workPerformed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workPerformeds'
                        ),
                        this.props.workPerformed.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workPerformed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workPerformed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workPerformed = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workPerformed));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var superEvent = undefined;
            if (this.props.superEvent) {
                if (this.props.superEvent instanceof Array) {
                    superEvent = _react2.default.createElement(
                        'div',
                        { className: 'superEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'superEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'superEvents'
                        ),
                        this.props.superEvent.map(function (item, index) {
                            return _react2.default.createElement(Event, _extends({ key: index }, _this2.props.superEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'superEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    superEvent = _react2.default.createElement(Event, _extends({ key: index }, this.props.superEvent));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var recordedIn = undefined;
            if (this.props.recordedIn) {
                if (this.props.recordedIn instanceof Array) {
                    recordedIn = _react2.default.createElement(
                        'div',
                        { className: 'recordedIn__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedIn__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedIns'
                        ),
                        this.props.recordedIn.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.recordedIn));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedIn__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedIn = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.recordedIn));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Event-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Event-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var subEvent = undefined;
            if (this.props.subEvent) {
                if (this.props.subEvent instanceof Array) {
                    subEvent = _react2.default.createElement(
                        'div',
                        { className: 'subEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'subEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'subEvents'
                        ),
                        this.props.subEvent.map(function (item, index) {
                            return _react2.default.createElement(Event, _extends({ key: index }, _this2.props.subEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'subEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    subEvent = _react2.default.createElement(Event, _extends({ key: index }, this.props.subEvent));
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var location = undefined;
            if (this.props.location) {
                if (this.props.location instanceof Array) {
                    location = _react2.default.createElement(
                        'div',
                        { className: 'location__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'location__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locations'
                        ),
                        this.props.location.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.location));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Event-location' },
                                        'location: ',
                                        _this2.props.location
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.location));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'location__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        location = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.location));
                    } else if (this.props['@type'] === 'Text') {
                        location = _react2.default.createElement(
                            'div',
                            { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Event-location' },
                                'location: ',
                                this.props.location
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        location = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.location));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Event-image', src: _this2.props.image })
                                );
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Event-image', src: this.props.image })
                        );
                    } else if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    }
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var organizer = undefined;
            if (this.props.organizer) {
                if (this.props.organizer instanceof Array) {
                    organizer = _react2.default.createElement(
                        'div',
                        { className: 'organizer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'organizer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'organizers'
                        ),
                        this.props.organizer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.organizer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.organizer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'organizer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        organizer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.organizer));
                    } else if (this.props['@type'] === 'Organization') {
                        organizer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.organizer));
                    }
                }
            }

            var workFeatured = undefined;
            if (this.props.workFeatured) {
                if (this.props.workFeatured instanceof Array) {
                    workFeatured = _react2.default.createElement(
                        'div',
                        { className: 'workFeatured__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workFeatured__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workFeatureds'
                        ),
                        this.props.workFeatured.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workFeatured));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workFeatured__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workFeatured = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workFeatured));
                }
            }

            var eventStatus = undefined;
            if (this.props.eventStatus) {
                if (this.props.eventStatus instanceof Array) {
                    eventStatus = _react2.default.createElement(
                        'div',
                        { className: 'eventStatus__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eventStatus__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eventStatuss'
                        ),
                        this.props.eventStatus.map(function (item, index) {
                            return _react2.default.createElement(_eventstatustype2.default, _extends({ key: index }, _this2.props.eventStatus));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eventStatus__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eventStatus = _react2.default.createElement(_eventstatustype2.default, _extends({ key: index }, this.props.eventStatus));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Event' },
                inLanguage,
                attendee,
                performer,
                workPerformed,
                potentialAction,
                superEvent,
                review,
                recordedIn,
                mainEntityOfPage,
                aggregateRating,
                subEvent,
                offers,
                location,
                image,
                duration,
                organizer,
                workFeatured,
                eventStatus
            );
        }
    }]);

    return Event;
}(_react.Component);

exports.default = Event;
;

Event.defaultProps = {};

Event.propTypes = {
    inLanguage: _react2.default.propTypes.object,
    attendee: _react2.default.propTypes.object,
    performer: _react2.default.propTypes.object,
    workPerformed: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    superEvent: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    recordedIn: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    subEvent: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    location: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    organizer: _react2.default.propTypes.object,
    workFeatured: _react2.default.propTypes.object,
    eventStatus: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* EventStatusType - EventStatusType is an enumeration type whose instances represent several states that an Event may be in.. Generated automatically by the reactGenerator. */


var EventStatusType = function (_Component) {
    _inherits(EventStatusType, _Component);

    function EventStatusType() {
        _classCallCheck(this, EventStatusType);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(EventStatusType).apply(this, arguments));
    }

    _createClass(EventStatusType, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'EventStatusType-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'EventStatusType-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'EventStatusType-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'EventStatusType-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'EventStatusType' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return EventStatusType;
}(_react.Component);

exports.default = EventStatusType;
;

EventStatusType.defaultProps = {};

EventStatusType.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _country = require('./country.js');

var _country2 = _interopRequireDefault(_country);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* GeoCoordinates - The geographic coordinates of a place or event.. Generated automatically by the reactGenerator. */


var GeoCoordinates = function (_Component) {
    _inherits(GeoCoordinates, _Component);

    function GeoCoordinates() {
        _classCallCheck(this, GeoCoordinates);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(GeoCoordinates).apply(this, arguments));
    }

    _createClass(GeoCoordinates, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var elevation = undefined;
            if (this.props.elevation) {
                if (this.props.elevation instanceof Array) {
                    elevation = _react2.default.createElement(
                        'div',
                        { className: 'elevation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'elevation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'elevations'
                        ),
                        this.props.elevation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'elevation', 'data-advice': 'Put your HTML here. elevation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoCoordinates-elevation' },
                                        'elevation: ',
                                        _this2.props.elevation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'elevation', 'data-advice': 'Put your HTML here. elevation is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoCoordinates-elevation' },
                                        'elevation: ',
                                        _this2.props.elevation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'elevation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        elevation = _react2.default.createElement(
                            'div',
                            { className: 'elevation', 'data-advice': 'Put your HTML here. elevation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoCoordinates-elevation' },
                                'elevation: ',
                                this.props.elevation
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        elevation = _react2.default.createElement(
                            'div',
                            { className: 'elevation', 'data-advice': 'Put your HTML here. elevation is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoCoordinates-elevation' },
                                'elevation: ',
                                this.props.elevation
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'GeoCoordinates-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'GeoCoordinates-image', src: this.props.image })
                        );
                    }
                }
            }

            var longitude = undefined;
            if (this.props.longitude) {
                if (this.props.longitude instanceof Array) {
                    longitude = _react2.default.createElement(
                        'div',
                        { className: 'longitude__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'longitude__header', 'data-advice': 'HTML for the *head* of the section' },
                            'longitudes'
                        ),
                        this.props.longitude.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'longitude', 'data-advice': 'Put your HTML here. longitude is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoCoordinates-longitude' },
                                        'longitude: ',
                                        _this2.props.longitude
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'longitude', 'data-advice': 'Put your HTML here. longitude is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoCoordinates-longitude' },
                                        'longitude: ',
                                        _this2.props.longitude
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'longitude__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        longitude = _react2.default.createElement(
                            'div',
                            { className: 'longitude', 'data-advice': 'Put your HTML here. longitude is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoCoordinates-longitude' },
                                'longitude: ',
                                this.props.longitude
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        longitude = _react2.default.createElement(
                            'div',
                            { className: 'longitude', 'data-advice': 'Put your HTML here. longitude is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoCoordinates-longitude' },
                                'longitude: ',
                                this.props.longitude
                            )
                        );
                    }
                }
            }

            var addressCountry = undefined;
            if (this.props.addressCountry) {
                if (this.props.addressCountry instanceof Array) {
                    addressCountry = _react2.default.createElement(
                        'div',
                        { className: 'addressCountry__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'addressCountry__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addressCountrys'
                        ),
                        this.props.addressCountry.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'addressCountry', 'data-advice': 'Put your HTML here. addressCountry is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoCoordinates-addressCountry' },
                                        'addressCountry: ',
                                        _this2.props.addressCountry
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Country') {
                                return _react2.default.createElement(_country2.default, _extends({ key: index }, _this2.props.addressCountry));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'addressCountry__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        addressCountry = _react2.default.createElement(
                            'div',
                            { className: 'addressCountry', 'data-advice': 'Put your HTML here. addressCountry is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoCoordinates-addressCountry' },
                                'addressCountry: ',
                                this.props.addressCountry
                            )
                        );
                    } else if (this.props['@type'] === 'Country') {
                        addressCountry = _react2.default.createElement(_country2.default, _extends({ key: index }, this.props.addressCountry));
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'GeoCoordinates-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'GeoCoordinates-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var address = undefined;
            if (this.props.address) {
                if (this.props.address instanceof Array) {
                    address = _react2.default.createElement(
                        'div',
                        { className: 'address__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'address__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addresss'
                        ),
                        this.props.address.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoCoordinates-address' },
                                        'address: ',
                                        _this2.props.address
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.address));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'address__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        address = _react2.default.createElement(
                            'div',
                            { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoCoordinates-address' },
                                'address: ',
                                this.props.address
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        address = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.address));
                    }
                }
            }

            var latitude = undefined;
            if (this.props.latitude) {
                if (this.props.latitude instanceof Array) {
                    latitude = _react2.default.createElement(
                        'div',
                        { className: 'latitude__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'latitude__header', 'data-advice': 'HTML for the *head* of the section' },
                            'latitudes'
                        ),
                        this.props.latitude.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'latitude', 'data-advice': 'Put your HTML here. latitude is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoCoordinates-latitude' },
                                        'latitude: ',
                                        _this2.props.latitude
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'latitude', 'data-advice': 'Put your HTML here. latitude is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoCoordinates-latitude' },
                                        'latitude: ',
                                        _this2.props.latitude
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'latitude__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        latitude = _react2.default.createElement(
                            'div',
                            { className: 'latitude', 'data-advice': 'Put your HTML here. latitude is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoCoordinates-latitude' },
                                'latitude: ',
                                this.props.latitude
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        latitude = _react2.default.createElement(
                            'div',
                            { className: 'latitude', 'data-advice': 'Put your HTML here. latitude is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoCoordinates-latitude' },
                                'latitude: ',
                                this.props.latitude
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'GeoCoordinates' },
                potentialAction,
                elevation,
                image,
                longitude,
                addressCountry,
                mainEntityOfPage,
                address,
                latitude
            );
        }
    }]);

    return GeoCoordinates;
}(_react.Component);

exports.default = GeoCoordinates;
;

GeoCoordinates.defaultProps = {};

GeoCoordinates.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    elevation: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    longitude: _react2.default.propTypes.object,
    addressCountry: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    address: _react2.default.propTypes.object,
    latitude: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _country = require('./country.js');

var _country2 = _interopRequireDefault(_country);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* GeoShape - The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.. Generated automatically by the reactGenerator. */


var GeoShape = function (_Component) {
    _inherits(GeoShape, _Component);

    function GeoShape() {
        _classCallCheck(this, GeoShape);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(GeoShape).apply(this, arguments));
    }

    _createClass(GeoShape, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var elevation = undefined;
            if (this.props.elevation) {
                if (this.props.elevation instanceof Array) {
                    elevation = _react2.default.createElement(
                        'div',
                        { className: 'elevation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'elevation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'elevations'
                        ),
                        this.props.elevation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'elevation', 'data-advice': 'Put your HTML here. elevation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoShape-elevation' },
                                        'elevation: ',
                                        _this2.props.elevation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'elevation', 'data-advice': 'Put your HTML here. elevation is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoShape-elevation' },
                                        'elevation: ',
                                        _this2.props.elevation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'elevation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        elevation = _react2.default.createElement(
                            'div',
                            { className: 'elevation', 'data-advice': 'Put your HTML here. elevation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoShape-elevation' },
                                'elevation: ',
                                this.props.elevation
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        elevation = _react2.default.createElement(
                            'div',
                            { className: 'elevation', 'data-advice': 'Put your HTML here. elevation is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoShape-elevation' },
                                'elevation: ',
                                this.props.elevation
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'GeoShape-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'GeoShape-image', src: this.props.image })
                        );
                    }
                }
            }

            var addressCountry = undefined;
            if (this.props.addressCountry) {
                if (this.props.addressCountry instanceof Array) {
                    addressCountry = _react2.default.createElement(
                        'div',
                        { className: 'addressCountry__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'addressCountry__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addressCountrys'
                        ),
                        this.props.addressCountry.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'addressCountry', 'data-advice': 'Put your HTML here. addressCountry is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoShape-addressCountry' },
                                        'addressCountry: ',
                                        _this2.props.addressCountry
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Country') {
                                return _react2.default.createElement(_country2.default, _extends({ key: index }, _this2.props.addressCountry));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'addressCountry__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        addressCountry = _react2.default.createElement(
                            'div',
                            { className: 'addressCountry', 'data-advice': 'Put your HTML here. addressCountry is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoShape-addressCountry' },
                                'addressCountry: ',
                                this.props.addressCountry
                            )
                        );
                    } else if (this.props['@type'] === 'Country') {
                        addressCountry = _react2.default.createElement(_country2.default, _extends({ key: index }, this.props.addressCountry));
                    }
                }
            }

            var address = undefined;
            if (this.props.address) {
                if (this.props.address instanceof Array) {
                    address = _react2.default.createElement(
                        'div',
                        { className: 'address__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'address__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addresss'
                        ),
                        this.props.address.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'GeoShape-address' },
                                        'address: ',
                                        _this2.props.address
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.address));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'address__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        address = _react2.default.createElement(
                            'div',
                            { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'GeoShape-address' },
                                'address: ',
                                this.props.address
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        address = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.address));
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'GeoShape-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'GeoShape-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'GeoShape' },
                potentialAction,
                elevation,
                image,
                addressCountry,
                address,
                mainEntityOfPage
            );
        }
    }]);

    return GeoShape;
}(_react.Component);

exports.default = GeoShape;
;

GeoShape.defaultProps = {};

GeoShape.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    elevation: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    addressCountry: _react2.default.propTypes.object,
    address: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _propertyvalue = require('./propertyvalue.js');

var _propertyvalue2 = _interopRequireDefault(_propertyvalue);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _newsarticle = require('./newsarticle.js');

var _newsarticle2 = _interopRequireDefault(_newsarticle);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _distance = require('./distance.js');

var _distance2 = _interopRequireDefault(_distance);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ImageObject - An image file.. Generated automatically by the reactGenerator. */


var ImageObject = function (_Component) {
    _inherits(ImageObject, _Component);

    function ImageObject() {
        _classCallCheck(this, ImageObject);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ImageObject).apply(this, arguments));
    }

    _createClass(ImageObject, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ImageObject-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ImageObject-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var encodesCreativeWork = undefined;
            if (this.props.encodesCreativeWork) {
                if (this.props.encodesCreativeWork instanceof Array) {
                    encodesCreativeWork = _react2.default.createElement(
                        'div',
                        { className: 'encodesCreativeWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encodesCreativeWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodesCreativeWorks'
                        ),
                        this.props.encodesCreativeWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.encodesCreativeWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encodesCreativeWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encodesCreativeWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.encodesCreativeWork));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(ImageObject, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ImageObject-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(ImageObject, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ImageObject-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ImageObject-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ImageObject-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var height = undefined;
            if (this.props.height) {
                if (this.props.height instanceof Array) {
                    height = _react2.default.createElement(
                        'div',
                        { className: 'height__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'height__header', 'data-advice': 'HTML for the *head* of the section' },
                            'heights'
                        ),
                        this.props.height.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.height));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.height));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'height__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        height = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.height));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        height = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.height));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var productionCompany = undefined;
            if (this.props.productionCompany) {
                if (this.props.productionCompany instanceof Array) {
                    productionCompany = _react2.default.createElement(
                        'div',
                        { className: 'productionCompany__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'productionCompany__header', 'data-advice': 'HTML for the *head* of the section' },
                            'productionCompanys'
                        ),
                        this.props.productionCompany.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.productionCompany));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'productionCompany__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    productionCompany = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.productionCompany));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ImageObject-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ImageObject-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var associatedArticle = undefined;
            if (this.props.associatedArticle) {
                if (this.props.associatedArticle instanceof Array) {
                    associatedArticle = _react2.default.createElement(
                        'div',
                        { className: 'associatedArticle__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedArticle__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedArticles'
                        ),
                        this.props.associatedArticle.map(function (item, index) {
                            return _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, _this2.props.associatedArticle));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedArticle__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedArticle = _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, this.props.associatedArticle));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var thumbnail = undefined;
            if (this.props.thumbnail) {
                if (this.props.thumbnail instanceof Array) {
                    thumbnail = _react2.default.createElement(
                        'div',
                        { className: 'thumbnail__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'thumbnail__header', 'data-advice': 'HTML for the *head* of the section' },
                            'thumbnails'
                        ),
                        this.props.thumbnail.map(function (item, index) {
                            return _react2.default.createElement(ImageObject, _extends({ key: index }, _this2.props.thumbnail));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'thumbnail__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    thumbnail = _react2.default.createElement(ImageObject, _extends({ key: index }, this.props.thumbnail));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var exifData = undefined;
            if (this.props.exifData) {
                if (this.props.exifData instanceof Array) {
                    exifData = _react2.default.createElement(
                        'div',
                        { className: 'exifData__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exifData__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exifDatas'
                        ),
                        this.props.exifData.map(function (item, index) {
                            if (_this2.props['@type'] === 'PropertyValue') {
                                return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.exifData));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'exifData', 'data-advice': 'Put your HTML here. exifData is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ImageObject-exifData' },
                                        'exifData: ',
                                        _this2.props.exifData
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exifData__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'PropertyValue') {
                        exifData = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.exifData));
                    } else if (this.props['@type'] === 'Text') {
                        exifData = _react2.default.createElement(
                            'div',
                            { className: 'exifData', 'data-advice': 'Put your HTML here. exifData is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ImageObject-exifData' },
                                'exifData: ',
                                this.props.exifData
                            )
                        );
                    }
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'ImageObject-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'ImageObject-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'ImageObject-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'ImageObject-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ImageObject-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ImageObject-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ImageObject-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ImageObject-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ImageObject-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ImageObject-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ImageObject-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ImageObject-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ImageObject-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ImageObject-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ImageObject-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ImageObject-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ImageObject-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    } else if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ImageObject-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'ImageObject-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'ImageObject-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'ImageObject-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'ImageObject-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            var width = undefined;
            if (this.props.width) {
                if (this.props.width instanceof Array) {
                    width = _react2.default.createElement(
                        'div',
                        { className: 'width__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'width__header', 'data-advice': 'HTML for the *head* of the section' },
                            'widths'
                        ),
                        this.props.width.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.width));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.width));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'width__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        width = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.width));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        width = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.width));
                    }
                }
            }

            var regionsAllowed = undefined;
            if (this.props.regionsAllowed) {
                if (this.props.regionsAllowed instanceof Array) {
                    regionsAllowed = _react2.default.createElement(
                        'div',
                        { className: 'regionsAllowed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'regionsAllowed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'regionsAlloweds'
                        ),
                        this.props.regionsAllowed.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.regionsAllowed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'regionsAllowed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    regionsAllowed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.regionsAllowed));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ImageObject' },
                comment,
                inLanguage,
                encodesCreativeWork,
                creator,
                image,
                citation,
                height,
                aggregateRating,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                duration,
                producer,
                productionCompany,
                review,
                encoding,
                character,
                mainEntityOfPage,
                associatedArticle,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                thumbnail,
                timeRequired,
                interactionStatistic,
                educationalAlignment,
                exifData,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                publication,
                hasPart,
                publisher,
                about,
                potentialAction,
                license,
                associatedMedia,
                workExample,
                author,
                dateModified,
                audience,
                mentions,
                audio,
                sourceOrganization,
                width,
                regionsAllowed
            );
        }
    }]);

    return ImageObject;
}(_react.Component);

exports.default = ImageObject;
;

ImageObject.defaultProps = {};

ImageObject.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    encodesCreativeWork: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    height: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    productionCompany: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    associatedArticle: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    thumbnail: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    exifData: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object,
    width: _react2.default.propTypes.object,
    regionsAllowed: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _website = require('./website.js');

var _website2 = _interopRequireDefault(_website);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _softwareapplication = require('./softwareapplication.js');

var _softwareapplication2 = _interopRequireDefault(_softwareapplication);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* InteractionCounter - A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.. Generated automatically by the reactGenerator. */


var InteractionCounter = function (_Component) {
    _inherits(InteractionCounter, _Component);

    function InteractionCounter() {
        _classCallCheck(this, InteractionCounter);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(InteractionCounter).apply(this, arguments));
    }

    _createClass(InteractionCounter, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'InteractionCounter-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'InteractionCounter-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'InteractionCounter-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'InteractionCounter-image', src: this.props.image })
                        );
                    }
                }
            }

            var interactionService = undefined;
            if (this.props.interactionService) {
                if (this.props.interactionService instanceof Array) {
                    interactionService = _react2.default.createElement(
                        'div',
                        { className: 'interactionService__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionService__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionServices'
                        ),
                        this.props.interactionService.map(function (item, index) {
                            if (_this2.props['@type'] === 'SoftwareApplication') {
                                return _react2.default.createElement(_softwareapplication2.default, _extends({ key: index }, _this2.props.interactionService));
                            } else if (_this2.props['@type'] === 'WebSite') {
                                return _react2.default.createElement(_website2.default, _extends({ key: index }, _this2.props.interactionService));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionService__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'SoftwareApplication') {
                        interactionService = _react2.default.createElement(_softwareapplication2.default, _extends({ key: index }, this.props.interactionService));
                    } else if (this.props['@type'] === 'WebSite') {
                        interactionService = _react2.default.createElement(_website2.default, _extends({ key: index }, this.props.interactionService));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var interactionType = undefined;
            if (this.props.interactionType) {
                if (this.props.interactionType instanceof Array) {
                    interactionType = _react2.default.createElement(
                        'div',
                        { className: 'interactionType__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionType__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionTypes'
                        ),
                        this.props.interactionType.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.interactionType));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionType__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionType = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.interactionType));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'InteractionCounter' },
                mainEntityOfPage,
                image,
                interactionService,
                potentialAction,
                interactionType
            );
        }
    }]);

    return InteractionCounter;
}(_react.Component);

exports.default = InteractionCounter;
;

InteractionCounter.defaultProps = {};

InteractionCounter.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    interactionService: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    interactionType: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ItemAvailability - A list of possible product availability options.. Generated automatically by the reactGenerator. */


var ItemAvailability = function (_Component) {
    _inherits(ItemAvailability, _Component);

    function ItemAvailability() {
        _classCallCheck(this, ItemAvailability);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ItemAvailability).apply(this, arguments));
    }

    _createClass(ItemAvailability, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ItemAvailability-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ItemAvailability-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ItemAvailability-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ItemAvailability-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ItemAvailability' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return ItemAvailability;
}(_react.Component);

exports.default = ItemAvailability;
;

ItemAvailability.defaultProps = {};

ItemAvailability.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _listitem = require('./listitem.js');

var _listitem2 = _interopRequireDefault(_listitem);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _itemlistordertype = require('./itemlistordertype.js');

var _itemlistordertype2 = _interopRequireDefault(_itemlistordertype);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ItemList - A list of items of any sort\u2014for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.. Generated automatically by the reactGenerator. */


var ItemList = function (_Component) {
    _inherits(ItemList, _Component);

    function ItemList() {
        _classCallCheck(this, ItemList);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ItemList).apply(this, arguments));
    }

    _createClass(ItemList, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ItemList-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ItemList-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ItemList-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ItemList-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var itemListElement = undefined;
            if (this.props.itemListElement) {
                if (this.props.itemListElement instanceof Array) {
                    itemListElement = _react2.default.createElement(
                        'div',
                        { className: 'itemListElement__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemListElement__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemListElements'
                        ),
                        this.props.itemListElement.map(function (item, index) {
                            if (_this2.props['@type'] === 'ListItem') {
                                return _react2.default.createElement(_listitem2.default, _extends({ key: index }, _this2.props.itemListElement));
                            } else if (_this2.props['@type'] === 'Thing') {
                                return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.itemListElement));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'itemListElement', 'data-advice': 'Put your HTML here. itemListElement is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ItemList-itemListElement' },
                                        'itemListElement: ',
                                        _this2.props.itemListElement
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemListElement__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ListItem') {
                        itemListElement = _react2.default.createElement(_listitem2.default, _extends({ key: index }, this.props.itemListElement));
                    } else if (this.props['@type'] === 'Thing') {
                        itemListElement = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.itemListElement));
                    } else if (this.props['@type'] === 'Text') {
                        itemListElement = _react2.default.createElement(
                            'div',
                            { className: 'itemListElement', 'data-advice': 'Put your HTML here. itemListElement is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ItemList-itemListElement' },
                                'itemListElement: ',
                                this.props.itemListElement
                            )
                        );
                    }
                }
            }

            var itemListOrder = undefined;
            if (this.props.itemListOrder) {
                if (this.props.itemListOrder instanceof Array) {
                    itemListOrder = _react2.default.createElement(
                        'div',
                        { className: 'itemListOrder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemListOrder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemListOrders'
                        ),
                        this.props.itemListOrder.map(function (item, index) {
                            if (_this2.props['@type'] === 'ItemListOrderType') {
                                return _react2.default.createElement(_itemlistordertype2.default, _extends({ key: index }, _this2.props.itemListOrder));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'itemListOrder', 'data-advice': 'Put your HTML here. itemListOrder is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ItemList-itemListOrder' },
                                        'itemListOrder: ',
                                        _this2.props.itemListOrder
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemListOrder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ItemListOrderType') {
                        itemListOrder = _react2.default.createElement(_itemlistordertype2.default, _extends({ key: index }, this.props.itemListOrder));
                    } else if (this.props['@type'] === 'Text') {
                        itemListOrder = _react2.default.createElement(
                            'div',
                            { className: 'itemListOrder', 'data-advice': 'Put your HTML here. itemListOrder is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ItemList-itemListOrder' },
                                'itemListOrder: ',
                                this.props.itemListOrder
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ItemList' },
                mainEntityOfPage,
                image,
                potentialAction,
                itemListElement,
                itemListOrder
            );
        }
    }]);

    return ItemList;
}(_react.Component);

exports.default = ItemList;
;

ItemList.defaultProps = {};

ItemList.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    itemListElement: _react2.default.propTypes.object,
    itemListOrder: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ItemListOrderType - Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.. Generated automatically by the reactGenerator. */


var ItemListOrderType = function (_Component) {
    _inherits(ItemListOrderType, _Component);

    function ItemListOrderType() {
        _classCallCheck(this, ItemListOrderType);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ItemListOrderType).apply(this, arguments));
    }

    _createClass(ItemListOrderType, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ItemListOrderType-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ItemListOrderType-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ItemListOrderType-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ItemListOrderType-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ItemListOrderType' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return ItemListOrderType;
}(_react.Component);

exports.default = ItemListOrderType;
;

ItemListOrderType.defaultProps = {};

ItemListOrderType.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Language - Natural languages such as Spanish, Tamil, Hindi, English, etc. and programming languages such as Scheme and Lisp.. Generated automatically by the reactGenerator. */


var Language = function (_Component) {
    _inherits(Language, _Component);

    function Language() {
        _classCallCheck(this, Language);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Language).apply(this, arguments));
    }

    _createClass(Language, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Language-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Language-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Language-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Language-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Language' },
                mainEntityOfPage,
                image,
                potentialAction
            );
        }
    }]);

    return Language;
}(_react.Component);

exports.default = Language;
;

Language.defaultProps = {};

Language.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ListItem - An list item, e.g. a step in a checklist or how-to description.. Generated automatically by the reactGenerator. */


var ListItem = function (_Component) {
    _inherits(ListItem, _Component);

    function ListItem() {
        _classCallCheck(this, ListItem);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ListItem).apply(this, arguments));
    }

    _createClass(ListItem, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var nextItem = undefined;
            if (this.props.nextItem) {
                if (this.props.nextItem instanceof Array) {
                    nextItem = _react2.default.createElement(
                        'div',
                        { className: 'nextItem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'nextItem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'nextItems'
                        ),
                        this.props.nextItem.map(function (item, index) {
                            return _react2.default.createElement(ListItem, _extends({ key: index }, _this2.props.nextItem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'nextItem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    nextItem = _react2.default.createElement(ListItem, _extends({ key: index }, this.props.nextItem));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ListItem-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ListItem-image', src: this.props.image })
                        );
                    }
                }
            }

            var item = undefined;
            if (this.props.item) {
                if (this.props.item instanceof Array) {
                    item = _react2.default.createElement(
                        'div',
                        { className: 'item__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'item__header', 'data-advice': 'HTML for the *head* of the section' },
                            'items'
                        ),
                        this.props.item.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.item));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'item__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    item = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.item));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ListItem-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ListItem-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ListItem-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ListItem-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ListItem-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ListItem-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var previousItem = undefined;
            if (this.props.previousItem) {
                if (this.props.previousItem instanceof Array) {
                    previousItem = _react2.default.createElement(
                        'div',
                        { className: 'previousItem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'previousItem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'previousItems'
                        ),
                        this.props.previousItem.map(function (item, index) {
                            return _react2.default.createElement(ListItem, _extends({ key: index }, _this2.props.previousItem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'previousItem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    previousItem = _react2.default.createElement(ListItem, _extends({ key: index }, this.props.previousItem));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ListItem' },
                potentialAction,
                nextItem,
                image,
                item,
                mainEntityOfPage,
                position,
                previousItem
            );
        }
    }]);

    return ListItem;
}(_react.Component);

exports.default = ListItem;
;

ListItem.defaultProps = {};

ListItem.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    nextItem: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    item: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    previousItem: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _mapcategorytype = require('./mapcategorytype.js');

var _mapcategorytype2 = _interopRequireDefault(_mapcategorytype);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Map - A map.. Generated automatically by the reactGenerator. */


var Map = function (_Component) {
    _inherits(Map, _Component);

    function Map() {
        _classCallCheck(this, Map);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Map).apply(this, arguments));
    }

    _createClass(Map, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Map-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Map-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Map-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Map-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Map-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Map-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Map-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Map-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var mapType = undefined;
            if (this.props.mapType) {
                if (this.props.mapType instanceof Array) {
                    mapType = _react2.default.createElement(
                        'div',
                        { className: 'mapType__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mapType__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mapTypes'
                        ),
                        this.props.mapType.map(function (item, index) {
                            return _react2.default.createElement(_mapcategorytype2.default, _extends({ key: index }, _this2.props.mapType));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mapType__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mapType = _react2.default.createElement(_mapcategorytype2.default, _extends({ key: index }, this.props.mapType));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Map-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Map-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Map-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Map-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Map-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Map-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Map-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Map-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Map-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Map-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Map-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Map-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Map-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Map-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Map-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Map-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Map-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Map-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Map-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Map-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Map-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Map-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Map' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                mapType,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                editor,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return Map;
}(_react.Component);

exports.default = Map;
;

Map.defaultProps = {};

Map.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    mapType: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MapCategoryType - An enumeration of several kinds of Map.. Generated automatically by the reactGenerator. */


var MapCategoryType = function (_Component) {
    _inherits(MapCategoryType, _Component);

    function MapCategoryType() {
        _classCallCheck(this, MapCategoryType);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MapCategoryType).apply(this, arguments));
    }

    _createClass(MapCategoryType, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MapCategoryType-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MapCategoryType-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MapCategoryType-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MapCategoryType-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MapCategoryType' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return MapCategoryType;
}(_react.Component);

exports.default = MapCategoryType;
;

MapCategoryType.defaultProps = {};

MapCategoryType.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _newsarticle = require('./newsarticle.js');

var _newsarticle2 = _interopRequireDefault(_newsarticle);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _distance = require('./distance.js');

var _distance2 = _interopRequireDefault(_distance);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MediaObject - An image, video, or audio object embedded in a web page. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).. Generated automatically by the reactGenerator. */


var MediaObject = function (_Component) {
    _inherits(MediaObject, _Component);

    function MediaObject() {
        _classCallCheck(this, MediaObject);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MediaObject).apply(this, arguments));
    }

    _createClass(MediaObject, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MediaObject-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MediaObject-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var encodesCreativeWork = undefined;
            if (this.props.encodesCreativeWork) {
                if (this.props.encodesCreativeWork instanceof Array) {
                    encodesCreativeWork = _react2.default.createElement(
                        'div',
                        { className: 'encodesCreativeWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encodesCreativeWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodesCreativeWorks'
                        ),
                        this.props.encodesCreativeWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.encodesCreativeWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encodesCreativeWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encodesCreativeWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.encodesCreativeWork));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MediaObject-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MediaObject-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MediaObject-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MediaObject-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var height = undefined;
            if (this.props.height) {
                if (this.props.height instanceof Array) {
                    height = _react2.default.createElement(
                        'div',
                        { className: 'height__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'height__header', 'data-advice': 'HTML for the *head* of the section' },
                            'heights'
                        ),
                        this.props.height.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.height));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.height));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'height__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        height = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.height));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        height = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.height));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var productionCompany = undefined;
            if (this.props.productionCompany) {
                if (this.props.productionCompany instanceof Array) {
                    productionCompany = _react2.default.createElement(
                        'div',
                        { className: 'productionCompany__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'productionCompany__header', 'data-advice': 'HTML for the *head* of the section' },
                            'productionCompanys'
                        ),
                        this.props.productionCompany.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.productionCompany));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'productionCompany__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    productionCompany = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.productionCompany));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(MediaObject, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(MediaObject, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MediaObject-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MediaObject-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var associatedArticle = undefined;
            if (this.props.associatedArticle) {
                if (this.props.associatedArticle instanceof Array) {
                    associatedArticle = _react2.default.createElement(
                        'div',
                        { className: 'associatedArticle__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedArticle__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedArticles'
                        ),
                        this.props.associatedArticle.map(function (item, index) {
                            return _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, _this2.props.associatedArticle));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedArticle__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedArticle = _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, this.props.associatedArticle));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MediaObject-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MediaObject-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MediaObject-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MediaObject-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MediaObject-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MediaObject-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MediaObject-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MediaObject-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MediaObject-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MediaObject-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MediaObject-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MediaObject-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MediaObject-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MediaObject-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MediaObject-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MediaObject-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MediaObject-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MediaObject-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MediaObject-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MediaObject-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MediaObject-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    } else if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MediaObject-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(MediaObject, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(MediaObject, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            var width = undefined;
            if (this.props.width) {
                if (this.props.width instanceof Array) {
                    width = _react2.default.createElement(
                        'div',
                        { className: 'width__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'width__header', 'data-advice': 'HTML for the *head* of the section' },
                            'widths'
                        ),
                        this.props.width.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.width));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.width));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'width__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        width = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.width));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        width = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.width));
                    }
                }
            }

            var regionsAllowed = undefined;
            if (this.props.regionsAllowed) {
                if (this.props.regionsAllowed instanceof Array) {
                    regionsAllowed = _react2.default.createElement(
                        'div',
                        { className: 'regionsAllowed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'regionsAllowed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'regionsAlloweds'
                        ),
                        this.props.regionsAllowed.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.regionsAllowed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'regionsAllowed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    regionsAllowed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.regionsAllowed));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MediaObject' },
                comment,
                inLanguage,
                encodesCreativeWork,
                creator,
                image,
                citation,
                height,
                aggregateRating,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                producer,
                productionCompany,
                review,
                encoding,
                character,
                mainEntityOfPage,
                associatedArticle,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                timeRequired,
                interactionStatistic,
                educationalAlignment,
                duration,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                publication,
                hasPart,
                publisher,
                about,
                potentialAction,
                license,
                associatedMedia,
                workExample,
                author,
                audience,
                mentions,
                audio,
                sourceOrganization,
                width,
                regionsAllowed
            );
        }
    }]);

    return MediaObject;
}(_react.Component);

exports.default = MediaObject;
;

MediaObject.defaultProps = {};

MediaObject.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    encodesCreativeWork: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    height: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    productionCompany: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    associatedArticle: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object,
    width: _react2.default.propTypes.object,
    regionsAllowed: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _medicinesystem = require('./medicinesystem.js');

var _medicinesystem2 = _interopRequireDefault(_medicinesystem);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _medicalstudy = require('./medicalstudy.js');

var _medicalstudy2 = _interopRequireDefault(_medicalstudy);

var _medicalguideline = require('./medicalguideline.js');

var _medicalguideline2 = _interopRequireDefault(_medicalguideline);

var _medicalspecialty = require('./medicalspecialty.js');

var _medicalspecialty2 = _interopRequireDefault(_medicalspecialty);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MedicalCode - A code for a medical entity.. Generated automatically by the reactGenerator. */


var MedicalCode = function (_Component) {
    _inherits(MedicalCode, _Component);

    function MedicalCode() {
        _classCallCheck(this, MedicalCode);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MedicalCode).apply(this, arguments));
    }

    _createClass(MedicalCode, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(MedicalCode, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(MedicalCode, _extends({ key: index }, this.props.code));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, this.props.study));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, this.props.guideline));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MedicalCode-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MedicalCode-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MedicalCode-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MedicalCode-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MedicalCode' },
                code,
                relevantSpecialty,
                study,
                guideline,
                potentialAction,
                recognizingAuthority,
                medicineSystem,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return MedicalCode;
}(_react.Component);

exports.default = MedicalCode;
;

MedicalCode.defaultProps = {};

MedicalCode.propTypes = {
    code: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _medicalcode = require('./medicalcode.js');

var _medicalcode2 = _interopRequireDefault(_medicalcode);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _medicinesystem = require('./medicinesystem.js');

var _medicinesystem2 = _interopRequireDefault(_medicinesystem);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _medicalstudy = require('./medicalstudy.js');

var _medicalstudy2 = _interopRequireDefault(_medicalstudy);

var _medicalguideline = require('./medicalguideline.js');

var _medicalguideline2 = _interopRequireDefault(_medicalguideline);

var _medicalspecialty = require('./medicalspecialty.js');

var _medicalspecialty2 = _interopRequireDefault(_medicalspecialty);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MedicalEntity - The most generic type of entity related to health and the practice of medicine.. Generated automatically by the reactGenerator. */


var MedicalEntity = function (_Component) {
    _inherits(MedicalEntity, _Component);

    function MedicalEntity() {
        _classCallCheck(this, MedicalEntity);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MedicalEntity).apply(this, arguments));
    }

    _createClass(MedicalEntity, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, this.props.code));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, this.props.study));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, this.props.guideline));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MedicalEntity-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MedicalEntity-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MedicalEntity-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MedicalEntity-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MedicalEntity' },
                code,
                relevantSpecialty,
                study,
                guideline,
                potentialAction,
                recognizingAuthority,
                medicineSystem,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return MedicalEntity;
}(_react.Component);

exports.default = MedicalEntity;
;

MedicalEntity.defaultProps = {};

MedicalEntity.propTypes = {
    code: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _medicalcode = require('./medicalcode.js');

var _medicalcode2 = _interopRequireDefault(_medicalcode);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _medicalguideline = require('./medicalguideline.js');

var _medicalguideline2 = _interopRequireDefault(_medicalguideline);

var _medicinesystem = require('./medicinesystem.js');

var _medicinesystem2 = _interopRequireDefault(_medicinesystem);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _medicalstudy = require('./medicalstudy.js');

var _medicalstudy2 = _interopRequireDefault(_medicalstudy);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _medicalspecialty = require('./medicalspecialty.js');

var _medicalspecialty2 = _interopRequireDefault(_medicalspecialty);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MedicalEvidenceLevel - Level of evidence for a medical guideline. Enumerated type.. Generated automatically by the reactGenerator. */


var MedicalEvidenceLevel = function (_Component) {
    _inherits(MedicalEvidenceLevel, _Component);

    function MedicalEvidenceLevel() {
        _classCallCheck(this, MedicalEvidenceLevel);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MedicalEvidenceLevel).apply(this, arguments));
    }

    _createClass(MedicalEvidenceLevel, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, this.props.code));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, this.props.study));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, this.props.guideline));
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MedicalEvidenceLevel-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MedicalEvidenceLevel-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MedicalEvidenceLevel-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MedicalEvidenceLevel-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MedicalEvidenceLevel' },
                code,
                potentialAction,
                relevantSpecialty,
                study,
                guideline,
                supersededBy,
                recognizingAuthority,
                medicineSystem,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return MedicalEvidenceLevel;
}(_react.Component);

exports.default = MedicalEvidenceLevel;
;

MedicalEvidenceLevel.defaultProps = {};

MedicalEvidenceLevel.propTypes = {
    code: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _medicalcode = require('./medicalcode.js');

var _medicalcode2 = _interopRequireDefault(_medicalcode);

var _medicalentity = require('./medicalentity.js');

var _medicalentity2 = _interopRequireDefault(_medicalentity);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _medicalevidencelevel = require('./medicalevidencelevel.js');

var _medicalevidencelevel2 = _interopRequireDefault(_medicalevidencelevel);

var _medicinesystem = require('./medicinesystem.js');

var _medicinesystem2 = _interopRequireDefault(_medicinesystem);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _medicalstudy = require('./medicalstudy.js');

var _medicalstudy2 = _interopRequireDefault(_medicalstudy);

var _medicalspecialty = require('./medicalspecialty.js');

var _medicalspecialty2 = _interopRequireDefault(_medicalspecialty);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MedicalGuideline - Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.. Generated automatically by the reactGenerator. */


var MedicalGuideline = function (_Component) {
    _inherits(MedicalGuideline, _Component);

    function MedicalGuideline() {
        _classCallCheck(this, MedicalGuideline);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MedicalGuideline).apply(this, arguments));
    }

    _createClass(MedicalGuideline, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, this.props.code));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, this.props.study));
                }
            }

            var guidelineSubject = undefined;
            if (this.props.guidelineSubject) {
                if (this.props.guidelineSubject instanceof Array) {
                    guidelineSubject = _react2.default.createElement(
                        'div',
                        { className: 'guidelineSubject__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guidelineSubject__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelineSubjects'
                        ),
                        this.props.guidelineSubject.map(function (item, index) {
                            return _react2.default.createElement(_medicalentity2.default, _extends({ key: index }, _this2.props.guidelineSubject));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guidelineSubject__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guidelineSubject = _react2.default.createElement(_medicalentity2.default, _extends({ key: index }, this.props.guidelineSubject));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(MedicalGuideline, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(MedicalGuideline, _extends({ key: index }, this.props.guideline));
                }
            }

            var evidenceLevel = undefined;
            if (this.props.evidenceLevel) {
                if (this.props.evidenceLevel instanceof Array) {
                    evidenceLevel = _react2.default.createElement(
                        'div',
                        { className: 'evidenceLevel__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'evidenceLevel__header', 'data-advice': 'HTML for the *head* of the section' },
                            'evidenceLevels'
                        ),
                        this.props.evidenceLevel.map(function (item, index) {
                            return _react2.default.createElement(_medicalevidencelevel2.default, _extends({ key: index }, _this2.props.evidenceLevel));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'evidenceLevel__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    evidenceLevel = _react2.default.createElement(_medicalevidencelevel2.default, _extends({ key: index }, this.props.evidenceLevel));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MedicalGuideline-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MedicalGuideline-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MedicalGuideline-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MedicalGuideline-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MedicalGuideline' },
                code,
                relevantSpecialty,
                study,
                guidelineSubject,
                guideline,
                evidenceLevel,
                potentialAction,
                recognizingAuthority,
                medicineSystem,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return MedicalGuideline;
}(_react.Component);

exports.default = MedicalGuideline;
;

MedicalGuideline.defaultProps = {};

MedicalGuideline.propTypes = {
    code: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guidelineSubject: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    evidenceLevel: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _medicalcode = require('./medicalcode.js');

var _medicalcode2 = _interopRequireDefault(_medicalcode);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _medicalguideline = require('./medicalguideline.js');

var _medicalguideline2 = _interopRequireDefault(_medicalguideline);

var _medicinesystem = require('./medicinesystem.js');

var _medicinesystem2 = _interopRequireDefault(_medicinesystem);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _medicalstudy = require('./medicalstudy.js');

var _medicalstudy2 = _interopRequireDefault(_medicalstudy);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MedicalSpecialty - Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.. Generated automatically by the reactGenerator. */


var MedicalSpecialty = function (_Component) {
    _inherits(MedicalSpecialty, _Component);

    function MedicalSpecialty() {
        _classCallCheck(this, MedicalSpecialty);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MedicalSpecialty).apply(this, arguments));
    }

    _createClass(MedicalSpecialty, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, this.props.code));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(MedicalSpecialty, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(MedicalSpecialty, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, this.props.study));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, this.props.guideline));
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MedicalSpecialty-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MedicalSpecialty-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MedicalSpecialty-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MedicalSpecialty-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MedicalSpecialty' },
                code,
                potentialAction,
                relevantSpecialty,
                study,
                guideline,
                supersededBy,
                recognizingAuthority,
                medicineSystem,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return MedicalSpecialty;
}(_react.Component);

exports.default = MedicalSpecialty;
;

MedicalSpecialty.defaultProps = {};

MedicalSpecialty.propTypes = {
    code: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _medicalstudystatus = require('./medicalstudystatus.js');

var _medicalstudystatus2 = _interopRequireDefault(_medicalstudystatus);

var _medicalcode = require('./medicalcode.js');

var _medicalcode2 = _interopRequireDefault(_medicalcode);

var _medicalentity = require('./medicalentity.js');

var _medicalentity2 = _interopRequireDefault(_medicalentity);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _medicinesystem = require('./medicinesystem.js');

var _medicinesystem2 = _interopRequireDefault(_medicinesystem);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _medicalguideline = require('./medicalguideline.js');

var _medicalguideline2 = _interopRequireDefault(_medicalguideline);

var _medicalspecialty = require('./medicalspecialty.js');

var _medicalspecialty2 = _interopRequireDefault(_medicalspecialty);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MedicalStudy - A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.. Generated automatically by the reactGenerator. */


var MedicalStudy = function (_Component) {
    _inherits(MedicalStudy, _Component);

    function MedicalStudy() {
        _classCallCheck(this, MedicalStudy);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MedicalStudy).apply(this, arguments));
    }

    _createClass(MedicalStudy, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var status = undefined;
            if (this.props.status) {
                if (this.props.status instanceof Array) {
                    status = _react2.default.createElement(
                        'div',
                        { className: 'status__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'status__header', 'data-advice': 'HTML for the *head* of the section' },
                            'statuss'
                        ),
                        this.props.status.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudystatus2.default, _extends({ key: index }, _this2.props.status));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'status__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    status = _react2.default.createElement(_medicalstudystatus2.default, _extends({ key: index }, this.props.status));
                }
            }

            var studySubject = undefined;
            if (this.props.studySubject) {
                if (this.props.studySubject instanceof Array) {
                    studySubject = _react2.default.createElement(
                        'div',
                        { className: 'studySubject__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'studySubject__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studySubjects'
                        ),
                        this.props.studySubject.map(function (item, index) {
                            return _react2.default.createElement(_medicalentity2.default, _extends({ key: index }, _this2.props.studySubject));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'studySubject__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    studySubject = _react2.default.createElement(_medicalentity2.default, _extends({ key: index }, this.props.studySubject));
                }
            }

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, this.props.code));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(MedicalStudy, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(MedicalStudy, _extends({ key: index }, this.props.study));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, this.props.guideline));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var sponsor = undefined;
            if (this.props.sponsor) {
                if (this.props.sponsor instanceof Array) {
                    sponsor = _react2.default.createElement(
                        'div',
                        { className: 'sponsor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sponsor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sponsors'
                        ),
                        this.props.sponsor.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sponsor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sponsor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sponsor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sponsor));
                }
            }

            var studyLocation = undefined;
            if (this.props.studyLocation) {
                if (this.props.studyLocation instanceof Array) {
                    studyLocation = _react2.default.createElement(
                        'div',
                        { className: 'studyLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'studyLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studyLocations'
                        ),
                        this.props.studyLocation.map(function (item, index) {
                            return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.studyLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'studyLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    studyLocation = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.studyLocation));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MedicalStudy-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MedicalStudy-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MedicalStudy-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MedicalStudy-image', src: this.props.image })
                        );
                    }
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MedicalStudy' },
                status,
                studySubject,
                code,
                relevantSpecialty,
                study,
                guideline,
                potentialAction,
                recognizingAuthority,
                sponsor,
                studyLocation,
                mainEntityOfPage,
                image,
                medicineSystem
            );
        }
    }]);

    return MedicalStudy;
}(_react.Component);

exports.default = MedicalStudy;
;

MedicalStudy.defaultProps = {};

MedicalStudy.propTypes = {
    status: _react2.default.propTypes.object,
    studySubject: _react2.default.propTypes.object,
    code: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    sponsor: _react2.default.propTypes.object,
    studyLocation: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _medicalcode = require('./medicalcode.js');

var _medicalcode2 = _interopRequireDefault(_medicalcode);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _medicalguideline = require('./medicalguideline.js');

var _medicalguideline2 = _interopRequireDefault(_medicalguideline);

var _medicinesystem = require('./medicinesystem.js');

var _medicinesystem2 = _interopRequireDefault(_medicinesystem);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _medicalstudy = require('./medicalstudy.js');

var _medicalstudy2 = _interopRequireDefault(_medicalstudy);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _medicalspecialty = require('./medicalspecialty.js');

var _medicalspecialty2 = _interopRequireDefault(_medicalspecialty);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MedicalStudyStatus - The status of a medical study. Enumerated type.. Generated automatically by the reactGenerator. */


var MedicalStudyStatus = function (_Component) {
    _inherits(MedicalStudyStatus, _Component);

    function MedicalStudyStatus() {
        _classCallCheck(this, MedicalStudyStatus);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MedicalStudyStatus).apply(this, arguments));
    }

    _createClass(MedicalStudyStatus, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, this.props.code));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, this.props.study));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, this.props.guideline));
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MedicalStudyStatus-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MedicalStudyStatus-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MedicalStudyStatus-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MedicalStudyStatus-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MedicalStudyStatus' },
                code,
                potentialAction,
                relevantSpecialty,
                study,
                guideline,
                supersededBy,
                recognizingAuthority,
                medicineSystem,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return MedicalStudyStatus;
}(_react.Component);

exports.default = MedicalStudyStatus;
;

MedicalStudyStatus.defaultProps = {};

MedicalStudyStatus.propTypes = {
    code: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _medicalcode = require('./medicalcode.js');

var _medicalcode2 = _interopRequireDefault(_medicalcode);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _medicalguideline = require('./medicalguideline.js');

var _medicalguideline2 = _interopRequireDefault(_medicalguideline);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _medicalstudy = require('./medicalstudy.js');

var _medicalstudy2 = _interopRequireDefault(_medicalstudy);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _medicalspecialty = require('./medicalspecialty.js');

var _medicalspecialty2 = _interopRequireDefault(_medicalspecialty);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MedicineSystem - Systems of medical practice.. Generated automatically by the reactGenerator. */


var MedicineSystem = function (_Component) {
    _inherits(MedicineSystem, _Component);

    function MedicineSystem() {
        _classCallCheck(this, MedicineSystem);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MedicineSystem).apply(this, arguments));
    }

    _createClass(MedicineSystem, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, this.props.code));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, this.props.study));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, this.props.guideline));
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(MedicineSystem, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(MedicineSystem, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MedicineSystem-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MedicineSystem-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MedicineSystem-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MedicineSystem-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MedicineSystem' },
                code,
                potentialAction,
                relevantSpecialty,
                study,
                guideline,
                supersededBy,
                recognizingAuthority,
                medicineSystem,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return MedicineSystem;
}(_react.Component);

exports.default = MedicineSystem;
;

MedicineSystem.defaultProps = {};

MedicineSystem.propTypes = {
    code: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _musicalbumreleasetype = require('./musicalbumreleasetype.js');

var _musicalbumreleasetype2 = _interopRequireDefault(_musicalbumreleasetype);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _musicrecording = require('./musicrecording.js');

var _musicrecording2 = _interopRequireDefault(_musicrecording);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _itemlist = require('./itemlist.js');

var _itemlist2 = _interopRequireDefault(_itemlist);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _musicalbumproductiontype = require('./musicalbumproductiontype.js');

var _musicalbumproductiontype2 = _interopRequireDefault(_musicalbumproductiontype);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _musicgroup = require('./musicgroup.js');

var _musicgroup2 = _interopRequireDefault(_musicgroup);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _musicrelease = require('./musicrelease.js');

var _musicrelease2 = _interopRequireDefault(_musicrelease);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicAlbum - A collection of music tracks.. Generated automatically by the reactGenerator. */


var MusicAlbum = function (_Component) {
    _inherits(MusicAlbum, _Component);

    function MusicAlbum() {
        _classCallCheck(this, MusicAlbum);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicAlbum).apply(this, arguments));
    }

    _createClass(MusicAlbum, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicAlbum-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicAlbum-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicAlbum-image', src: _this2.props.image })
                                );
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicAlbum-image', src: this.props.image })
                        );
                    } else if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicAlbum-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicAlbum-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var albumRelease = undefined;
            if (this.props.albumRelease) {
                if (this.props.albumRelease instanceof Array) {
                    albumRelease = _react2.default.createElement(
                        'div',
                        { className: 'albumRelease__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'albumRelease__header', 'data-advice': 'HTML for the *head* of the section' },
                            'albumReleases'
                        ),
                        this.props.albumRelease.map(function (item, index) {
                            return _react2.default.createElement(_musicrelease2.default, _extends({ key: index }, _this2.props.albumRelease));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'albumRelease__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    albumRelease = _react2.default.createElement(_musicrelease2.default, _extends({ key: index }, this.props.albumRelease));
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var albumReleaseType = undefined;
            if (this.props.albumReleaseType) {
                if (this.props.albumReleaseType instanceof Array) {
                    albumReleaseType = _react2.default.createElement(
                        'div',
                        { className: 'albumReleaseType__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'albumReleaseType__header', 'data-advice': 'HTML for the *head* of the section' },
                            'albumReleaseTypes'
                        ),
                        this.props.albumReleaseType.map(function (item, index) {
                            return _react2.default.createElement(_musicalbumreleasetype2.default, _extends({ key: index }, _this2.props.albumReleaseType));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'albumReleaseType__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    albumReleaseType = _react2.default.createElement(_musicalbumreleasetype2.default, _extends({ key: index }, this.props.albumReleaseType));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicAlbum-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicAlbum-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var byArtist = undefined;
            if (this.props.byArtist) {
                if (this.props.byArtist instanceof Array) {
                    byArtist = _react2.default.createElement(
                        'div',
                        { className: 'byArtist__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'byArtist__header', 'data-advice': 'HTML for the *head* of the section' },
                            'byArtists'
                        ),
                        this.props.byArtist.map(function (item, index) {
                            return _react2.default.createElement(_musicgroup2.default, _extends({ key: index }, _this2.props.byArtist));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'byArtist__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    byArtist = _react2.default.createElement(_musicgroup2.default, _extends({ key: index }, this.props.byArtist));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicAlbum-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicAlbum-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicAlbum-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicAlbum-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var albumProductionType = undefined;
            if (this.props.albumProductionType) {
                if (this.props.albumProductionType instanceof Array) {
                    albumProductionType = _react2.default.createElement(
                        'div',
                        { className: 'albumProductionType__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'albumProductionType__header', 'data-advice': 'HTML for the *head* of the section' },
                            'albumProductionTypes'
                        ),
                        this.props.albumProductionType.map(function (item, index) {
                            return _react2.default.createElement(_musicalbumproductiontype2.default, _extends({ key: index }, _this2.props.albumProductionType));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'albumProductionType__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    albumProductionType = _react2.default.createElement(_musicalbumproductiontype2.default, _extends({ key: index }, this.props.albumProductionType));
                }
            }

            var track = undefined;
            if (this.props.track) {
                if (this.props.track instanceof Array) {
                    track = _react2.default.createElement(
                        'div',
                        { className: 'track__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'track__header', 'data-advice': 'HTML for the *head* of the section' },
                            'tracks'
                        ),
                        this.props.track.map(function (item, index) {
                            if (_this2.props['@type'] === 'ItemList') {
                                return _react2.default.createElement(_itemlist2.default, _extends({ key: index }, _this2.props.track));
                            } else if (_this2.props['@type'] === 'MusicRecording') {
                                return _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, _this2.props.track));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'track__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ItemList') {
                        track = _react2.default.createElement(_itemlist2.default, _extends({ key: index }, this.props.track));
                    } else if (this.props['@type'] === 'MusicRecording') {
                        track = _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, this.props.track));
                    }
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicAlbum-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicAlbum-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicAlbum-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicAlbum-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicAlbum-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicAlbum-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicAlbum-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicAlbum-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicAlbum-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicAlbum-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicAlbum-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicAlbum-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicAlbum-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicAlbum-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicAlbum-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicAlbum-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicAlbum-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicAlbum-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicAlbum' },
                comment,
                inLanguage,
                producer,
                creator,
                image,
                citation,
                albumRelease,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                albumReleaseType,
                publication,
                author,
                review,
                encoding,
                character,
                mainEntityOfPage,
                educationalAlignment,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                byArtist,
                dateModified,
                timeRequired,
                interactionStatistic,
                albumProductionType,
                track,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                hasPart,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return MusicAlbum;
}(_react.Component);

exports.default = MusicAlbum;
;

MusicAlbum.defaultProps = {};

MusicAlbum.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    albumRelease: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    albumReleaseType: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    byArtist: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    albumProductionType: _react2.default.propTypes.object,
    track: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicAlbumProductionType - Classification of the album by it's type of content: soundtrack, live album, studio album, etc.. Generated automatically by the reactGenerator. */


var MusicAlbumProductionType = function (_Component) {
    _inherits(MusicAlbumProductionType, _Component);

    function MusicAlbumProductionType() {
        _classCallCheck(this, MusicAlbumProductionType);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicAlbumProductionType).apply(this, arguments));
    }

    _createClass(MusicAlbumProductionType, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicAlbumProductionType-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicAlbumProductionType-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicAlbumProductionType-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicAlbumProductionType-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicAlbumProductionType' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return MusicAlbumProductionType;
}(_react.Component);

exports.default = MusicAlbumProductionType;
;

MusicAlbumProductionType.defaultProps = {};

MusicAlbumProductionType.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicAlbumReleaseType - The kind of release which this album is: single, EP or album.. Generated automatically by the reactGenerator. */


var MusicAlbumReleaseType = function (_Component) {
    _inherits(MusicAlbumReleaseType, _Component);

    function MusicAlbumReleaseType() {
        _classCallCheck(this, MusicAlbumReleaseType);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicAlbumReleaseType).apply(this, arguments));
    }

    _createClass(MusicAlbumReleaseType, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicAlbumReleaseType-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicAlbumReleaseType-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicAlbumReleaseType-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicAlbumReleaseType-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicAlbumReleaseType' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return MusicAlbumReleaseType;
}(_react.Component);

exports.default = MusicAlbumReleaseType;
;

MusicAlbumReleaseType.defaultProps = {};

MusicAlbumReleaseType.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _musicrecording = require('./musicrecording.js');

var _musicrecording2 = _interopRequireDefault(_musicrecording);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicComposition - A musical composition.. Generated automatically by the reactGenerator. */


var MusicComposition = function (_Component) {
    _inherits(MusicComposition, _Component);

    function MusicComposition() {
        _classCallCheck(this, MusicComposition);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicComposition).apply(this, arguments));
    }

    _createClass(MusicComposition, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicComposition-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    } else if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicComposition-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    }
                }
            }

            var musicArrangement = undefined;
            if (this.props.musicArrangement) {
                if (this.props.musicArrangement instanceof Array) {
                    musicArrangement = _react2.default.createElement(
                        'div',
                        { className: 'musicArrangement__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'musicArrangement__header', 'data-advice': 'HTML for the *head* of the section' },
                            'musicArrangements'
                        ),
                        this.props.musicArrangement.map(function (item, index) {
                            return _react2.default.createElement(MusicComposition, _extends({ key: index }, _this2.props.musicArrangement));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'musicArrangement__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    musicArrangement = _react2.default.createElement(MusicComposition, _extends({ key: index }, this.props.musicArrangement));
                }
            }

            var lyrics = undefined;
            if (this.props.lyrics) {
                if (this.props.lyrics instanceof Array) {
                    lyrics = _react2.default.createElement(
                        'div',
                        { className: 'lyrics__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'lyrics__header', 'data-advice': 'HTML for the *head* of the section' },
                            'lyricss'
                        ),
                        this.props.lyrics.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.lyrics));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'lyrics__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    lyrics = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.lyrics));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicComposition-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicComposition-image', src: this.props.image })
                        );
                    }
                }
            }

            var lyricist = undefined;
            if (this.props.lyricist) {
                if (this.props.lyricist instanceof Array) {
                    lyricist = _react2.default.createElement(
                        'div',
                        { className: 'lyricist__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'lyricist__header', 'data-advice': 'HTML for the *head* of the section' },
                            'lyricists'
                        ),
                        this.props.lyricist.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.lyricist));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'lyricist__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    lyricist = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.lyricist));
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var composer = undefined;
            if (this.props.composer) {
                if (this.props.composer instanceof Array) {
                    composer = _react2.default.createElement(
                        'div',
                        { className: 'composer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'composer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'composers'
                        ),
                        this.props.composer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.composer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.composer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'composer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        composer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.composer));
                    } else if (this.props['@type'] === 'Organization') {
                        composer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.composer));
                    }
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicComposition-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicComposition-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicComposition-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicComposition-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicComposition-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicComposition-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var recordedAs = undefined;
            if (this.props.recordedAs) {
                if (this.props.recordedAs instanceof Array) {
                    recordedAs = _react2.default.createElement(
                        'div',
                        { className: 'recordedAs__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAs__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAss'
                        ),
                        this.props.recordedAs.map(function (item, index) {
                            return _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, _this2.props.recordedAs));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAs__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAs = _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, this.props.recordedAs));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicComposition-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicComposition-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicComposition-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicComposition-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicComposition-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicComposition-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicComposition-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicComposition-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicComposition-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicComposition-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var firstPerformance = undefined;
            if (this.props.firstPerformance) {
                if (this.props.firstPerformance instanceof Array) {
                    firstPerformance = _react2.default.createElement(
                        'div',
                        { className: 'firstPerformance__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'firstPerformance__header', 'data-advice': 'HTML for the *head* of the section' },
                            'firstPerformances'
                        ),
                        this.props.firstPerformance.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.firstPerformance));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'firstPerformance__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    firstPerformance = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.firstPerformance));
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicComposition-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicComposition-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicComposition-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicComposition-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicComposition-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicComposition-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var includedComposition = undefined;
            if (this.props.includedComposition) {
                if (this.props.includedComposition instanceof Array) {
                    includedComposition = _react2.default.createElement(
                        'div',
                        { className: 'includedComposition__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'includedComposition__header', 'data-advice': 'HTML for the *head* of the section' },
                            'includedCompositions'
                        ),
                        this.props.includedComposition.map(function (item, index) {
                            return _react2.default.createElement(MusicComposition, _extends({ key: index }, _this2.props.includedComposition));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'includedComposition__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    includedComposition = _react2.default.createElement(MusicComposition, _extends({ key: index }, this.props.includedComposition));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicComposition-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicComposition-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicComposition-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicComposition-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicComposition' },
                comment,
                inLanguage,
                musicArrangement,
                lyrics,
                creator,
                image,
                lyricist,
                associatedMedia,
                accountablePerson,
                video,
                composer,
                contributor,
                mainEntity,
                producer,
                author,
                review,
                encoding,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                recordedAs,
                interactionStatistic,
                citation,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                firstPerformance,
                schemaVersion,
                contentLocation,
                publication,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                sourceOrganization,
                audience,
                includedComposition,
                mentions,
                audio,
                genre
            );
        }
    }]);

    return MusicComposition;
}(_react.Component);

exports.default = MusicComposition;
;

MusicComposition.defaultProps = {};

MusicComposition.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    musicArrangement: _react2.default.propTypes.object,
    lyrics: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    lyricist: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    composer: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    recordedAs: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    firstPerformance: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    includedComposition: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _offercatalog = require('./offercatalog.js');

var _offercatalog2 = _interopRequireDefault(_offercatalog);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _brand = require('./brand.js');

var _brand2 = _interopRequireDefault(_brand);

var _programmembership = require('./programmembership.js');

var _programmembership2 = _interopRequireDefault(_programmembership);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _demand = require('./demand.js');

var _demand2 = _interopRequireDefault(_demand);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _musicrecording = require('./musicrecording.js');

var _musicrecording2 = _interopRequireDefault(_musicrecording);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _musicalbum = require('./musicalbum.js');

var _musicalbum2 = _interopRequireDefault(_musicalbum);

var _itemlist = require('./itemlist.js');

var _itemlist2 = _interopRequireDefault(_itemlist);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _ownershipinfo = require('./ownershipinfo.js');

var _ownershipinfo2 = _interopRequireDefault(_ownershipinfo);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _contactpoint = require('./contactpoint.js');

var _contactpoint2 = _interopRequireDefault(_contactpoint);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicGroup - A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.. Generated automatically by the reactGenerator. */


var MusicGroup = function (_Component) {
    _inherits(MusicGroup, _Component);

    function MusicGroup() {
        _classCallCheck(this, MusicGroup);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicGroup).apply(this, arguments));
    }

    _createClass(MusicGroup, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var subOrganization = undefined;
            if (this.props.subOrganization) {
                if (this.props.subOrganization instanceof Array) {
                    subOrganization = _react2.default.createElement(
                        'div',
                        { className: 'subOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'subOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'subOrganizations'
                        ),
                        this.props.subOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.subOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'subOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    subOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.subOrganization));
                }
            }

            var founder = undefined;
            if (this.props.founder) {
                if (this.props.founder instanceof Array) {
                    founder = _react2.default.createElement(
                        'div',
                        { className: 'founder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'founder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'founders'
                        ),
                        this.props.founder.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.founder));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'founder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    founder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.founder));
                }
            }

            var parentOrganization = undefined;
            if (this.props.parentOrganization) {
                if (this.props.parentOrganization instanceof Array) {
                    parentOrganization = _react2.default.createElement(
                        'div',
                        { className: 'parentOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'parentOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'parentOrganizations'
                        ),
                        this.props.parentOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.parentOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'parentOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    parentOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.parentOrganization));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicGroup-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicGroup-image', src: this.props.image })
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var hasOfferCatalog = undefined;
            if (this.props.hasOfferCatalog) {
                if (this.props.hasOfferCatalog instanceof Array) {
                    hasOfferCatalog = _react2.default.createElement(
                        'div',
                        { className: 'hasOfferCatalog__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasOfferCatalog__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasOfferCatalogs'
                        ),
                        this.props.hasOfferCatalog.map(function (item, index) {
                            return _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, _this2.props.hasOfferCatalog));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasOfferCatalog__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasOfferCatalog = _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, this.props.hasOfferCatalog));
                }
            }

            var logo = undefined;
            if (this.props.logo) {
                if (this.props.logo instanceof Array) {
                    logo = _react2.default.createElement(
                        'div',
                        { className: 'logo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'logo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'logos'
                        ),
                        this.props.logo.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.logo));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicGroup-logo', href: _this2.props.logo, target: '_blank' },
                                        'logo'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'logo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        logo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.logo));
                    } else if (this.props['@type'] === 'URL') {
                        logo = _react2.default.createElement(
                            'div',
                            { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicGroup-logo', href: this.props.logo, target: '_blank' },
                                'logo'
                            )
                        );
                    }
                }
            }

            var event = undefined;
            if (this.props.event) {
                if (this.props.event instanceof Array) {
                    event = _react2.default.createElement(
                        'div',
                        { className: 'event__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'event__header', 'data-advice': 'HTML for the *head* of the section' },
                            'events'
                        ),
                        this.props.event.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.event));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'event__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    event = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.event));
                }
            }

            var album = undefined;
            if (this.props.album) {
                if (this.props.album instanceof Array) {
                    album = _react2.default.createElement(
                        'div',
                        { className: 'album__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'album__header', 'data-advice': 'HTML for the *head* of the section' },
                            'albums'
                        ),
                        this.props.album.map(function (item, index) {
                            return _react2.default.createElement(_musicalbum2.default, _extends({ key: index }, _this2.props.album));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'album__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    album = _react2.default.createElement(_musicalbum2.default, _extends({ key: index }, this.props.album));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicGroup-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicGroup-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var member = undefined;
            if (this.props.member) {
                if (this.props.member instanceof Array) {
                    member = _react2.default.createElement(
                        'div',
                        { className: 'member__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'member__header', 'data-advice': 'HTML for the *head* of the section' },
                            'members'
                        ),
                        this.props.member.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.member));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.member));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'member__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        member = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.member));
                    } else if (this.props['@type'] === 'Organization') {
                        member = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.member));
                    }
                }
            }

            var foundingLocation = undefined;
            if (this.props.foundingLocation) {
                if (this.props.foundingLocation instanceof Array) {
                    foundingLocation = _react2.default.createElement(
                        'div',
                        { className: 'foundingLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'foundingLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'foundingLocations'
                        ),
                        this.props.foundingLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.foundingLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'foundingLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    foundingLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.foundingLocation));
                }
            }

            var location = undefined;
            if (this.props.location) {
                if (this.props.location instanceof Array) {
                    location = _react2.default.createElement(
                        'div',
                        { className: 'location__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'location__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locations'
                        ),
                        this.props.location.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.location));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicGroup-location' },
                                        'location: ',
                                        _this2.props.location
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.location));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'location__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        location = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.location));
                    } else if (this.props['@type'] === 'Text') {
                        location = _react2.default.createElement(
                            'div',
                            { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicGroup-location' },
                                'location: ',
                                this.props.location
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        location = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.location));
                    }
                }
            }

            var employee = undefined;
            if (this.props.employee) {
                if (this.props.employee instanceof Array) {
                    employee = _react2.default.createElement(
                        'div',
                        { className: 'employee__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'employee__header', 'data-advice': 'HTML for the *head* of the section' },
                            'employees'
                        ),
                        this.props.employee.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.employee));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'employee__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    employee = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.employee));
                }
            }

            var seeks = undefined;
            if (this.props.seeks) {
                if (this.props.seeks instanceof Array) {
                    seeks = _react2.default.createElement(
                        'div',
                        { className: 'seeks__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'seeks__header', 'data-advice': 'HTML for the *head* of the section' },
                            'seekss'
                        ),
                        this.props.seeks.map(function (item, index) {
                            return _react2.default.createElement(_demand2.default, _extends({ key: index }, _this2.props.seeks));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'seeks__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    seeks = _react2.default.createElement(_demand2.default, _extends({ key: index }, this.props.seeks));
                }
            }

            var numberOfEmployees = undefined;
            if (this.props.numberOfEmployees) {
                if (this.props.numberOfEmployees instanceof Array) {
                    numberOfEmployees = _react2.default.createElement(
                        'div',
                        { className: 'numberOfEmployees__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'numberOfEmployees__header', 'data-advice': 'HTML for the *head* of the section' },
                            'numberOfEmployeess'
                        ),
                        this.props.numberOfEmployees.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.numberOfEmployees));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'numberOfEmployees__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    numberOfEmployees = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.numberOfEmployees));
                }
            }

            var track = undefined;
            if (this.props.track) {
                if (this.props.track instanceof Array) {
                    track = _react2.default.createElement(
                        'div',
                        { className: 'track__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'track__header', 'data-advice': 'HTML for the *head* of the section' },
                            'tracks'
                        ),
                        this.props.track.map(function (item, index) {
                            if (_this2.props['@type'] === 'ItemList') {
                                return _react2.default.createElement(_itemlist2.default, _extends({ key: index }, _this2.props.track));
                            } else if (_this2.props['@type'] === 'MusicRecording') {
                                return _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, _this2.props.track));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'track__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ItemList') {
                        track = _react2.default.createElement(_itemlist2.default, _extends({ key: index }, this.props.track));
                    } else if (this.props['@type'] === 'MusicRecording') {
                        track = _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, this.props.track));
                    }
                }
            }

            var brand = undefined;
            if (this.props.brand) {
                if (this.props.brand instanceof Array) {
                    brand = _react2.default.createElement(
                        'div',
                        { className: 'brand__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'brand__header', 'data-advice': 'HTML for the *head* of the section' },
                            'brands'
                        ),
                        this.props.brand.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.brand));
                            } else if (_this2.props['@type'] === 'Brand') {
                                return _react2.default.createElement(_brand2.default, _extends({ key: index }, _this2.props.brand));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'brand__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        brand = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.brand));
                    } else if (this.props['@type'] === 'Brand') {
                        brand = _react2.default.createElement(_brand2.default, _extends({ key: index }, this.props.brand));
                    }
                }
            }

            var department = undefined;
            if (this.props.department) {
                if (this.props.department instanceof Array) {
                    department = _react2.default.createElement(
                        'div',
                        { className: 'department__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'department__header', 'data-advice': 'HTML for the *head* of the section' },
                            'departments'
                        ),
                        this.props.department.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.department));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'department__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    department = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.department));
                }
            }

            var address = undefined;
            if (this.props.address) {
                if (this.props.address instanceof Array) {
                    address = _react2.default.createElement(
                        'div',
                        { className: 'address__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'address__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addresss'
                        ),
                        this.props.address.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicGroup-address' },
                                        'address: ',
                                        _this2.props.address
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.address));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'address__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        address = _react2.default.createElement(
                            'div',
                            { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicGroup-address' },
                                'address: ',
                                this.props.address
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        address = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.address));
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicGroup-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicGroup-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicGroup-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicGroup-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var contactPoint = undefined;
            if (this.props.contactPoint) {
                if (this.props.contactPoint instanceof Array) {
                    contactPoint = _react2.default.createElement(
                        'div',
                        { className: 'contactPoint__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contactPoint__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contactPoints'
                        ),
                        this.props.contactPoint.map(function (item, index) {
                            return _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, _this2.props.contactPoint));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contactPoint__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contactPoint = _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, this.props.contactPoint));
                }
            }

            var makesOffer = undefined;
            if (this.props.makesOffer) {
                if (this.props.makesOffer instanceof Array) {
                    makesOffer = _react2.default.createElement(
                        'div',
                        { className: 'makesOffer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'makesOffer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'makesOffers'
                        ),
                        this.props.makesOffer.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.makesOffer));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'makesOffer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    makesOffer = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.makesOffer));
                }
            }

            var hasPOS = undefined;
            if (this.props.hasPOS) {
                if (this.props.hasPOS instanceof Array) {
                    hasPOS = _react2.default.createElement(
                        'div',
                        { className: 'hasPOS__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPOS__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasPOSs'
                        ),
                        this.props.hasPOS.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.hasPOS));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPOS__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPOS = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.hasPOS));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var memberOf = undefined;
            if (this.props.memberOf) {
                if (this.props.memberOf instanceof Array) {
                    memberOf = _react2.default.createElement(
                        'div',
                        { className: 'memberOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'memberOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'memberOfs'
                        ),
                        this.props.memberOf.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.memberOf));
                            } else if (_this2.props['@type'] === 'ProgramMembership') {
                                return _react2.default.createElement(_programmembership2.default, _extends({ key: index }, _this2.props.memberOf));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'memberOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        memberOf = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.memberOf));
                    } else if (this.props['@type'] === 'ProgramMembership') {
                        memberOf = _react2.default.createElement(_programmembership2.default, _extends({ key: index }, this.props.memberOf));
                    }
                }
            }

            var alumni = undefined;
            if (this.props.alumni) {
                if (this.props.alumni instanceof Array) {
                    alumni = _react2.default.createElement(
                        'div',
                        { className: 'alumni__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'alumni__header', 'data-advice': 'HTML for the *head* of the section' },
                            'alumnis'
                        ),
                        this.props.alumni.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.alumni));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'alumni__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    alumni = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.alumni));
                }
            }

            var areaServed = undefined;
            if (this.props.areaServed) {
                if (this.props.areaServed instanceof Array) {
                    areaServed = _react2.default.createElement(
                        'div',
                        { className: 'areaServed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'areaServed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'areaServeds'
                        ),
                        this.props.areaServed.map(function (item, index) {
                            if (_this2.props['@type'] === 'AdministrativeArea') {
                                return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicGroup-areaServed' },
                                        'areaServed: ',
                                        _this2.props.areaServed
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.areaServed));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'areaServed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'AdministrativeArea') {
                        areaServed = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Place') {
                        areaServed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Text') {
                        areaServed = _react2.default.createElement(
                            'div',
                            { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicGroup-areaServed' },
                                'areaServed: ',
                                this.props.areaServed
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        areaServed = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.areaServed));
                    }
                }
            }

            var owns = undefined;
            if (this.props.owns) {
                if (this.props.owns instanceof Array) {
                    owns = _react2.default.createElement(
                        'div',
                        { className: 'owns__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'owns__header', 'data-advice': 'HTML for the *head* of the section' },
                            'ownss'
                        ),
                        this.props.owns.map(function (item, index) {
                            if (_this2.props['@type'] === 'Product') {
                                return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.owns));
                            } else if (_this2.props['@type'] === 'OwnershipInfo') {
                                return _react2.default.createElement(_ownershipinfo2.default, _extends({ key: index }, _this2.props.owns));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'owns__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Product') {
                        owns = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.owns));
                    } else if (this.props['@type'] === 'OwnershipInfo') {
                        owns = _react2.default.createElement(_ownershipinfo2.default, _extends({ key: index }, this.props.owns));
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicGroup' },
                subOrganization,
                founder,
                parentOrganization,
                image,
                aggregateRating,
                hasOfferCatalog,
                logo,
                event,
                album,
                review,
                mainEntityOfPage,
                member,
                foundingLocation,
                location,
                employee,
                seeks,
                numberOfEmployees,
                track,
                brand,
                department,
                address,
                genre,
                contactPoint,
                makesOffer,
                hasPOS,
                potentialAction,
                memberOf,
                alumni,
                areaServed,
                owns
            );
        }
    }]);

    return MusicGroup;
}(_react.Component);

exports.default = MusicGroup;
;

MusicGroup.defaultProps = {};

MusicGroup.propTypes = {
    subOrganization: _react2.default.propTypes.object,
    founder: _react2.default.propTypes.object,
    parentOrganization: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    hasOfferCatalog: _react2.default.propTypes.object,
    logo: _react2.default.propTypes.object,
    event: _react2.default.propTypes.object,
    album: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    member: _react2.default.propTypes.object,
    foundingLocation: _react2.default.propTypes.object,
    location: _react2.default.propTypes.object,
    employee: _react2.default.propTypes.object,
    seeks: _react2.default.propTypes.object,
    numberOfEmployees: _react2.default.propTypes.object,
    track: _react2.default.propTypes.object,
    brand: _react2.default.propTypes.object,
    department: _react2.default.propTypes.object,
    address: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    contactPoint: _react2.default.propTypes.object,
    makesOffer: _react2.default.propTypes.object,
    hasPOS: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    memberOf: _react2.default.propTypes.object,
    alumni: _react2.default.propTypes.object,
    areaServed: _react2.default.propTypes.object,
    owns: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _musicrecording = require('./musicrecording.js');

var _musicrecording2 = _interopRequireDefault(_musicrecording);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _itemlist = require('./itemlist.js');

var _itemlist2 = _interopRequireDefault(_itemlist);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicPlaylist - A collection of music tracks in playlist form.. Generated automatically by the reactGenerator. */


var MusicPlaylist = function (_Component) {
    _inherits(MusicPlaylist, _Component);

    function MusicPlaylist() {
        _classCallCheck(this, MusicPlaylist);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicPlaylist).apply(this, arguments));
    }

    _createClass(MusicPlaylist, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicPlaylist-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    } else if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicPlaylist-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicPlaylist-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicPlaylist-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicPlaylist-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicPlaylist-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicPlaylist-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicPlaylist-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicPlaylist-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicPlaylist-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicPlaylist-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicPlaylist-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var track = undefined;
            if (this.props.track) {
                if (this.props.track instanceof Array) {
                    track = _react2.default.createElement(
                        'div',
                        { className: 'track__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'track__header', 'data-advice': 'HTML for the *head* of the section' },
                            'tracks'
                        ),
                        this.props.track.map(function (item, index) {
                            if (_this2.props['@type'] === 'ItemList') {
                                return _react2.default.createElement(_itemlist2.default, _extends({ key: index }, _this2.props.track));
                            } else if (_this2.props['@type'] === 'MusicRecording') {
                                return _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, _this2.props.track));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'track__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ItemList') {
                        track = _react2.default.createElement(_itemlist2.default, _extends({ key: index }, this.props.track));
                    } else if (this.props['@type'] === 'MusicRecording') {
                        track = _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, this.props.track));
                    }
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicPlaylist-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicPlaylist-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicPlaylist-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicPlaylist-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicPlaylist-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicPlaylist-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicPlaylist-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicPlaylist-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicPlaylist-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicPlaylist-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicPlaylist-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicPlaylist-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicPlaylist-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicPlaylist-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicPlaylist-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicPlaylist-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicPlaylist-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicPlaylist-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicPlaylist' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                educationalAlignment,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                timeRequired,
                interactionStatistic,
                track,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                hasPart,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return MusicPlaylist;
}(_react.Component);

exports.default = MusicPlaylist;
;

MusicPlaylist.defaultProps = {};

MusicPlaylist.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    track: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _musicplaylist = require('./musicplaylist.js');

var _musicplaylist2 = _interopRequireDefault(_musicplaylist);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _musicalbum = require('./musicalbum.js');

var _musicalbum2 = _interopRequireDefault(_musicalbum);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _musiccomposition = require('./musiccomposition.js');

var _musiccomposition2 = _interopRequireDefault(_musiccomposition);

var _musicgroup = require('./musicgroup.js');

var _musicgroup2 = _interopRequireDefault(_musicgroup);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicRecording - A music recording (track), usually a single song.. Generated automatically by the reactGenerator. */


var MusicRecording = function (_Component) {
    _inherits(MusicRecording, _Component);

    function MusicRecording() {
        _classCallCheck(this, MusicRecording);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicRecording).apply(this, arguments));
    }

    _createClass(MusicRecording, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRecording-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRecording-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var inPlaylist = undefined;
            if (this.props.inPlaylist) {
                if (this.props.inPlaylist instanceof Array) {
                    inPlaylist = _react2.default.createElement(
                        'div',
                        { className: 'inPlaylist__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inPlaylist__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inPlaylists'
                        ),
                        this.props.inPlaylist.map(function (item, index) {
                            return _react2.default.createElement(_musicplaylist2.default, _extends({ key: index }, _this2.props.inPlaylist));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inPlaylist__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    inPlaylist = _react2.default.createElement(_musicplaylist2.default, _extends({ key: index }, this.props.inPlaylist));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicRecording-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicRecording-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRecording-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRecording-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicRecording-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicRecording-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var byArtist = undefined;
            if (this.props.byArtist) {
                if (this.props.byArtist instanceof Array) {
                    byArtist = _react2.default.createElement(
                        'div',
                        { className: 'byArtist__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'byArtist__header', 'data-advice': 'HTML for the *head* of the section' },
                            'byArtists'
                        ),
                        this.props.byArtist.map(function (item, index) {
                            return _react2.default.createElement(_musicgroup2.default, _extends({ key: index }, _this2.props.byArtist));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'byArtist__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    byArtist = _react2.default.createElement(_musicgroup2.default, _extends({ key: index }, this.props.byArtist));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicRecording-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicRecording-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicRecording-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicRecording-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var recordingOf = undefined;
            if (this.props.recordingOf) {
                if (this.props.recordingOf instanceof Array) {
                    recordingOf = _react2.default.createElement(
                        'div',
                        { className: 'recordingOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordingOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordingOfs'
                        ),
                        this.props.recordingOf.map(function (item, index) {
                            return _react2.default.createElement(_musiccomposition2.default, _extends({ key: index }, _this2.props.recordingOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordingOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordingOf = _react2.default.createElement(_musiccomposition2.default, _extends({ key: index }, this.props.recordingOf));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicRecording-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicRecording-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicRecording-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicRecording-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var inAlbum = undefined;
            if (this.props.inAlbum) {
                if (this.props.inAlbum instanceof Array) {
                    inAlbum = _react2.default.createElement(
                        'div',
                        { className: 'inAlbum__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inAlbum__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inAlbums'
                        ),
                        this.props.inAlbum.map(function (item, index) {
                            return _react2.default.createElement(_musicalbum2.default, _extends({ key: index }, _this2.props.inAlbum));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inAlbum__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    inAlbum = _react2.default.createElement(_musicalbum2.default, _extends({ key: index }, this.props.inAlbum));
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRecording-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRecording-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRecording-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRecording-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRecording-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicRecording-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRecording-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicRecording-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRecording-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicRecording-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRecording-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicRecording-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicRecording-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    } else if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicRecording-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicRecording' },
                comment,
                inLanguage,
                producer,
                creator,
                inPlaylist,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                encoding,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                byArtist,
                dateModified,
                recordingOf,
                interactionStatistic,
                educationalAlignment,
                duration,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                inAlbum,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return MusicRecording;
}(_react.Component);

exports.default = MusicRecording;
;

MusicRecording.defaultProps = {};

MusicRecording.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    inPlaylist: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    byArtist: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    recordingOf: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    inAlbum: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _musicreleaseformattype = require('./musicreleaseformattype.js');

var _musicreleaseformattype2 = _interopRequireDefault(_musicreleaseformattype);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _musicrecording = require('./musicrecording.js');

var _musicrecording2 = _interopRequireDefault(_musicrecording);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _itemlist = require('./itemlist.js');

var _itemlist2 = _interopRequireDefault(_itemlist);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _musicalbum = require('./musicalbum.js');

var _musicalbum2 = _interopRequireDefault(_musicalbum);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicRelease - A MusicRelease is a specific release of a music album.. Generated automatically by the reactGenerator. */


var MusicRelease = function (_Component) {
    _inherits(MusicRelease, _Component);

    function MusicRelease() {
        _classCallCheck(this, MusicRelease);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicRelease).apply(this, arguments));
    }

    _createClass(MusicRelease, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRelease-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRelease-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var recordLabel = undefined;
            if (this.props.recordLabel) {
                if (this.props.recordLabel instanceof Array) {
                    recordLabel = _react2.default.createElement(
                        'div',
                        { className: 'recordLabel__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordLabel__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordLabels'
                        ),
                        this.props.recordLabel.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recordLabel));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordLabel__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordLabel = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recordLabel));
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicRelease-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicRelease-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRelease-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRelease-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicRelease-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicRelease-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var releaseOf = undefined;
            if (this.props.releaseOf) {
                if (this.props.releaseOf instanceof Array) {
                    releaseOf = _react2.default.createElement(
                        'div',
                        { className: 'releaseOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releaseOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releaseOfs'
                        ),
                        this.props.releaseOf.map(function (item, index) {
                            return _react2.default.createElement(_musicalbum2.default, _extends({ key: index }, _this2.props.releaseOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releaseOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releaseOf = _react2.default.createElement(_musicalbum2.default, _extends({ key: index }, this.props.releaseOf));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicRelease-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicRelease-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicRelease-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicRelease-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var track = undefined;
            if (this.props.track) {
                if (this.props.track instanceof Array) {
                    track = _react2.default.createElement(
                        'div',
                        { className: 'track__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'track__header', 'data-advice': 'HTML for the *head* of the section' },
                            'tracks'
                        ),
                        this.props.track.map(function (item, index) {
                            if (_this2.props['@type'] === 'ItemList') {
                                return _react2.default.createElement(_itemlist2.default, _extends({ key: index }, _this2.props.track));
                            } else if (_this2.props['@type'] === 'MusicRecording') {
                                return _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, _this2.props.track));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'track__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ItemList') {
                        track = _react2.default.createElement(_itemlist2.default, _extends({ key: index }, this.props.track));
                    } else if (this.props['@type'] === 'MusicRecording') {
                        track = _react2.default.createElement(_musicrecording2.default, _extends({ key: index }, this.props.track));
                    }
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var creditedTo = undefined;
            if (this.props.creditedTo) {
                if (this.props.creditedTo instanceof Array) {
                    creditedTo = _react2.default.createElement(
                        'div',
                        { className: 'creditedTo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creditedTo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creditedTos'
                        ),
                        this.props.creditedTo.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creditedTo));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creditedTo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creditedTo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        creditedTo = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creditedTo));
                    } else if (this.props['@type'] === 'Person') {
                        creditedTo = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creditedTo));
                    }
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicRelease-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'MusicRelease-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicRelease-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'MusicRelease-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRelease-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRelease-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRelease-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRelease-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRelease-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicRelease-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRelease-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicRelease-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'MusicRelease-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicRelease-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'MusicRelease-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicRelease-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var musicReleaseFormat = undefined;
            if (this.props.musicReleaseFormat) {
                if (this.props.musicReleaseFormat instanceof Array) {
                    musicReleaseFormat = _react2.default.createElement(
                        'div',
                        { className: 'musicReleaseFormat__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'musicReleaseFormat__header', 'data-advice': 'HTML for the *head* of the section' },
                            'musicReleaseFormats'
                        ),
                        this.props.musicReleaseFormat.map(function (item, index) {
                            return _react2.default.createElement(_musicreleaseformattype2.default, _extends({ key: index }, _this2.props.musicReleaseFormat));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'musicReleaseFormat__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    musicReleaseFormat = _react2.default.createElement(_musicreleaseformattype2.default, _extends({ key: index }, this.props.musicReleaseFormat));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicRelease-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicRelease-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicRelease' },
                comment,
                inLanguage,
                recordLabel,
                producer,
                creator,
                image,
                citation,
                recordedAt,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                encoding,
                character,
                mainEntityOfPage,
                educationalAlignment,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                releaseOf,
                dateModified,
                timeRequired,
                interactionStatistic,
                track,
                duration,
                creditedTo,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                potentialAction,
                position,
                genre,
                schemaVersion,
                contentLocation,
                hasPart,
                publisher,
                about,
                musicReleaseFormat,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return MusicRelease;
}(_react.Component);

exports.default = MusicRelease;
;

MusicRelease.defaultProps = {};

MusicRelease.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    recordLabel: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    releaseOf: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    track: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    creditedTo: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    musicReleaseFormat: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* MusicReleaseFormatType - Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).. Generated automatically by the reactGenerator. */


var MusicReleaseFormatType = function (_Component) {
    _inherits(MusicReleaseFormatType, _Component);

    function MusicReleaseFormatType() {
        _classCallCheck(this, MusicReleaseFormatType);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MusicReleaseFormatType).apply(this, arguments));
    }

    _createClass(MusicReleaseFormatType, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'MusicReleaseFormatType-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'MusicReleaseFormatType-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'MusicReleaseFormatType-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'MusicReleaseFormatType-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'MusicReleaseFormatType' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return MusicReleaseFormatType;
}(_react.Component);

exports.default = MusicReleaseFormatType;
;

MusicReleaseFormatType.defaultProps = {};

MusicReleaseFormatType.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* NewsArticle - A news article.. Generated automatically by the reactGenerator. */


var NewsArticle = function (_Component) {
    _inherits(NewsArticle, _Component);

    function NewsArticle() {
        _classCallCheck(this, NewsArticle);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(NewsArticle).apply(this, arguments));
    }

    _createClass(NewsArticle, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'NewsArticle-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'NewsArticle-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var pageEnd = undefined;
            if (this.props.pageEnd) {
                if (this.props.pageEnd instanceof Array) {
                    pageEnd = _react2.default.createElement(
                        'div',
                        { className: 'pageEnd__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'pageEnd__header', 'data-advice': 'HTML for the *head* of the section' },
                            'pageEnds'
                        ),
                        this.props.pageEnd.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'pageEnd', 'data-advice': 'Put your HTML here. pageEnd is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-pageEnd' },
                                        'pageEnd: ',
                                        _this2.props.pageEnd
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'pageEnd', 'data-advice': 'Put your HTML here. pageEnd is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-pageEnd' },
                                        'pageEnd: ',
                                        _this2.props.pageEnd
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'pageEnd__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        pageEnd = _react2.default.createElement(
                            'div',
                            { className: 'pageEnd', 'data-advice': 'Put your HTML here. pageEnd is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-pageEnd' },
                                'pageEnd: ',
                                this.props.pageEnd
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        pageEnd = _react2.default.createElement(
                            'div',
                            { className: 'pageEnd', 'data-advice': 'Put your HTML here. pageEnd is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-pageEnd' },
                                'pageEnd: ',
                                this.props.pageEnd
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'NewsArticle-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'NewsArticle-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var pageStart = undefined;
            if (this.props.pageStart) {
                if (this.props.pageStart instanceof Array) {
                    pageStart = _react2.default.createElement(
                        'div',
                        { className: 'pageStart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'pageStart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'pageStarts'
                        ),
                        this.props.pageStart.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'pageStart', 'data-advice': 'Put your HTML here. pageStart is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-pageStart' },
                                        'pageStart: ',
                                        _this2.props.pageStart
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'pageStart', 'data-advice': 'Put your HTML here. pageStart is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-pageStart' },
                                        'pageStart: ',
                                        _this2.props.pageStart
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'pageStart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        pageStart = _react2.default.createElement(
                            'div',
                            { className: 'pageStart', 'data-advice': 'Put your HTML here. pageStart is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-pageStart' },
                                'pageStart: ',
                                this.props.pageStart
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        pageStart = _react2.default.createElement(
                            'div',
                            { className: 'pageStart', 'data-advice': 'Put your HTML here. pageStart is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-pageStart' },
                                'pageStart: ',
                                this.props.pageStart
                            )
                        );
                    }
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'NewsArticle-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'NewsArticle-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'NewsArticle-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'NewsArticle-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'NewsArticle-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'NewsArticle-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'NewsArticle-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'NewsArticle-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'NewsArticle-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'NewsArticle-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'NewsArticle-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'NewsArticle-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'NewsArticle-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'NewsArticle-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'NewsArticle-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    } else if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'NewsArticle-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'NewsArticle' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                pageEnd,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                pageStart,
                dateModified,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return NewsArticle;
}(_react.Component);

exports.default = NewsArticle;
;

NewsArticle.defaultProps = {};

NewsArticle.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    pageEnd: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    pageStart: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _service = require('./service.js');

var _service2 = _interopRequireDefault(_service);

var _businessentitytype = require('./businessentitytype.js');

var _businessentitytype2 = _interopRequireDefault(_businessentitytype);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _itemavailability = require('./itemavailability.js');

var _itemavailability2 = _interopRequireDefault(_itemavailability);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _offeritemcondition = require('./offeritemcondition.js');

var _offeritemcondition2 = _interopRequireDefault(_offeritemcondition);

var _businessfunction = require('./businessfunction.js');

var _businessfunction2 = _interopRequireDefault(_businessfunction);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _warrantypromise = require('./warrantypromise.js');

var _warrantypromise2 = _interopRequireDefault(_warrantypromise);

var _physicalactivitycategory = require('./physicalactivitycategory.js');

var _physicalactivitycategory2 = _interopRequireDefault(_physicalactivitycategory);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _typeandquantitynode = require('./typeandquantitynode.js');

var _typeandquantitynode2 = _interopRequireDefault(_typeandquantitynode);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _paymentmethod = require('./paymentmethod.js');

var _paymentmethod2 = _interopRequireDefault(_paymentmethod);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _pricespecification = require('./pricespecification.js');

var _pricespecification2 = _interopRequireDefault(_pricespecification);

var _deliverymethod = require('./deliverymethod.js');

var _deliverymethod2 = _interopRequireDefault(_deliverymethod);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Offer - An offer to transfer some rights to an item or to provide a service\u2014for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.\n\nFor GTIN-related fields, see\nCheck Digit calculator and validation guide from GS1.. Generated automatically by the reactGenerator. */


var Offer = function (_Component) {
    _inherits(Offer, _Component);

    function Offer() {
        _classCallCheck(this, Offer);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Offer).apply(this, arguments));
    }

    _createClass(Offer, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var warranty = undefined;
            if (this.props.warranty) {
                if (this.props.warranty instanceof Array) {
                    warranty = _react2.default.createElement(
                        'div',
                        { className: 'warranty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'warranty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'warrantys'
                        ),
                        this.props.warranty.map(function (item, index) {
                            return _react2.default.createElement(_warrantypromise2.default, _extends({ key: index }, _this2.props.warranty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'warranty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    warranty = _react2.default.createElement(_warrantypromise2.default, _extends({ key: index }, this.props.warranty));
                }
            }

            var ineligibleRegion = undefined;
            if (this.props.ineligibleRegion) {
                if (this.props.ineligibleRegion instanceof Array) {
                    ineligibleRegion = _react2.default.createElement(
                        'div',
                        { className: 'ineligibleRegion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'ineligibleRegion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'ineligibleRegions'
                        ),
                        this.props.ineligibleRegion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.ineligibleRegion));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'ineligibleRegion', 'data-advice': 'Put your HTML here. ineligibleRegion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Offer-ineligibleRegion' },
                                        'ineligibleRegion: ',
                                        _this2.props.ineligibleRegion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.ineligibleRegion));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'ineligibleRegion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        ineligibleRegion = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.ineligibleRegion));
                    } else if (this.props['@type'] === 'Text') {
                        ineligibleRegion = _react2.default.createElement(
                            'div',
                            { className: 'ineligibleRegion', 'data-advice': 'Put your HTML here. ineligibleRegion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Offer-ineligibleRegion' },
                                'ineligibleRegion: ',
                                this.props.ineligibleRegion
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        ineligibleRegion = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.ineligibleRegion));
                    }
                }
            }

            var eligibleRegion = undefined;
            if (this.props.eligibleRegion) {
                if (this.props.eligibleRegion instanceof Array) {
                    eligibleRegion = _react2.default.createElement(
                        'div',
                        { className: 'eligibleRegion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleRegion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleRegions'
                        ),
                        this.props.eligibleRegion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.eligibleRegion));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'eligibleRegion', 'data-advice': 'Put your HTML here. eligibleRegion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Offer-eligibleRegion' },
                                        'eligibleRegion: ',
                                        _this2.props.eligibleRegion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.eligibleRegion));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleRegion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        eligibleRegion = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.eligibleRegion));
                    } else if (this.props['@type'] === 'Text') {
                        eligibleRegion = _react2.default.createElement(
                            'div',
                            { className: 'eligibleRegion', 'data-advice': 'Put your HTML here. eligibleRegion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Offer-eligibleRegion' },
                                'eligibleRegion: ',
                                this.props.eligibleRegion
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        eligibleRegion = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.eligibleRegion));
                    }
                }
            }

            var businessFunction = undefined;
            if (this.props.businessFunction) {
                if (this.props.businessFunction instanceof Array) {
                    businessFunction = _react2.default.createElement(
                        'div',
                        { className: 'businessFunction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'businessFunction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'businessFunctions'
                        ),
                        this.props.businessFunction.map(function (item, index) {
                            return _react2.default.createElement(_businessfunction2.default, _extends({ key: index }, _this2.props.businessFunction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'businessFunction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    businessFunction = _react2.default.createElement(_businessfunction2.default, _extends({ key: index }, this.props.businessFunction));
                }
            }

            var deliveryLeadTime = undefined;
            if (this.props.deliveryLeadTime) {
                if (this.props.deliveryLeadTime instanceof Array) {
                    deliveryLeadTime = _react2.default.createElement(
                        'div',
                        { className: 'deliveryLeadTime__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'deliveryLeadTime__header', 'data-advice': 'HTML for the *head* of the section' },
                            'deliveryLeadTimes'
                        ),
                        this.props.deliveryLeadTime.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.deliveryLeadTime));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'deliveryLeadTime__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    deliveryLeadTime = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.deliveryLeadTime));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var availability = undefined;
            if (this.props.availability) {
                if (this.props.availability instanceof Array) {
                    availability = _react2.default.createElement(
                        'div',
                        { className: 'availability__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availability__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availabilitys'
                        ),
                        this.props.availability.map(function (item, index) {
                            return _react2.default.createElement(_itemavailability2.default, _extends({ key: index }, _this2.props.availability));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availability__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availability = _react2.default.createElement(_itemavailability2.default, _extends({ key: index }, this.props.availability));
                }
            }

            var offeredBy = undefined;
            if (this.props.offeredBy) {
                if (this.props.offeredBy instanceof Array) {
                    offeredBy = _react2.default.createElement(
                        'div',
                        { className: 'offeredBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offeredBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offeredBys'
                        ),
                        this.props.offeredBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.offeredBy));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.offeredBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offeredBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        offeredBy = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.offeredBy));
                    } else if (this.props['@type'] === 'Organization') {
                        offeredBy = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.offeredBy));
                    }
                }
            }

            var category = undefined;
            if (this.props.category) {
                if (this.props.category instanceof Array) {
                    category = _react2.default.createElement(
                        'div',
                        { className: 'category__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'category__header', 'data-advice': 'HTML for the *head* of the section' },
                            'categorys'
                        ),
                        this.props.category.map(function (item, index) {
                            if (_this2.props['@type'] === 'Thing') {
                                return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'PhysicalActivityCategory') {
                                return _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Offer-category' },
                                        'category: ',
                                        _this2.props.category
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'category__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Thing') {
                        category = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'PhysicalActivityCategory') {
                        category = _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'Text') {
                        category = _react2.default.createElement(
                            'div',
                            { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Offer-category' },
                                'category: ',
                                this.props.category
                            )
                        );
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var seller = undefined;
            if (this.props.seller) {
                if (this.props.seller instanceof Array) {
                    seller = _react2.default.createElement(
                        'div',
                        { className: 'seller__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'seller__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sellers'
                        ),
                        this.props.seller.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.seller));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.seller));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'seller__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        seller = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.seller));
                    } else if (this.props['@type'] === 'Organization') {
                        seller = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.seller));
                    }
                }
            }

            var includesObject = undefined;
            if (this.props.includesObject) {
                if (this.props.includesObject instanceof Array) {
                    includesObject = _react2.default.createElement(
                        'div',
                        { className: 'includesObject__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'includesObject__header', 'data-advice': 'HTML for the *head* of the section' },
                            'includesObjects'
                        ),
                        this.props.includesObject.map(function (item, index) {
                            return _react2.default.createElement(_typeandquantitynode2.default, _extends({ key: index }, _this2.props.includesObject));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'includesObject__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    includesObject = _react2.default.createElement(_typeandquantitynode2.default, _extends({ key: index }, this.props.includesObject));
                }
            }

            var eligibleDuration = undefined;
            if (this.props.eligibleDuration) {
                if (this.props.eligibleDuration instanceof Array) {
                    eligibleDuration = _react2.default.createElement(
                        'div',
                        { className: 'eligibleDuration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleDuration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleDurations'
                        ),
                        this.props.eligibleDuration.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.eligibleDuration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleDuration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleDuration = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.eligibleDuration));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Offer-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Offer-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Offer-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Offer-image', src: this.props.image })
                        );
                    }
                }
            }

            var advanceBookingRequirement = undefined;
            if (this.props.advanceBookingRequirement) {
                if (this.props.advanceBookingRequirement instanceof Array) {
                    advanceBookingRequirement = _react2.default.createElement(
                        'div',
                        { className: 'advanceBookingRequirement__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'advanceBookingRequirement__header', 'data-advice': 'HTML for the *head* of the section' },
                            'advanceBookingRequirements'
                        ),
                        this.props.advanceBookingRequirement.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.advanceBookingRequirement));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'advanceBookingRequirement__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    advanceBookingRequirement = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.advanceBookingRequirement));
                }
            }

            var inventoryLevel = undefined;
            if (this.props.inventoryLevel) {
                if (this.props.inventoryLevel instanceof Array) {
                    inventoryLevel = _react2.default.createElement(
                        'div',
                        { className: 'inventoryLevel__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inventoryLevel__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inventoryLevels'
                        ),
                        this.props.inventoryLevel.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.inventoryLevel));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inventoryLevel__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    inventoryLevel = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.inventoryLevel));
                }
            }

            var availableAtOrFrom = undefined;
            if (this.props.availableAtOrFrom) {
                if (this.props.availableAtOrFrom instanceof Array) {
                    availableAtOrFrom = _react2.default.createElement(
                        'div',
                        { className: 'availableAtOrFrom__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableAtOrFrom__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableAtOrFroms'
                        ),
                        this.props.availableAtOrFrom.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.availableAtOrFrom));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableAtOrFrom__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableAtOrFrom = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.availableAtOrFrom));
                }
            }

            var price = undefined;
            if (this.props.price) {
                if (this.props.price instanceof Array) {
                    price = _react2.default.createElement(
                        'div',
                        { className: 'price__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'price__header', 'data-advice': 'HTML for the *head* of the section' },
                            'prices'
                        ),
                        this.props.price.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'price', 'data-advice': 'Put your HTML here. price is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Offer-price' },
                                        'price: ',
                                        _this2.props.price
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'price', 'data-advice': 'Put your HTML here. price is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Offer-price' },
                                        'price: ',
                                        _this2.props.price
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'price__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        price = _react2.default.createElement(
                            'div',
                            { className: 'price', 'data-advice': 'Put your HTML here. price is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Offer-price' },
                                'price: ',
                                this.props.price
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        price = _react2.default.createElement(
                            'div',
                            { className: 'price', 'data-advice': 'Put your HTML here. price is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Offer-price' },
                                'price: ',
                                this.props.price
                            )
                        );
                    }
                }
            }

            var eligibleCustomerType = undefined;
            if (this.props.eligibleCustomerType) {
                if (this.props.eligibleCustomerType instanceof Array) {
                    eligibleCustomerType = _react2.default.createElement(
                        'div',
                        { className: 'eligibleCustomerType__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleCustomerType__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleCustomerTypes'
                        ),
                        this.props.eligibleCustomerType.map(function (item, index) {
                            return _react2.default.createElement(_businessentitytype2.default, _extends({ key: index }, _this2.props.eligibleCustomerType));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleCustomerType__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleCustomerType = _react2.default.createElement(_businessentitytype2.default, _extends({ key: index }, this.props.eligibleCustomerType));
                }
            }

            var priceSpecification = undefined;
            if (this.props.priceSpecification) {
                if (this.props.priceSpecification instanceof Array) {
                    priceSpecification = _react2.default.createElement(
                        'div',
                        { className: 'priceSpecification__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'priceSpecification__header', 'data-advice': 'HTML for the *head* of the section' },
                            'priceSpecifications'
                        ),
                        this.props.priceSpecification.map(function (item, index) {
                            return _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, _this2.props.priceSpecification));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'priceSpecification__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    priceSpecification = _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, this.props.priceSpecification));
                }
            }

            var acceptedPaymentMethod = undefined;
            if (this.props.acceptedPaymentMethod) {
                if (this.props.acceptedPaymentMethod instanceof Array) {
                    acceptedPaymentMethod = _react2.default.createElement(
                        'div',
                        { className: 'acceptedPaymentMethod__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'acceptedPaymentMethod__header', 'data-advice': 'HTML for the *head* of the section' },
                            'acceptedPaymentMethods'
                        ),
                        this.props.acceptedPaymentMethod.map(function (item, index) {
                            return _react2.default.createElement(_paymentmethod2.default, _extends({ key: index }, _this2.props.acceptedPaymentMethod));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'acceptedPaymentMethod__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    acceptedPaymentMethod = _react2.default.createElement(_paymentmethod2.default, _extends({ key: index }, this.props.acceptedPaymentMethod));
                }
            }

            var eligibleTransactionVolume = undefined;
            if (this.props.eligibleTransactionVolume) {
                if (this.props.eligibleTransactionVolume instanceof Array) {
                    eligibleTransactionVolume = _react2.default.createElement(
                        'div',
                        { className: 'eligibleTransactionVolume__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleTransactionVolume__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleTransactionVolumes'
                        ),
                        this.props.eligibleTransactionVolume.map(function (item, index) {
                            return _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, _this2.props.eligibleTransactionVolume));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleTransactionVolume__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleTransactionVolume = _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, this.props.eligibleTransactionVolume));
                }
            }

            var eligibleQuantity = undefined;
            if (this.props.eligibleQuantity) {
                if (this.props.eligibleQuantity instanceof Array) {
                    eligibleQuantity = _react2.default.createElement(
                        'div',
                        { className: 'eligibleQuantity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleQuantity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleQuantitys'
                        ),
                        this.props.eligibleQuantity.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.eligibleQuantity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleQuantity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleQuantity = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.eligibleQuantity));
                }
            }

            var itemCondition = undefined;
            if (this.props.itemCondition) {
                if (this.props.itemCondition instanceof Array) {
                    itemCondition = _react2.default.createElement(
                        'div',
                        { className: 'itemCondition__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemCondition__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemConditions'
                        ),
                        this.props.itemCondition.map(function (item, index) {
                            return _react2.default.createElement(_offeritemcondition2.default, _extends({ key: index }, _this2.props.itemCondition));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemCondition__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    itemCondition = _react2.default.createElement(_offeritemcondition2.default, _extends({ key: index }, this.props.itemCondition));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var availableDeliveryMethod = undefined;
            if (this.props.availableDeliveryMethod) {
                if (this.props.availableDeliveryMethod instanceof Array) {
                    availableDeliveryMethod = _react2.default.createElement(
                        'div',
                        { className: 'availableDeliveryMethod__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableDeliveryMethod__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableDeliveryMethods'
                        ),
                        this.props.availableDeliveryMethod.map(function (item, index) {
                            return _react2.default.createElement(_deliverymethod2.default, _extends({ key: index }, _this2.props.availableDeliveryMethod));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableDeliveryMethod__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableDeliveryMethod = _react2.default.createElement(_deliverymethod2.default, _extends({ key: index }, this.props.availableDeliveryMethod));
                }
            }

            var itemOffered = undefined;
            if (this.props.itemOffered) {
                if (this.props.itemOffered instanceof Array) {
                    itemOffered = _react2.default.createElement(
                        'div',
                        { className: 'itemOffered__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemOffered__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemOffereds'
                        ),
                        this.props.itemOffered.map(function (item, index) {
                            if (_this2.props['@type'] === 'Product') {
                                return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.itemOffered));
                            } else if (_this2.props['@type'] === 'Service') {
                                return _react2.default.createElement(_service2.default, _extends({ key: index }, _this2.props.itemOffered));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemOffered__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Product') {
                        itemOffered = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.itemOffered));
                    } else if (this.props['@type'] === 'Service') {
                        itemOffered = _react2.default.createElement(_service2.default, _extends({ key: index }, this.props.itemOffered));
                    }
                }
            }

            var areaServed = undefined;
            if (this.props.areaServed) {
                if (this.props.areaServed instanceof Array) {
                    areaServed = _react2.default.createElement(
                        'div',
                        { className: 'areaServed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'areaServed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'areaServeds'
                        ),
                        this.props.areaServed.map(function (item, index) {
                            if (_this2.props['@type'] === 'AdministrativeArea') {
                                return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Offer-areaServed' },
                                        'areaServed: ',
                                        _this2.props.areaServed
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.areaServed));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'areaServed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'AdministrativeArea') {
                        areaServed = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Place') {
                        areaServed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Text') {
                        areaServed = _react2.default.createElement(
                            'div',
                            { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Offer-areaServed' },
                                'areaServed: ',
                                this.props.areaServed
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        areaServed = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.areaServed));
                    }
                }
            }

            var addOn = undefined;
            if (this.props.addOn) {
                if (this.props.addOn instanceof Array) {
                    addOn = _react2.default.createElement(
                        'div',
                        { className: 'addOn__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'addOn__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addOns'
                        ),
                        this.props.addOn.map(function (item, index) {
                            return _react2.default.createElement(Offer, _extends({ key: index }, _this2.props.addOn));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'addOn__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    addOn = _react2.default.createElement(Offer, _extends({ key: index }, this.props.addOn));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Offer' },
                warranty,
                ineligibleRegion,
                eligibleRegion,
                businessFunction,
                deliveryLeadTime,
                aggregateRating,
                availability,
                offeredBy,
                category,
                review,
                seller,
                includesObject,
                eligibleDuration,
                mainEntityOfPage,
                image,
                advanceBookingRequirement,
                inventoryLevel,
                availableAtOrFrom,
                price,
                eligibleCustomerType,
                priceSpecification,
                acceptedPaymentMethod,
                eligibleTransactionVolume,
                eligibleQuantity,
                itemCondition,
                potentialAction,
                availableDeliveryMethod,
                itemOffered,
                areaServed,
                addOn
            );
        }
    }]);

    return Offer;
}(_react.Component);

exports.default = Offer;
;

Offer.defaultProps = {};

Offer.propTypes = {
    warranty: _react2.default.propTypes.object,
    ineligibleRegion: _react2.default.propTypes.object,
    eligibleRegion: _react2.default.propTypes.object,
    businessFunction: _react2.default.propTypes.object,
    deliveryLeadTime: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    availability: _react2.default.propTypes.object,
    offeredBy: _react2.default.propTypes.object,
    category: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    seller: _react2.default.propTypes.object,
    includesObject: _react2.default.propTypes.object,
    eligibleDuration: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    advanceBookingRequirement: _react2.default.propTypes.object,
    inventoryLevel: _react2.default.propTypes.object,
    availableAtOrFrom: _react2.default.propTypes.object,
    price: _react2.default.propTypes.object,
    eligibleCustomerType: _react2.default.propTypes.object,
    priceSpecification: _react2.default.propTypes.object,
    acceptedPaymentMethod: _react2.default.propTypes.object,
    eligibleTransactionVolume: _react2.default.propTypes.object,
    eligibleQuantity: _react2.default.propTypes.object,
    itemCondition: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    availableDeliveryMethod: _react2.default.propTypes.object,
    itemOffered: _react2.default.propTypes.object,
    areaServed: _react2.default.propTypes.object,
    addOn: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _listitem = require('./listitem.js');

var _listitem2 = _interopRequireDefault(_listitem);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _itemlistordertype = require('./itemlistordertype.js');

var _itemlistordertype2 = _interopRequireDefault(_itemlistordertype);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* OfferCatalog - An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.. Generated automatically by the reactGenerator. */


var OfferCatalog = function (_Component) {
    _inherits(OfferCatalog, _Component);

    function OfferCatalog() {
        _classCallCheck(this, OfferCatalog);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(OfferCatalog).apply(this, arguments));
    }

    _createClass(OfferCatalog, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'OfferCatalog-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'OfferCatalog-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'OfferCatalog-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'OfferCatalog-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var itemListElement = undefined;
            if (this.props.itemListElement) {
                if (this.props.itemListElement instanceof Array) {
                    itemListElement = _react2.default.createElement(
                        'div',
                        { className: 'itemListElement__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemListElement__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemListElements'
                        ),
                        this.props.itemListElement.map(function (item, index) {
                            if (_this2.props['@type'] === 'Thing') {
                                return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.itemListElement));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'itemListElement', 'data-advice': 'Put your HTML here. itemListElement is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'OfferCatalog-itemListElement' },
                                        'itemListElement: ',
                                        _this2.props.itemListElement
                                    )
                                );
                            } else if (_this2.props['@type'] === 'ListItem') {
                                return _react2.default.createElement(_listitem2.default, _extends({ key: index }, _this2.props.itemListElement));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemListElement__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Thing') {
                        itemListElement = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.itemListElement));
                    } else if (this.props['@type'] === 'Text') {
                        itemListElement = _react2.default.createElement(
                            'div',
                            { className: 'itemListElement', 'data-advice': 'Put your HTML here. itemListElement is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'OfferCatalog-itemListElement' },
                                'itemListElement: ',
                                this.props.itemListElement
                            )
                        );
                    } else if (this.props['@type'] === 'ListItem') {
                        itemListElement = _react2.default.createElement(_listitem2.default, _extends({ key: index }, this.props.itemListElement));
                    }
                }
            }

            var itemListOrder = undefined;
            if (this.props.itemListOrder) {
                if (this.props.itemListOrder instanceof Array) {
                    itemListOrder = _react2.default.createElement(
                        'div',
                        { className: 'itemListOrder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemListOrder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemListOrders'
                        ),
                        this.props.itemListOrder.map(function (item, index) {
                            if (_this2.props['@type'] === 'ItemListOrderType') {
                                return _react2.default.createElement(_itemlistordertype2.default, _extends({ key: index }, _this2.props.itemListOrder));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'itemListOrder', 'data-advice': 'Put your HTML here. itemListOrder is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'OfferCatalog-itemListOrder' },
                                        'itemListOrder: ',
                                        _this2.props.itemListOrder
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemListOrder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ItemListOrderType') {
                        itemListOrder = _react2.default.createElement(_itemlistordertype2.default, _extends({ key: index }, this.props.itemListOrder));
                    } else if (this.props['@type'] === 'Text') {
                        itemListOrder = _react2.default.createElement(
                            'div',
                            { className: 'itemListOrder', 'data-advice': 'Put your HTML here. itemListOrder is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'OfferCatalog-itemListOrder' },
                                'itemListOrder: ',
                                this.props.itemListOrder
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'OfferCatalog' },
                mainEntityOfPage,
                image,
                potentialAction,
                itemListElement,
                itemListOrder
            );
        }
    }]);

    return OfferCatalog;
}(_react.Component);

exports.default = OfferCatalog;
;

OfferCatalog.defaultProps = {};

OfferCatalog.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    itemListElement: _react2.default.propTypes.object,
    itemListOrder: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* OfferItemCondition - A list of possible conditions for the item.. Generated automatically by the reactGenerator. */


var OfferItemCondition = function (_Component) {
    _inherits(OfferItemCondition, _Component);

    function OfferItemCondition() {
        _classCallCheck(this, OfferItemCondition);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(OfferItemCondition).apply(this, arguments));
    }

    _createClass(OfferItemCondition, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'OfferItemCondition-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'OfferItemCondition-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'OfferItemCondition-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'OfferItemCondition-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'OfferItemCondition' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return OfferItemCondition;
}(_react.Component);

exports.default = OfferItemCondition;
;

OfferItemCondition.defaultProps = {};

OfferItemCondition.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dayofweek = require('./dayofweek.js');

var _dayofweek2 = _interopRequireDefault(_dayofweek);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _time = require('./time.js');

var _time2 = _interopRequireDefault(_time);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* OpeningHoursSpecification - A structured value providing information about the opening hours of a place or a certain service inside a place.. Generated automatically by the reactGenerator. */


var OpeningHoursSpecification = function (_Component) {
    _inherits(OpeningHoursSpecification, _Component);

    function OpeningHoursSpecification() {
        _classCallCheck(this, OpeningHoursSpecification);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(OpeningHoursSpecification).apply(this, arguments));
    }

    _createClass(OpeningHoursSpecification, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var dayOfWeek = undefined;
            if (this.props.dayOfWeek) {
                if (this.props.dayOfWeek instanceof Array) {
                    dayOfWeek = _react2.default.createElement(
                        'div',
                        { className: 'dayOfWeek__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dayOfWeek__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dayOfWeeks'
                        ),
                        this.props.dayOfWeek.map(function (item, index) {
                            return _react2.default.createElement(_dayofweek2.default, _extends({ key: index }, _this2.props.dayOfWeek));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dayOfWeek__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    dayOfWeek = _react2.default.createElement(_dayofweek2.default, _extends({ key: index }, this.props.dayOfWeek));
                }
            }

            var closes = undefined;
            if (this.props.closes) {
                if (this.props.closes instanceof Array) {
                    closes = _react2.default.createElement(
                        'div',
                        { className: 'closes__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'closes__header', 'data-advice': 'HTML for the *head* of the section' },
                            'closess'
                        ),
                        this.props.closes.map(function (item, index) {
                            return _react2.default.createElement(_time2.default, _extends({ key: index }, _this2.props.closes));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'closes__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    closes = _react2.default.createElement(_time2.default, _extends({ key: index }, this.props.closes));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'OpeningHoursSpecification-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'OpeningHoursSpecification-image', src: this.props.image })
                        );
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'OpeningHoursSpecification-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'OpeningHoursSpecification-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var opens = undefined;
            if (this.props.opens) {
                if (this.props.opens instanceof Array) {
                    opens = _react2.default.createElement(
                        'div',
                        { className: 'opens__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'opens__header', 'data-advice': 'HTML for the *head* of the section' },
                            'openss'
                        ),
                        this.props.opens.map(function (item, index) {
                            return _react2.default.createElement(_time2.default, _extends({ key: index }, _this2.props.opens));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'opens__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    opens = _react2.default.createElement(_time2.default, _extends({ key: index }, this.props.opens));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'OpeningHoursSpecification' },
                dayOfWeek,
                closes,
                potentialAction,
                image,
                mainEntityOfPage,
                opens
            );
        }
    }]);

    return OpeningHoursSpecification;
}(_react.Component);

exports.default = OpeningHoursSpecification;
;

OpeningHoursSpecification.defaultProps = {};

OpeningHoursSpecification.propTypes = {
    dayOfWeek: _react2.default.propTypes.object,
    closes: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    opens: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _programmembership = require('./programmembership.js');

var _programmembership2 = _interopRequireDefault(_programmembership);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _offercatalog = require('./offercatalog.js');

var _offercatalog2 = _interopRequireDefault(_offercatalog);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _brand = require('./brand.js');

var _brand2 = _interopRequireDefault(_brand);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _ownershipinfo = require('./ownershipinfo.js');

var _ownershipinfo2 = _interopRequireDefault(_ownershipinfo);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _demand = require('./demand.js');

var _demand2 = _interopRequireDefault(_demand);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _contactpoint = require('./contactpoint.js');

var _contactpoint2 = _interopRequireDefault(_contactpoint);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Organization - An organization such as a school, NGO, corporation, club, etc.. Generated automatically by the reactGenerator. */


var Organization = function (_Component) {
    _inherits(Organization, _Component);

    function Organization() {
        _classCallCheck(this, Organization);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Organization).apply(this, arguments));
    }

    _createClass(Organization, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var founder = undefined;
            if (this.props.founder) {
                if (this.props.founder instanceof Array) {
                    founder = _react2.default.createElement(
                        'div',
                        { className: 'founder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'founder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'founders'
                        ),
                        this.props.founder.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.founder));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'founder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    founder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.founder));
                }
            }

            var parentOrganization = undefined;
            if (this.props.parentOrganization) {
                if (this.props.parentOrganization instanceof Array) {
                    parentOrganization = _react2.default.createElement(
                        'div',
                        { className: 'parentOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'parentOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'parentOrganizations'
                        ),
                        this.props.parentOrganization.map(function (item, index) {
                            return _react2.default.createElement(Organization, _extends({ key: index }, _this2.props.parentOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'parentOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    parentOrganization = _react2.default.createElement(Organization, _extends({ key: index }, this.props.parentOrganization));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Organization-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Organization-image', src: this.props.image })
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var hasOfferCatalog = undefined;
            if (this.props.hasOfferCatalog) {
                if (this.props.hasOfferCatalog instanceof Array) {
                    hasOfferCatalog = _react2.default.createElement(
                        'div',
                        { className: 'hasOfferCatalog__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasOfferCatalog__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasOfferCatalogs'
                        ),
                        this.props.hasOfferCatalog.map(function (item, index) {
                            return _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, _this2.props.hasOfferCatalog));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasOfferCatalog__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasOfferCatalog = _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, this.props.hasOfferCatalog));
                }
            }

            var logo = undefined;
            if (this.props.logo) {
                if (this.props.logo instanceof Array) {
                    logo = _react2.default.createElement(
                        'div',
                        { className: 'logo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'logo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'logos'
                        ),
                        this.props.logo.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.logo));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Organization-logo', href: _this2.props.logo, target: '_blank' },
                                        'logo'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'logo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        logo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.logo));
                    } else if (this.props['@type'] === 'URL') {
                        logo = _react2.default.createElement(
                            'div',
                            { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Organization-logo', href: this.props.logo, target: '_blank' },
                                'logo'
                            )
                        );
                    }
                }
            }

            var event = undefined;
            if (this.props.event) {
                if (this.props.event instanceof Array) {
                    event = _react2.default.createElement(
                        'div',
                        { className: 'event__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'event__header', 'data-advice': 'HTML for the *head* of the section' },
                            'events'
                        ),
                        this.props.event.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.event));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'event__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    event = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.event));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Organization-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Organization-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var member = undefined;
            if (this.props.member) {
                if (this.props.member instanceof Array) {
                    member = _react2.default.createElement(
                        'div',
                        { className: 'member__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'member__header', 'data-advice': 'HTML for the *head* of the section' },
                            'members'
                        ),
                        this.props.member.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.member));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(Organization, _extends({ key: index }, _this2.props.member));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'member__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        member = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.member));
                    } else if (this.props['@type'] === 'Organization') {
                        member = _react2.default.createElement(Organization, _extends({ key: index }, this.props.member));
                    }
                }
            }

            var foundingLocation = undefined;
            if (this.props.foundingLocation) {
                if (this.props.foundingLocation instanceof Array) {
                    foundingLocation = _react2.default.createElement(
                        'div',
                        { className: 'foundingLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'foundingLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'foundingLocations'
                        ),
                        this.props.foundingLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.foundingLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'foundingLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    foundingLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.foundingLocation));
                }
            }

            var location = undefined;
            if (this.props.location) {
                if (this.props.location instanceof Array) {
                    location = _react2.default.createElement(
                        'div',
                        { className: 'location__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'location__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locations'
                        ),
                        this.props.location.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.location));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Organization-location' },
                                        'location: ',
                                        _this2.props.location
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.location));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'location__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        location = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.location));
                    } else if (this.props['@type'] === 'Text') {
                        location = _react2.default.createElement(
                            'div',
                            { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Organization-location' },
                                'location: ',
                                this.props.location
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        location = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.location));
                    }
                }
            }

            var employee = undefined;
            if (this.props.employee) {
                if (this.props.employee instanceof Array) {
                    employee = _react2.default.createElement(
                        'div',
                        { className: 'employee__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'employee__header', 'data-advice': 'HTML for the *head* of the section' },
                            'employees'
                        ),
                        this.props.employee.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.employee));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'employee__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    employee = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.employee));
                }
            }

            var seeks = undefined;
            if (this.props.seeks) {
                if (this.props.seeks instanceof Array) {
                    seeks = _react2.default.createElement(
                        'div',
                        { className: 'seeks__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'seeks__header', 'data-advice': 'HTML for the *head* of the section' },
                            'seekss'
                        ),
                        this.props.seeks.map(function (item, index) {
                            return _react2.default.createElement(_demand2.default, _extends({ key: index }, _this2.props.seeks));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'seeks__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    seeks = _react2.default.createElement(_demand2.default, _extends({ key: index }, this.props.seeks));
                }
            }

            var numberOfEmployees = undefined;
            if (this.props.numberOfEmployees) {
                if (this.props.numberOfEmployees instanceof Array) {
                    numberOfEmployees = _react2.default.createElement(
                        'div',
                        { className: 'numberOfEmployees__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'numberOfEmployees__header', 'data-advice': 'HTML for the *head* of the section' },
                            'numberOfEmployeess'
                        ),
                        this.props.numberOfEmployees.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.numberOfEmployees));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'numberOfEmployees__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    numberOfEmployees = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.numberOfEmployees));
                }
            }

            var brand = undefined;
            if (this.props.brand) {
                if (this.props.brand instanceof Array) {
                    brand = _react2.default.createElement(
                        'div',
                        { className: 'brand__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'brand__header', 'data-advice': 'HTML for the *head* of the section' },
                            'brands'
                        ),
                        this.props.brand.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(Organization, _extends({ key: index }, _this2.props.brand));
                            } else if (_this2.props['@type'] === 'Brand') {
                                return _react2.default.createElement(_brand2.default, _extends({ key: index }, _this2.props.brand));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'brand__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        brand = _react2.default.createElement(Organization, _extends({ key: index }, this.props.brand));
                    } else if (this.props['@type'] === 'Brand') {
                        brand = _react2.default.createElement(_brand2.default, _extends({ key: index }, this.props.brand));
                    }
                }
            }

            var department = undefined;
            if (this.props.department) {
                if (this.props.department instanceof Array) {
                    department = _react2.default.createElement(
                        'div',
                        { className: 'department__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'department__header', 'data-advice': 'HTML for the *head* of the section' },
                            'departments'
                        ),
                        this.props.department.map(function (item, index) {
                            return _react2.default.createElement(Organization, _extends({ key: index }, _this2.props.department));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'department__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    department = _react2.default.createElement(Organization, _extends({ key: index }, this.props.department));
                }
            }

            var address = undefined;
            if (this.props.address) {
                if (this.props.address instanceof Array) {
                    address = _react2.default.createElement(
                        'div',
                        { className: 'address__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'address__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addresss'
                        ),
                        this.props.address.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Organization-address' },
                                        'address: ',
                                        _this2.props.address
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.address));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'address__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        address = _react2.default.createElement(
                            'div',
                            { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Organization-address' },
                                'address: ',
                                this.props.address
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        address = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.address));
                    }
                }
            }

            var subOrganization = undefined;
            if (this.props.subOrganization) {
                if (this.props.subOrganization instanceof Array) {
                    subOrganization = _react2.default.createElement(
                        'div',
                        { className: 'subOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'subOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'subOrganizations'
                        ),
                        this.props.subOrganization.map(function (item, index) {
                            return _react2.default.createElement(Organization, _extends({ key: index }, _this2.props.subOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'subOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    subOrganization = _react2.default.createElement(Organization, _extends({ key: index }, this.props.subOrganization));
                }
            }

            var contactPoint = undefined;
            if (this.props.contactPoint) {
                if (this.props.contactPoint instanceof Array) {
                    contactPoint = _react2.default.createElement(
                        'div',
                        { className: 'contactPoint__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contactPoint__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contactPoints'
                        ),
                        this.props.contactPoint.map(function (item, index) {
                            return _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, _this2.props.contactPoint));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contactPoint__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contactPoint = _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, this.props.contactPoint));
                }
            }

            var makesOffer = undefined;
            if (this.props.makesOffer) {
                if (this.props.makesOffer instanceof Array) {
                    makesOffer = _react2.default.createElement(
                        'div',
                        { className: 'makesOffer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'makesOffer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'makesOffers'
                        ),
                        this.props.makesOffer.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.makesOffer));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'makesOffer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    makesOffer = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.makesOffer));
                }
            }

            var hasPOS = undefined;
            if (this.props.hasPOS) {
                if (this.props.hasPOS instanceof Array) {
                    hasPOS = _react2.default.createElement(
                        'div',
                        { className: 'hasPOS__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPOS__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasPOSs'
                        ),
                        this.props.hasPOS.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.hasPOS));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPOS__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPOS = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.hasPOS));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var memberOf = undefined;
            if (this.props.memberOf) {
                if (this.props.memberOf instanceof Array) {
                    memberOf = _react2.default.createElement(
                        'div',
                        { className: 'memberOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'memberOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'memberOfs'
                        ),
                        this.props.memberOf.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(Organization, _extends({ key: index }, _this2.props.memberOf));
                            } else if (_this2.props['@type'] === 'ProgramMembership') {
                                return _react2.default.createElement(_programmembership2.default, _extends({ key: index }, _this2.props.memberOf));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'memberOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        memberOf = _react2.default.createElement(Organization, _extends({ key: index }, this.props.memberOf));
                    } else if (this.props['@type'] === 'ProgramMembership') {
                        memberOf = _react2.default.createElement(_programmembership2.default, _extends({ key: index }, this.props.memberOf));
                    }
                }
            }

            var alumni = undefined;
            if (this.props.alumni) {
                if (this.props.alumni instanceof Array) {
                    alumni = _react2.default.createElement(
                        'div',
                        { className: 'alumni__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'alumni__header', 'data-advice': 'HTML for the *head* of the section' },
                            'alumnis'
                        ),
                        this.props.alumni.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.alumni));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'alumni__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    alumni = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.alumni));
                }
            }

            var areaServed = undefined;
            if (this.props.areaServed) {
                if (this.props.areaServed instanceof Array) {
                    areaServed = _react2.default.createElement(
                        'div',
                        { className: 'areaServed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'areaServed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'areaServeds'
                        ),
                        this.props.areaServed.map(function (item, index) {
                            if (_this2.props['@type'] === 'AdministrativeArea') {
                                return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Organization-areaServed' },
                                        'areaServed: ',
                                        _this2.props.areaServed
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.areaServed));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'areaServed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'AdministrativeArea') {
                        areaServed = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Place') {
                        areaServed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Text') {
                        areaServed = _react2.default.createElement(
                            'div',
                            { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Organization-areaServed' },
                                'areaServed: ',
                                this.props.areaServed
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        areaServed = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.areaServed));
                    }
                }
            }

            var owns = undefined;
            if (this.props.owns) {
                if (this.props.owns instanceof Array) {
                    owns = _react2.default.createElement(
                        'div',
                        { className: 'owns__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'owns__header', 'data-advice': 'HTML for the *head* of the section' },
                            'ownss'
                        ),
                        this.props.owns.map(function (item, index) {
                            if (_this2.props['@type'] === 'Product') {
                                return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.owns));
                            } else if (_this2.props['@type'] === 'OwnershipInfo') {
                                return _react2.default.createElement(_ownershipinfo2.default, _extends({ key: index }, _this2.props.owns));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'owns__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Product') {
                        owns = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.owns));
                    } else if (this.props['@type'] === 'OwnershipInfo') {
                        owns = _react2.default.createElement(_ownershipinfo2.default, _extends({ key: index }, this.props.owns));
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Organization' },
                founder,
                parentOrganization,
                image,
                aggregateRating,
                hasOfferCatalog,
                logo,
                event,
                review,
                mainEntityOfPage,
                member,
                foundingLocation,
                location,
                employee,
                seeks,
                numberOfEmployees,
                brand,
                department,
                address,
                subOrganization,
                contactPoint,
                makesOffer,
                hasPOS,
                potentialAction,
                memberOf,
                alumni,
                areaServed,
                owns
            );
        }
    }]);

    return Organization;
}(_react.Component);

exports.default = Organization;
;

Organization.defaultProps = {};

Organization.propTypes = {
    founder: _react2.default.propTypes.object,
    parentOrganization: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    hasOfferCatalog: _react2.default.propTypes.object,
    logo: _react2.default.propTypes.object,
    event: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    member: _react2.default.propTypes.object,
    foundingLocation: _react2.default.propTypes.object,
    location: _react2.default.propTypes.object,
    employee: _react2.default.propTypes.object,
    seeks: _react2.default.propTypes.object,
    numberOfEmployees: _react2.default.propTypes.object,
    brand: _react2.default.propTypes.object,
    department: _react2.default.propTypes.object,
    address: _react2.default.propTypes.object,
    subOrganization: _react2.default.propTypes.object,
    contactPoint: _react2.default.propTypes.object,
    makesOffer: _react2.default.propTypes.object,
    hasPOS: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    memberOf: _react2.default.propTypes.object,
    alumni: _react2.default.propTypes.object,
    areaServed: _react2.default.propTypes.object,
    owns: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* OwnershipInfo - A structured value providing information about when a certain organization or person owned a certain product.. Generated automatically by the reactGenerator. */


var OwnershipInfo = function (_Component) {
    _inherits(OwnershipInfo, _Component);

    function OwnershipInfo() {
        _classCallCheck(this, OwnershipInfo);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(OwnershipInfo).apply(this, arguments));
    }

    _createClass(OwnershipInfo, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'OwnershipInfo-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'OwnershipInfo-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'OwnershipInfo-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'OwnershipInfo-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var acquiredFrom = undefined;
            if (this.props.acquiredFrom) {
                if (this.props.acquiredFrom instanceof Array) {
                    acquiredFrom = _react2.default.createElement(
                        'div',
                        { className: 'acquiredFrom__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'acquiredFrom__header', 'data-advice': 'HTML for the *head* of the section' },
                            'acquiredFroms'
                        ),
                        this.props.acquiredFrom.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.acquiredFrom));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.acquiredFrom));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'acquiredFrom__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        acquiredFrom = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.acquiredFrom));
                    } else if (this.props['@type'] === 'Organization') {
                        acquiredFrom = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.acquiredFrom));
                    }
                }
            }

            var typeOfGood = undefined;
            if (this.props.typeOfGood) {
                if (this.props.typeOfGood instanceof Array) {
                    typeOfGood = _react2.default.createElement(
                        'div',
                        { className: 'typeOfGood__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'typeOfGood__header', 'data-advice': 'HTML for the *head* of the section' },
                            'typeOfGoods'
                        ),
                        this.props.typeOfGood.map(function (item, index) {
                            return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.typeOfGood));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'typeOfGood__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    typeOfGood = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.typeOfGood));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'OwnershipInfo' },
                mainEntityOfPage,
                image,
                potentialAction,
                acquiredFrom,
                typeOfGood
            );
        }
    }]);

    return OwnershipInfo;
}(_react.Component);

exports.default = OwnershipInfo;
;

OwnershipInfo.defaultProps = {};

OwnershipInfo.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    acquiredFrom: _react2.default.propTypes.object,
    typeOfGood: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* PaymentMethod - A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Commonly used values:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#ByBankTransferInAdvance
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#ByInvoice
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Cash
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#CheckInAdvance
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#COD
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#DirectDebit
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#GoogleCheckout
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#PayPal
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#PaySwarm. Generated automatically by the reactGenerator. */


var PaymentMethod = function (_Component) {
    _inherits(PaymentMethod, _Component);

    function PaymentMethod() {
        _classCallCheck(this, PaymentMethod);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(PaymentMethod).apply(this, arguments));
    }

    _createClass(PaymentMethod, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'PaymentMethod-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'PaymentMethod-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'PaymentMethod-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'PaymentMethod-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'PaymentMethod' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return PaymentMethod;
}(_react.Component);

exports.default = PaymentMethod;
;

PaymentMethod.defaultProps = {};

PaymentMethod.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _distance = require('./distance.js');

var _distance2 = _interopRequireDefault(_distance);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _educationalorganization = require('./educationalorganization.js');

var _educationalorganization2 = _interopRequireDefault(_educationalorganization);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _country = require('./country.js');

var _country2 = _interopRequireDefault(_country);

var _brand = require('./brand.js');

var _brand2 = _interopRequireDefault(_brand);

var _pricespecification = require('./pricespecification.js');

var _pricespecification2 = _interopRequireDefault(_pricespecification);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _programmembership = require('./programmembership.js');

var _programmembership2 = _interopRequireDefault(_programmembership);

var _ownershipinfo = require('./ownershipinfo.js');

var _ownershipinfo2 = _interopRequireDefault(_ownershipinfo);

var _offercatalog = require('./offercatalog.js');

var _offercatalog2 = _interopRequireDefault(_offercatalog);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _demand = require('./demand.js');

var _demand2 = _interopRequireDefault(_demand);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _contactpoint = require('./contactpoint.js');

var _contactpoint2 = _interopRequireDefault(_contactpoint);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Person - A person (alive, dead, undead, or fictional).. Generated automatically by the reactGenerator. */


var Person = function (_Component) {
    _inherits(Person, _Component);

    function Person() {
        _classCallCheck(this, Person);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Person).apply(this, arguments));
    }

    _createClass(Person, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var weight = undefined;
            if (this.props.weight) {
                if (this.props.weight instanceof Array) {
                    weight = _react2.default.createElement(
                        'div',
                        { className: 'weight__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'weight__header', 'data-advice': 'HTML for the *head* of the section' },
                            'weights'
                        ),
                        this.props.weight.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.weight));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'weight__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    weight = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.weight));
                }
            }

            var follows = undefined;
            if (this.props.follows) {
                if (this.props.follows instanceof Array) {
                    follows = _react2.default.createElement(
                        'div',
                        { className: 'follows__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'follows__header', 'data-advice': 'HTML for the *head* of the section' },
                            'followss'
                        ),
                        this.props.follows.map(function (item, index) {
                            return _react2.default.createElement(Person, _extends({ key: index }, _this2.props.follows));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'follows__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    follows = _react2.default.createElement(Person, _extends({ key: index }, this.props.follows));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Person-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Person-image', src: this.props.image })
                        );
                    }
                }
            }

            var relatedTo = undefined;
            if (this.props.relatedTo) {
                if (this.props.relatedTo instanceof Array) {
                    relatedTo = _react2.default.createElement(
                        'div',
                        { className: 'relatedTo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relatedTo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relatedTos'
                        ),
                        this.props.relatedTo.map(function (item, index) {
                            return _react2.default.createElement(Person, _extends({ key: index }, _this2.props.relatedTo));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relatedTo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relatedTo = _react2.default.createElement(Person, _extends({ key: index }, this.props.relatedTo));
                }
            }

            var height = undefined;
            if (this.props.height) {
                if (this.props.height instanceof Array) {
                    height = _react2.default.createElement(
                        'div',
                        { className: 'height__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'height__header', 'data-advice': 'HTML for the *head* of the section' },
                            'heights'
                        ),
                        this.props.height.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.height));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.height));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'height__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        height = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.height));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        height = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.height));
                    }
                }
            }

            var affiliation = undefined;
            if (this.props.affiliation) {
                if (this.props.affiliation instanceof Array) {
                    affiliation = _react2.default.createElement(
                        'div',
                        { className: 'affiliation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'affiliation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'affiliations'
                        ),
                        this.props.affiliation.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.affiliation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'affiliation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    affiliation = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.affiliation));
                }
            }

            var workLocation = undefined;
            if (this.props.workLocation) {
                if (this.props.workLocation instanceof Array) {
                    workLocation = _react2.default.createElement(
                        'div',
                        { className: 'workLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workLocations'
                        ),
                        this.props.workLocation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.workLocation));
                            } else if (_this2.props['@type'] === 'ContactPoint') {
                                return _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, _this2.props.workLocation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        workLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.workLocation));
                    } else if (this.props['@type'] === 'ContactPoint') {
                        workLocation = _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, this.props.workLocation));
                    }
                }
            }

            var hasOfferCatalog = undefined;
            if (this.props.hasOfferCatalog) {
                if (this.props.hasOfferCatalog instanceof Array) {
                    hasOfferCatalog = _react2.default.createElement(
                        'div',
                        { className: 'hasOfferCatalog__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasOfferCatalog__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasOfferCatalogs'
                        ),
                        this.props.hasOfferCatalog.map(function (item, index) {
                            return _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, _this2.props.hasOfferCatalog));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasOfferCatalog__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasOfferCatalog = _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, this.props.hasOfferCatalog));
                }
            }

            var children = undefined;
            if (this.props.children) {
                if (this.props.children instanceof Array) {
                    children = _react2.default.createElement(
                        'div',
                        { className: 'children__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'children__header', 'data-advice': 'HTML for the *head* of the section' },
                            'childrens'
                        ),
                        this.props.children.map(function (item, index) {
                            return _react2.default.createElement(Person, _extends({ key: index }, _this2.props.children));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'children__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    children = _react2.default.createElement(Person, _extends({ key: index }, this.props.children));
                }
            }

            var performerIn = undefined;
            if (this.props.performerIn) {
                if (this.props.performerIn instanceof Array) {
                    performerIn = _react2.default.createElement(
                        'div',
                        { className: 'performerIn__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'performerIn__header', 'data-advice': 'HTML for the *head* of the section' },
                            'performerIns'
                        ),
                        this.props.performerIn.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.performerIn));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'performerIn__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    performerIn = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.performerIn));
                }
            }

            var worksFor = undefined;
            if (this.props.worksFor) {
                if (this.props.worksFor instanceof Array) {
                    worksFor = _react2.default.createElement(
                        'div',
                        { className: 'worksFor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'worksFor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'worksFors'
                        ),
                        this.props.worksFor.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.worksFor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'worksFor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    worksFor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.worksFor));
                }
            }

            var netWorth = undefined;
            if (this.props.netWorth) {
                if (this.props.netWorth instanceof Array) {
                    netWorth = _react2.default.createElement(
                        'div',
                        { className: 'netWorth__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'netWorth__header', 'data-advice': 'HTML for the *head* of the section' },
                            'netWorths'
                        ),
                        this.props.netWorth.map(function (item, index) {
                            return _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, _this2.props.netWorth));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'netWorth__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    netWorth = _react2.default.createElement(_pricespecification2.default, _extends({ key: index }, this.props.netWorth));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Person-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Person-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var homeLocation = undefined;
            if (this.props.homeLocation) {
                if (this.props.homeLocation instanceof Array) {
                    homeLocation = _react2.default.createElement(
                        'div',
                        { className: 'homeLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'homeLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'homeLocations'
                        ),
                        this.props.homeLocation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.homeLocation));
                            } else if (_this2.props['@type'] === 'ContactPoint') {
                                return _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, _this2.props.homeLocation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'homeLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        homeLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.homeLocation));
                    } else if (this.props['@type'] === 'ContactPoint') {
                        homeLocation = _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, this.props.homeLocation));
                    }
                }
            }

            var seeks = undefined;
            if (this.props.seeks) {
                if (this.props.seeks instanceof Array) {
                    seeks = _react2.default.createElement(
                        'div',
                        { className: 'seeks__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'seeks__header', 'data-advice': 'HTML for the *head* of the section' },
                            'seekss'
                        ),
                        this.props.seeks.map(function (item, index) {
                            return _react2.default.createElement(_demand2.default, _extends({ key: index }, _this2.props.seeks));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'seeks__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    seeks = _react2.default.createElement(_demand2.default, _extends({ key: index }, this.props.seeks));
                }
            }

            var colleague = undefined;
            if (this.props.colleague) {
                if (this.props.colleague instanceof Array) {
                    colleague = _react2.default.createElement(
                        'div',
                        { className: 'colleague__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'colleague__header', 'data-advice': 'HTML for the *head* of the section' },
                            'colleagues'
                        ),
                        this.props.colleague.map(function (item, index) {
                            return _react2.default.createElement(Person, _extends({ key: index }, _this2.props.colleague));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'colleague__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    colleague = _react2.default.createElement(Person, _extends({ key: index }, this.props.colleague));
                }
            }

            var birthPlace = undefined;
            if (this.props.birthPlace) {
                if (this.props.birthPlace instanceof Array) {
                    birthPlace = _react2.default.createElement(
                        'div',
                        { className: 'birthPlace__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'birthPlace__header', 'data-advice': 'HTML for the *head* of the section' },
                            'birthPlaces'
                        ),
                        this.props.birthPlace.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.birthPlace));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'birthPlace__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    birthPlace = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.birthPlace));
                }
            }

            var knows = undefined;
            if (this.props.knows) {
                if (this.props.knows instanceof Array) {
                    knows = _react2.default.createElement(
                        'div',
                        { className: 'knows__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'knows__header', 'data-advice': 'HTML for the *head* of the section' },
                            'knowss'
                        ),
                        this.props.knows.map(function (item, index) {
                            return _react2.default.createElement(Person, _extends({ key: index }, _this2.props.knows));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'knows__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    knows = _react2.default.createElement(Person, _extends({ key: index }, this.props.knows));
                }
            }

            var parent = undefined;
            if (this.props.parent) {
                if (this.props.parent instanceof Array) {
                    parent = _react2.default.createElement(
                        'div',
                        { className: 'parent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'parent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'parents'
                        ),
                        this.props.parent.map(function (item, index) {
                            return _react2.default.createElement(Person, _extends({ key: index }, _this2.props.parent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'parent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    parent = _react2.default.createElement(Person, _extends({ key: index }, this.props.parent));
                }
            }

            var brand = undefined;
            if (this.props.brand) {
                if (this.props.brand instanceof Array) {
                    brand = _react2.default.createElement(
                        'div',
                        { className: 'brand__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'brand__header', 'data-advice': 'HTML for the *head* of the section' },
                            'brands'
                        ),
                        this.props.brand.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.brand));
                            } else if (_this2.props['@type'] === 'Brand') {
                                return _react2.default.createElement(_brand2.default, _extends({ key: index }, _this2.props.brand));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'brand__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        brand = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.brand));
                    } else if (this.props['@type'] === 'Brand') {
                        brand = _react2.default.createElement(_brand2.default, _extends({ key: index }, this.props.brand));
                    }
                }
            }

            var address = undefined;
            if (this.props.address) {
                if (this.props.address instanceof Array) {
                    address = _react2.default.createElement(
                        'div',
                        { className: 'address__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'address__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addresss'
                        ),
                        this.props.address.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Person-address' },
                                        'address: ',
                                        _this2.props.address
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.address));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'address__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        address = _react2.default.createElement(
                            'div',
                            { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Person-address' },
                                'address: ',
                                this.props.address
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        address = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.address));
                    }
                }
            }

            var nationality = undefined;
            if (this.props.nationality) {
                if (this.props.nationality instanceof Array) {
                    nationality = _react2.default.createElement(
                        'div',
                        { className: 'nationality__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'nationality__header', 'data-advice': 'HTML for the *head* of the section' },
                            'nationalitys'
                        ),
                        this.props.nationality.map(function (item, index) {
                            return _react2.default.createElement(_country2.default, _extends({ key: index }, _this2.props.nationality));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'nationality__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    nationality = _react2.default.createElement(_country2.default, _extends({ key: index }, this.props.nationality));
                }
            }

            var contactPoint = undefined;
            if (this.props.contactPoint) {
                if (this.props.contactPoint instanceof Array) {
                    contactPoint = _react2.default.createElement(
                        'div',
                        { className: 'contactPoint__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contactPoint__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contactPoints'
                        ),
                        this.props.contactPoint.map(function (item, index) {
                            return _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, _this2.props.contactPoint));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contactPoint__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contactPoint = _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, this.props.contactPoint));
                }
            }

            var spouse = undefined;
            if (this.props.spouse) {
                if (this.props.spouse instanceof Array) {
                    spouse = _react2.default.createElement(
                        'div',
                        { className: 'spouse__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'spouse__header', 'data-advice': 'HTML for the *head* of the section' },
                            'spouses'
                        ),
                        this.props.spouse.map(function (item, index) {
                            return _react2.default.createElement(Person, _extends({ key: index }, _this2.props.spouse));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'spouse__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    spouse = _react2.default.createElement(Person, _extends({ key: index }, this.props.spouse));
                }
            }

            var makesOffer = undefined;
            if (this.props.makesOffer) {
                if (this.props.makesOffer instanceof Array) {
                    makesOffer = _react2.default.createElement(
                        'div',
                        { className: 'makesOffer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'makesOffer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'makesOffers'
                        ),
                        this.props.makesOffer.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.makesOffer));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'makesOffer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    makesOffer = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.makesOffer));
                }
            }

            var hasPOS = undefined;
            if (this.props.hasPOS) {
                if (this.props.hasPOS instanceof Array) {
                    hasPOS = _react2.default.createElement(
                        'div',
                        { className: 'hasPOS__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPOS__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasPOSs'
                        ),
                        this.props.hasPOS.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.hasPOS));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPOS__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPOS = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.hasPOS));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var sibling = undefined;
            if (this.props.sibling) {
                if (this.props.sibling instanceof Array) {
                    sibling = _react2.default.createElement(
                        'div',
                        { className: 'sibling__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sibling__header', 'data-advice': 'HTML for the *head* of the section' },
                            'siblings'
                        ),
                        this.props.sibling.map(function (item, index) {
                            return _react2.default.createElement(Person, _extends({ key: index }, _this2.props.sibling));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sibling__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sibling = _react2.default.createElement(Person, _extends({ key: index }, this.props.sibling));
                }
            }

            var memberOf = undefined;
            if (this.props.memberOf) {
                if (this.props.memberOf instanceof Array) {
                    memberOf = _react2.default.createElement(
                        'div',
                        { className: 'memberOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'memberOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'memberOfs'
                        ),
                        this.props.memberOf.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.memberOf));
                            } else if (_this2.props['@type'] === 'ProgramMembership') {
                                return _react2.default.createElement(_programmembership2.default, _extends({ key: index }, _this2.props.memberOf));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'memberOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        memberOf = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.memberOf));
                    } else if (this.props['@type'] === 'ProgramMembership') {
                        memberOf = _react2.default.createElement(_programmembership2.default, _extends({ key: index }, this.props.memberOf));
                    }
                }
            }

            var deathPlace = undefined;
            if (this.props.deathPlace) {
                if (this.props.deathPlace instanceof Array) {
                    deathPlace = _react2.default.createElement(
                        'div',
                        { className: 'deathPlace__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'deathPlace__header', 'data-advice': 'HTML for the *head* of the section' },
                            'deathPlaces'
                        ),
                        this.props.deathPlace.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.deathPlace));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'deathPlace__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    deathPlace = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.deathPlace));
                }
            }

            var owns = undefined;
            if (this.props.owns) {
                if (this.props.owns instanceof Array) {
                    owns = _react2.default.createElement(
                        'div',
                        { className: 'owns__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'owns__header', 'data-advice': 'HTML for the *head* of the section' },
                            'ownss'
                        ),
                        this.props.owns.map(function (item, index) {
                            if (_this2.props['@type'] === 'Product') {
                                return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.owns));
                            } else if (_this2.props['@type'] === 'OwnershipInfo') {
                                return _react2.default.createElement(_ownershipinfo2.default, _extends({ key: index }, _this2.props.owns));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'owns__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Product') {
                        owns = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.owns));
                    } else if (this.props['@type'] === 'OwnershipInfo') {
                        owns = _react2.default.createElement(_ownershipinfo2.default, _extends({ key: index }, this.props.owns));
                    }
                }
            }

            var alumniOf = undefined;
            if (this.props.alumniOf) {
                if (this.props.alumniOf instanceof Array) {
                    alumniOf = _react2.default.createElement(
                        'div',
                        { className: 'alumniOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'alumniOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'alumniOfs'
                        ),
                        this.props.alumniOf.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.alumniOf));
                            } else if (_this2.props['@type'] === 'EducationalOrganization') {
                                return _react2.default.createElement(_educationalorganization2.default, _extends({ key: index }, _this2.props.alumniOf));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'alumniOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        alumniOf = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.alumniOf));
                    } else if (this.props['@type'] === 'EducationalOrganization') {
                        alumniOf = _react2.default.createElement(_educationalorganization2.default, _extends({ key: index }, this.props.alumniOf));
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Person' },
                weight,
                follows,
                image,
                relatedTo,
                height,
                affiliation,
                workLocation,
                hasOfferCatalog,
                children,
                performerIn,
                worksFor,
                netWorth,
                mainEntityOfPage,
                homeLocation,
                seeks,
                colleague,
                birthPlace,
                knows,
                parent,
                brand,
                address,
                nationality,
                contactPoint,
                spouse,
                makesOffer,
                hasPOS,
                potentialAction,
                sibling,
                memberOf,
                deathPlace,
                owns,
                alumniOf
            );
        }
    }]);

    return Person;
}(_react.Component);

exports.default = Person;
;

Person.defaultProps = {};

Person.propTypes = {
    weight: _react2.default.propTypes.object,
    follows: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    relatedTo: _react2.default.propTypes.object,
    height: _react2.default.propTypes.object,
    affiliation: _react2.default.propTypes.object,
    workLocation: _react2.default.propTypes.object,
    hasOfferCatalog: _react2.default.propTypes.object,
    children: _react2.default.propTypes.object,
    performerIn: _react2.default.propTypes.object,
    worksFor: _react2.default.propTypes.object,
    netWorth: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    homeLocation: _react2.default.propTypes.object,
    seeks: _react2.default.propTypes.object,
    colleague: _react2.default.propTypes.object,
    birthPlace: _react2.default.propTypes.object,
    knows: _react2.default.propTypes.object,
    parent: _react2.default.propTypes.object,
    brand: _react2.default.propTypes.object,
    address: _react2.default.propTypes.object,
    nationality: _react2.default.propTypes.object,
    contactPoint: _react2.default.propTypes.object,
    spouse: _react2.default.propTypes.object,
    makesOffer: _react2.default.propTypes.object,
    hasPOS: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    sibling: _react2.default.propTypes.object,
    memberOf: _react2.default.propTypes.object,
    deathPlace: _react2.default.propTypes.object,
    owns: _react2.default.propTypes.object,
    alumniOf: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Photograph - A photograph.. Generated automatically by the reactGenerator. */


var Photograph = function (_Component) {
    _inherits(Photograph, _Component);

    function Photograph() {
        _classCallCheck(this, Photograph);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Photograph).apply(this, arguments));
    }

    _createClass(Photograph, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Photograph-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Photograph-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Photograph-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Photograph-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Photograph-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Photograph-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Photograph-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Photograph-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Photograph-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Photograph-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Photograph-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Photograph-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Photograph-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Photograph-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Photograph-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Photograph-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Photograph-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Photograph-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Photograph-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Photograph-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Photograph-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Photograph-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Photograph-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Photograph-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Photograph-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Photograph-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Photograph-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Photograph-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Photograph-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Photograph-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Photograph' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return Photograph;
}(_react.Component);

exports.default = Photograph;
;

Photograph.defaultProps = {};

Photograph.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _medicalcode = require('./medicalcode.js');

var _medicalcode2 = _interopRequireDefault(_medicalcode);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _medicalguideline = require('./medicalguideline.js');

var _medicalguideline2 = _interopRequireDefault(_medicalguideline);

var _medicinesystem = require('./medicinesystem.js');

var _medicinesystem2 = _interopRequireDefault(_medicinesystem);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _medicalstudy = require('./medicalstudy.js');

var _medicalstudy2 = _interopRequireDefault(_medicalstudy);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _medicalspecialty = require('./medicalspecialty.js');

var _medicalspecialty2 = _interopRequireDefault(_medicalspecialty);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* PhysicalActivityCategory - Categories of physical activity, organized by physiologic classification.. Generated automatically by the reactGenerator. */


var PhysicalActivityCategory = function (_Component) {
    _inherits(PhysicalActivityCategory, _Component);

    function PhysicalActivityCategory() {
        _classCallCheck(this, PhysicalActivityCategory);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(PhysicalActivityCategory).apply(this, arguments));
    }

    _createClass(PhysicalActivityCategory, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var code = undefined;
            if (this.props.code) {
                if (this.props.code instanceof Array) {
                    code = _react2.default.createElement(
                        'div',
                        { className: 'code__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'code__header', 'data-advice': 'HTML for the *head* of the section' },
                            'codes'
                        ),
                        this.props.code.map(function (item, index) {
                            return _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, _this2.props.code));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'code__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    code = _react2.default.createElement(_medicalcode2.default, _extends({ key: index }, this.props.code));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var relevantSpecialty = undefined;
            if (this.props.relevantSpecialty) {
                if (this.props.relevantSpecialty instanceof Array) {
                    relevantSpecialty = _react2.default.createElement(
                        'div',
                        { className: 'relevantSpecialty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'relevantSpecialty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'relevantSpecialtys'
                        ),
                        this.props.relevantSpecialty.map(function (item, index) {
                            return _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, _this2.props.relevantSpecialty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'relevantSpecialty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    relevantSpecialty = _react2.default.createElement(_medicalspecialty2.default, _extends({ key: index }, this.props.relevantSpecialty));
                }
            }

            var study = undefined;
            if (this.props.study) {
                if (this.props.study instanceof Array) {
                    study = _react2.default.createElement(
                        'div',
                        { className: 'study__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'study__header', 'data-advice': 'HTML for the *head* of the section' },
                            'studys'
                        ),
                        this.props.study.map(function (item, index) {
                            return _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, _this2.props.study));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'study__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    study = _react2.default.createElement(_medicalstudy2.default, _extends({ key: index }, this.props.study));
                }
            }

            var guideline = undefined;
            if (this.props.guideline) {
                if (this.props.guideline instanceof Array) {
                    guideline = _react2.default.createElement(
                        'div',
                        { className: 'guideline__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'guideline__header', 'data-advice': 'HTML for the *head* of the section' },
                            'guidelines'
                        ),
                        this.props.guideline.map(function (item, index) {
                            return _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, _this2.props.guideline));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'guideline__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    guideline = _react2.default.createElement(_medicalguideline2.default, _extends({ key: index }, this.props.guideline));
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var recognizingAuthority = undefined;
            if (this.props.recognizingAuthority) {
                if (this.props.recognizingAuthority instanceof Array) {
                    recognizingAuthority = _react2.default.createElement(
                        'div',
                        { className: 'recognizingAuthority__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recognizingAuthority__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recognizingAuthoritys'
                        ),
                        this.props.recognizingAuthority.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.recognizingAuthority));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recognizingAuthority__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recognizingAuthority = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.recognizingAuthority));
                }
            }

            var medicineSystem = undefined;
            if (this.props.medicineSystem) {
                if (this.props.medicineSystem instanceof Array) {
                    medicineSystem = _react2.default.createElement(
                        'div',
                        { className: 'medicineSystem__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'medicineSystem__header', 'data-advice': 'HTML for the *head* of the section' },
                            'medicineSystems'
                        ),
                        this.props.medicineSystem.map(function (item, index) {
                            return _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, _this2.props.medicineSystem));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'medicineSystem__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    medicineSystem = _react2.default.createElement(_medicinesystem2.default, _extends({ key: index }, this.props.medicineSystem));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'PhysicalActivityCategory-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'PhysicalActivityCategory-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'PhysicalActivityCategory-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'PhysicalActivityCategory-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'PhysicalActivityCategory' },
                code,
                potentialAction,
                relevantSpecialty,
                study,
                guideline,
                supersededBy,
                recognizingAuthority,
                medicineSystem,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return PhysicalActivityCategory;
}(_react.Component);

exports.default = PhysicalActivityCategory;
;

PhysicalActivityCategory.defaultProps = {};

PhysicalActivityCategory.propTypes = {
    code: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    relevantSpecialty: _react2.default.propTypes.object,
    study: _react2.default.propTypes.object,
    guideline: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    recognizingAuthority: _react2.default.propTypes.object,
    medicineSystem: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _map = require('./map.js');

var _map2 = _interopRequireDefault(_map);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _openinghoursspecification = require('./openinghoursspecification.js');

var _openinghoursspecification2 = _interopRequireDefault(_openinghoursspecification);

var _photograph = require('./photograph.js');

var _photograph2 = _interopRequireDefault(_photograph);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _propertyvalue = require('./propertyvalue.js');

var _propertyvalue2 = _interopRequireDefault(_propertyvalue);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _geocoordinates = require('./geocoordinates.js');

var _geocoordinates2 = _interopRequireDefault(_geocoordinates);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Place - Entities that have a somewhat fixed, physical extension.. Generated automatically by the reactGenerator. */


var Place = function (_Component) {
    _inherits(Place, _Component);

    function Place() {
        _classCallCheck(this, Place);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Place).apply(this, arguments));
    }

    _createClass(Place, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var openingHoursSpecification = undefined;
            if (this.props.openingHoursSpecification) {
                if (this.props.openingHoursSpecification instanceof Array) {
                    openingHoursSpecification = _react2.default.createElement(
                        'div',
                        { className: 'openingHoursSpecification__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'openingHoursSpecification__header', 'data-advice': 'HTML for the *head* of the section' },
                            'openingHoursSpecifications'
                        ),
                        this.props.openingHoursSpecification.map(function (item, index) {
                            return _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, _this2.props.openingHoursSpecification));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'openingHoursSpecification__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    openingHoursSpecification = _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, this.props.openingHoursSpecification));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var photo = undefined;
            if (this.props.photo) {
                if (this.props.photo instanceof Array) {
                    photo = _react2.default.createElement(
                        'div',
                        { className: 'photo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'photo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'photos'
                        ),
                        this.props.photo.map(function (item, index) {
                            if (_this2.props['@type'] === 'Photograph') {
                                return _react2.default.createElement(_photograph2.default, _extends({ key: index }, _this2.props.photo));
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.photo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'photo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Photograph') {
                        photo = _react2.default.createElement(_photograph2.default, _extends({ key: index }, this.props.photo));
                    } else if (this.props['@type'] === 'ImageObject') {
                        photo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.photo));
                    }
                }
            }

            var hasMap = undefined;
            if (this.props.hasMap) {
                if (this.props.hasMap instanceof Array) {
                    hasMap = _react2.default.createElement(
                        'div',
                        { className: 'hasMap__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasMap__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasMaps'
                        ),
                        this.props.hasMap.map(function (item, index) {
                            if (_this2.props['@type'] === 'Map') {
                                return _react2.default.createElement(_map2.default, _extends({ key: index }, _this2.props.hasMap));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'hasMap', 'data-advice': 'Put your HTML here. hasMap is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Place-hasMap', href: _this2.props.hasMap, target: '_blank' },
                                        'hasMap'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasMap__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Map') {
                        hasMap = _react2.default.createElement(_map2.default, _extends({ key: index }, this.props.hasMap));
                    } else if (this.props['@type'] === 'URL') {
                        hasMap = _react2.default.createElement(
                            'div',
                            { className: 'hasMap', 'data-advice': 'Put your HTML here. hasMap is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Place-hasMap', href: this.props.hasMap, target: '_blank' },
                                'hasMap'
                            )
                        );
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var containedInPlace = undefined;
            if (this.props.containedInPlace) {
                if (this.props.containedInPlace instanceof Array) {
                    containedInPlace = _react2.default.createElement(
                        'div',
                        { className: 'containedInPlace__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'containedInPlace__header', 'data-advice': 'HTML for the *head* of the section' },
                            'containedInPlaces'
                        ),
                        this.props.containedInPlace.map(function (item, index) {
                            return _react2.default.createElement(Place, _extends({ key: index }, _this2.props.containedInPlace));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'containedInPlace__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    containedInPlace = _react2.default.createElement(Place, _extends({ key: index }, this.props.containedInPlace));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var additionalProperty = undefined;
            if (this.props.additionalProperty) {
                if (this.props.additionalProperty instanceof Array) {
                    additionalProperty = _react2.default.createElement(
                        'div',
                        { className: 'additionalProperty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'additionalProperty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'additionalPropertys'
                        ),
                        this.props.additionalProperty.map(function (item, index) {
                            return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.additionalProperty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'additionalProperty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    additionalProperty = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.additionalProperty));
                }
            }

            var containsPlace = undefined;
            if (this.props.containsPlace) {
                if (this.props.containsPlace instanceof Array) {
                    containsPlace = _react2.default.createElement(
                        'div',
                        { className: 'containsPlace__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'containsPlace__header', 'data-advice': 'HTML for the *head* of the section' },
                            'containsPlaces'
                        ),
                        this.props.containsPlace.map(function (item, index) {
                            return _react2.default.createElement(Place, _extends({ key: index }, _this2.props.containsPlace));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'containsPlace__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    containsPlace = _react2.default.createElement(Place, _extends({ key: index }, this.props.containsPlace));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Place-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Place-image', src: this.props.image })
                        );
                    }
                }
            }

            var address = undefined;
            if (this.props.address) {
                if (this.props.address instanceof Array) {
                    address = _react2.default.createElement(
                        'div',
                        { className: 'address__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'address__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addresss'
                        ),
                        this.props.address.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Place-address' },
                                        'address: ',
                                        _this2.props.address
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.address));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'address__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        address = _react2.default.createElement(
                            'div',
                            { className: 'address', 'data-advice': 'Put your HTML here. address is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Place-address' },
                                'address: ',
                                this.props.address
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        address = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.address));
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Place-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Place-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var logo = undefined;
            if (this.props.logo) {
                if (this.props.logo instanceof Array) {
                    logo = _react2.default.createElement(
                        'div',
                        { className: 'logo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'logo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'logos'
                        ),
                        this.props.logo.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Place-logo', href: _this2.props.logo, target: '_blank' },
                                        'logo'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.logo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'logo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        logo = _react2.default.createElement(
                            'div',
                            { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Place-logo', href: this.props.logo, target: '_blank' },
                                'logo'
                            )
                        );
                    } else if (this.props['@type'] === 'ImageObject') {
                        logo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.logo));
                    }
                }
            }

            var geo = undefined;
            if (this.props.geo) {
                if (this.props.geo instanceof Array) {
                    geo = _react2.default.createElement(
                        'div',
                        { className: 'geo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'geo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'geos'
                        ),
                        this.props.geo.map(function (item, index) {
                            if (_this2.props['@type'] === 'GeoCoordinates') {
                                return _react2.default.createElement(_geocoordinates2.default, _extends({ key: index }, _this2.props.geo));
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.geo));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'geo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'GeoCoordinates') {
                        geo = _react2.default.createElement(_geocoordinates2.default, _extends({ key: index }, this.props.geo));
                    } else if (this.props['@type'] === 'GeoShape') {
                        geo = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.geo));
                    }
                }
            }

            var event = undefined;
            if (this.props.event) {
                if (this.props.event instanceof Array) {
                    event = _react2.default.createElement(
                        'div',
                        { className: 'event__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'event__header', 'data-advice': 'HTML for the *head* of the section' },
                            'events'
                        ),
                        this.props.event.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.event));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'event__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    event = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.event));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Place' },
                openingHoursSpecification,
                potentialAction,
                photo,
                hasMap,
                review,
                containedInPlace,
                aggregateRating,
                additionalProperty,
                containsPlace,
                image,
                address,
                mainEntityOfPage,
                logo,
                geo,
                event
            );
        }
    }]);

    return Place;
}(_react.Component);

exports.default = Place;
;

Place.defaultProps = {};

Place.propTypes = {
    openingHoursSpecification: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    photo: _react2.default.propTypes.object,
    hasMap: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    containedInPlace: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    additionalProperty: _react2.default.propTypes.object,
    containsPlace: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    address: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    logo: _react2.default.propTypes.object,
    geo: _react2.default.propTypes.object,
    event: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _openinghoursspecification = require('./openinghoursspecification.js');

var _openinghoursspecification2 = _interopRequireDefault(_openinghoursspecification);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _country = require('./country.js');

var _country2 = _interopRequireDefault(_country);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _contactpointoption = require('./contactpointoption.js');

var _contactpointoption2 = _interopRequireDefault(_contactpointoption);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* PostalAddress - The mailing address.. Generated automatically by the reactGenerator. */


var PostalAddress = function (_Component) {
    _inherits(PostalAddress, _Component);

    function PostalAddress() {
        _classCallCheck(this, PostalAddress);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(PostalAddress).apply(this, arguments));
    }

    _createClass(PostalAddress, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var productSupported = undefined;
            if (this.props.productSupported) {
                if (this.props.productSupported instanceof Array) {
                    productSupported = _react2.default.createElement(
                        'div',
                        { className: 'productSupported__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'productSupported__header', 'data-advice': 'HTML for the *head* of the section' },
                            'productSupporteds'
                        ),
                        this.props.productSupported.map(function (item, index) {
                            if (_this2.props['@type'] === 'Product') {
                                return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.productSupported));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'productSupported', 'data-advice': 'Put your HTML here. productSupported is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PostalAddress-productSupported' },
                                        'productSupported: ',
                                        _this2.props.productSupported
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'productSupported__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Product') {
                        productSupported = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.productSupported));
                    } else if (this.props['@type'] === 'Text') {
                        productSupported = _react2.default.createElement(
                            'div',
                            { className: 'productSupported', 'data-advice': 'Put your HTML here. productSupported is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PostalAddress-productSupported' },
                                'productSupported: ',
                                this.props.productSupported
                            )
                        );
                    }
                }
            }

            var contactOption = undefined;
            if (this.props.contactOption) {
                if (this.props.contactOption instanceof Array) {
                    contactOption = _react2.default.createElement(
                        'div',
                        { className: 'contactOption__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contactOption__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contactOptions'
                        ),
                        this.props.contactOption.map(function (item, index) {
                            return _react2.default.createElement(_contactpointoption2.default, _extends({ key: index }, _this2.props.contactOption));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contactOption__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contactOption = _react2.default.createElement(_contactpointoption2.default, _extends({ key: index }, this.props.contactOption));
                }
            }

            var addressCountry = undefined;
            if (this.props.addressCountry) {
                if (this.props.addressCountry instanceof Array) {
                    addressCountry = _react2.default.createElement(
                        'div',
                        { className: 'addressCountry__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'addressCountry__header', 'data-advice': 'HTML for the *head* of the section' },
                            'addressCountrys'
                        ),
                        this.props.addressCountry.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'addressCountry', 'data-advice': 'Put your HTML here. addressCountry is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PostalAddress-addressCountry' },
                                        'addressCountry: ',
                                        _this2.props.addressCountry
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Country') {
                                return _react2.default.createElement(_country2.default, _extends({ key: index }, _this2.props.addressCountry));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'addressCountry__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        addressCountry = _react2.default.createElement(
                            'div',
                            { className: 'addressCountry', 'data-advice': 'Put your HTML here. addressCountry is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PostalAddress-addressCountry' },
                                'addressCountry: ',
                                this.props.addressCountry
                            )
                        );
                    } else if (this.props['@type'] === 'Country') {
                        addressCountry = _react2.default.createElement(_country2.default, _extends({ key: index }, this.props.addressCountry));
                    }
                }
            }

            var hoursAvailable = undefined;
            if (this.props.hoursAvailable) {
                if (this.props.hoursAvailable instanceof Array) {
                    hoursAvailable = _react2.default.createElement(
                        'div',
                        { className: 'hoursAvailable__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hoursAvailable__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hoursAvailables'
                        ),
                        this.props.hoursAvailable.map(function (item, index) {
                            return _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, _this2.props.hoursAvailable));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hoursAvailable__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hoursAvailable = _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, this.props.hoursAvailable));
                }
            }

            var areaServed = undefined;
            if (this.props.areaServed) {
                if (this.props.areaServed instanceof Array) {
                    areaServed = _react2.default.createElement(
                        'div',
                        { className: 'areaServed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'areaServed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'areaServeds'
                        ),
                        this.props.areaServed.map(function (item, index) {
                            if (_this2.props['@type'] === 'AdministrativeArea') {
                                return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PostalAddress-areaServed' },
                                        'areaServed: ',
                                        _this2.props.areaServed
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.areaServed));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'areaServed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'AdministrativeArea') {
                        areaServed = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Place') {
                        areaServed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Text') {
                        areaServed = _react2.default.createElement(
                            'div',
                            { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PostalAddress-areaServed' },
                                'areaServed: ',
                                this.props.areaServed
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        areaServed = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.areaServed));
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'PostalAddress-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'PostalAddress-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'PostalAddress-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'PostalAddress-image', src: this.props.image })
                        );
                    }
                }
            }

            var availableLanguage = undefined;
            if (this.props.availableLanguage) {
                if (this.props.availableLanguage instanceof Array) {
                    availableLanguage = _react2.default.createElement(
                        'div',
                        { className: 'availableLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableLanguages'
                        ),
                        this.props.availableLanguage.map(function (item, index) {
                            return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.availableLanguage));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.availableLanguage));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'PostalAddress' },
                potentialAction,
                productSupported,
                contactOption,
                addressCountry,
                hoursAvailable,
                areaServed,
                mainEntityOfPage,
                image,
                availableLanguage
            );
        }
    }]);

    return PostalAddress;
}(_react.Component);

exports.default = PostalAddress;
;

PostalAddress.defaultProps = {};

PostalAddress.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    productSupported: _react2.default.propTypes.object,
    contactOption: _react2.default.propTypes.object,
    addressCountry: _react2.default.propTypes.object,
    hoursAvailable: _react2.default.propTypes.object,
    areaServed: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    availableLanguage: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* PriceSpecification - A structured value representing a monetary amount. Typically, only the subclasses of this type are used for markup.. Generated automatically by the reactGenerator. */


var PriceSpecification = function (_Component) {
    _inherits(PriceSpecification, _Component);

    function PriceSpecification() {
        _classCallCheck(this, PriceSpecification);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(PriceSpecification).apply(this, arguments));
    }

    _createClass(PriceSpecification, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var price = undefined;
            if (this.props.price) {
                if (this.props.price instanceof Array) {
                    price = _react2.default.createElement(
                        'div',
                        { className: 'price__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'price__header', 'data-advice': 'HTML for the *head* of the section' },
                            'prices'
                        ),
                        this.props.price.map(function (item, index) {
                            if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'price', 'data-advice': 'Put your HTML here. price is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PriceSpecification-price' },
                                        'price: ',
                                        _this2.props.price
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'price', 'data-advice': 'Put your HTML here. price is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PriceSpecification-price' },
                                        'price: ',
                                        _this2.props.price
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'price__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Number') {
                        price = _react2.default.createElement(
                            'div',
                            { className: 'price', 'data-advice': 'Put your HTML here. price is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PriceSpecification-price' },
                                'price: ',
                                this.props.price
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        price = _react2.default.createElement(
                            'div',
                            { className: 'price', 'data-advice': 'Put your HTML here. price is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PriceSpecification-price' },
                                'price: ',
                                this.props.price
                            )
                        );
                    }
                }
            }

            var eligibleTransactionVolume = undefined;
            if (this.props.eligibleTransactionVolume) {
                if (this.props.eligibleTransactionVolume instanceof Array) {
                    eligibleTransactionVolume = _react2.default.createElement(
                        'div',
                        { className: 'eligibleTransactionVolume__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleTransactionVolume__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleTransactionVolumes'
                        ),
                        this.props.eligibleTransactionVolume.map(function (item, index) {
                            return _react2.default.createElement(PriceSpecification, _extends({ key: index }, _this2.props.eligibleTransactionVolume));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleTransactionVolume__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleTransactionVolume = _react2.default.createElement(PriceSpecification, _extends({ key: index }, this.props.eligibleTransactionVolume));
                }
            }

            var eligibleQuantity = undefined;
            if (this.props.eligibleQuantity) {
                if (this.props.eligibleQuantity instanceof Array) {
                    eligibleQuantity = _react2.default.createElement(
                        'div',
                        { className: 'eligibleQuantity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eligibleQuantity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eligibleQuantitys'
                        ),
                        this.props.eligibleQuantity.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.eligibleQuantity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eligibleQuantity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eligibleQuantity = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.eligibleQuantity));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'PriceSpecification-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'PriceSpecification-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'PriceSpecification-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'PriceSpecification-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'PriceSpecification' },
                potentialAction,
                price,
                eligibleTransactionVolume,
                eligibleQuantity,
                mainEntityOfPage,
                image
            );
        }
    }]);

    return PriceSpecification;
}(_react.Component);

exports.default = PriceSpecification;
;

PriceSpecification.defaultProps = {};

PriceSpecification.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    price: _react2.default.propTypes.object,
    eligibleTransactionVolume: _react2.default.propTypes.object,
    eligibleQuantity: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _distance = require('./distance.js');

var _distance2 = _interopRequireDefault(_distance);

var _productmodel = require('./productmodel.js');

var _productmodel2 = _interopRequireDefault(_productmodel);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _offeritemcondition = require('./offeritemcondition.js');

var _offeritemcondition2 = _interopRequireDefault(_offeritemcondition);

var _brand = require('./brand.js');

var _brand2 = _interopRequireDefault(_brand);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _propertyvalue = require('./propertyvalue.js');

var _propertyvalue2 = _interopRequireDefault(_propertyvalue);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _physicalactivitycategory = require('./physicalactivitycategory.js');

var _physicalactivitycategory2 = _interopRequireDefault(_physicalactivitycategory);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Product - Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.. Generated automatically by the reactGenerator. */


var Product = function (_Component) {
    _inherits(Product, _Component);

    function Product() {
        _classCallCheck(this, Product);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Product).apply(this, arguments));
    }

    _createClass(Product, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var isConsumableFor = undefined;
            if (this.props.isConsumableFor) {
                if (this.props.isConsumableFor instanceof Array) {
                    isConsumableFor = _react2.default.createElement(
                        'div',
                        { className: 'isConsumableFor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isConsumableFor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isConsumableFors'
                        ),
                        this.props.isConsumableFor.map(function (item, index) {
                            return _react2.default.createElement(Product, _extends({ key: index }, _this2.props.isConsumableFor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isConsumableFor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isConsumableFor = _react2.default.createElement(Product, _extends({ key: index }, this.props.isConsumableFor));
                }
            }

            var weight = undefined;
            if (this.props.weight) {
                if (this.props.weight instanceof Array) {
                    weight = _react2.default.createElement(
                        'div',
                        { className: 'weight__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'weight__header', 'data-advice': 'HTML for the *head* of the section' },
                            'weights'
                        ),
                        this.props.weight.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.weight));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'weight__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    weight = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.weight));
                }
            }

            var isAccessoryOrSparePartFor = undefined;
            if (this.props.isAccessoryOrSparePartFor) {
                if (this.props.isAccessoryOrSparePartFor instanceof Array) {
                    isAccessoryOrSparePartFor = _react2.default.createElement(
                        'div',
                        { className: 'isAccessoryOrSparePartFor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isAccessoryOrSparePartFor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isAccessoryOrSparePartFors'
                        ),
                        this.props.isAccessoryOrSparePartFor.map(function (item, index) {
                            return _react2.default.createElement(Product, _extends({ key: index }, _this2.props.isAccessoryOrSparePartFor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isAccessoryOrSparePartFor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isAccessoryOrSparePartFor = _react2.default.createElement(Product, _extends({ key: index }, this.props.isAccessoryOrSparePartFor));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Product-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Product-image', src: this.props.image })
                        );
                    }
                }
            }

            var height = undefined;
            if (this.props.height) {
                if (this.props.height instanceof Array) {
                    height = _react2.default.createElement(
                        'div',
                        { className: 'height__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'height__header', 'data-advice': 'HTML for the *head* of the section' },
                            'heights'
                        ),
                        this.props.height.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.height));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.height));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'height__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        height = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.height));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        height = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.height));
                    }
                }
            }

            var isRelatedTo = undefined;
            if (this.props.isRelatedTo) {
                if (this.props.isRelatedTo instanceof Array) {
                    isRelatedTo = _react2.default.createElement(
                        'div',
                        { className: 'isRelatedTo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isRelatedTo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isRelatedTos'
                        ),
                        this.props.isRelatedTo.map(function (item, index) {
                            return _react2.default.createElement(Product, _extends({ key: index }, _this2.props.isRelatedTo));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isRelatedTo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isRelatedTo = _react2.default.createElement(Product, _extends({ key: index }, this.props.isRelatedTo));
                }
            }

            var logo = undefined;
            if (this.props.logo) {
                if (this.props.logo instanceof Array) {
                    logo = _react2.default.createElement(
                        'div',
                        { className: 'logo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'logo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'logos'
                        ),
                        this.props.logo.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.logo));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Product-logo', href: _this2.props.logo, target: '_blank' },
                                        'logo'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'logo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        logo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.logo));
                    } else if (this.props['@type'] === 'URL') {
                        logo = _react2.default.createElement(
                            'div',
                            { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Product-logo', href: this.props.logo, target: '_blank' },
                                'logo'
                            )
                        );
                    }
                }
            }

            var category = undefined;
            if (this.props.category) {
                if (this.props.category instanceof Array) {
                    category = _react2.default.createElement(
                        'div',
                        { className: 'category__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'category__header', 'data-advice': 'HTML for the *head* of the section' },
                            'categorys'
                        ),
                        this.props.category.map(function (item, index) {
                            if (_this2.props['@type'] === 'Thing') {
                                return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'PhysicalActivityCategory') {
                                return _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Product-category' },
                                        'category: ',
                                        _this2.props.category
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'category__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Thing') {
                        category = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'PhysicalActivityCategory') {
                        category = _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'Text') {
                        category = _react2.default.createElement(
                            'div',
                            { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Product-category' },
                                'category: ',
                                this.props.category
                            )
                        );
                    }
                }
            }

            var isSimilarTo = undefined;
            if (this.props.isSimilarTo) {
                if (this.props.isSimilarTo instanceof Array) {
                    isSimilarTo = _react2.default.createElement(
                        'div',
                        { className: 'isSimilarTo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isSimilarTo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isSimilarTos'
                        ),
                        this.props.isSimilarTo.map(function (item, index) {
                            return _react2.default.createElement(Product, _extends({ key: index }, _this2.props.isSimilarTo));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isSimilarTo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isSimilarTo = _react2.default.createElement(Product, _extends({ key: index }, this.props.isSimilarTo));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var width = undefined;
            if (this.props.width) {
                if (this.props.width instanceof Array) {
                    width = _react2.default.createElement(
                        'div',
                        { className: 'width__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'width__header', 'data-advice': 'HTML for the *head* of the section' },
                            'widths'
                        ),
                        this.props.width.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.width));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.width));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'width__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        width = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.width));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        width = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.width));
                    }
                }
            }

            var additionalProperty = undefined;
            if (this.props.additionalProperty) {
                if (this.props.additionalProperty instanceof Array) {
                    additionalProperty = _react2.default.createElement(
                        'div',
                        { className: 'additionalProperty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'additionalProperty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'additionalPropertys'
                        ),
                        this.props.additionalProperty.map(function (item, index) {
                            return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.additionalProperty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'additionalProperty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    additionalProperty = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.additionalProperty));
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Product-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Product-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var brand = undefined;
            if (this.props.brand) {
                if (this.props.brand instanceof Array) {
                    brand = _react2.default.createElement(
                        'div',
                        { className: 'brand__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'brand__header', 'data-advice': 'HTML for the *head* of the section' },
                            'brands'
                        ),
                        this.props.brand.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.brand));
                            } else if (_this2.props['@type'] === 'Brand') {
                                return _react2.default.createElement(_brand2.default, _extends({ key: index }, _this2.props.brand));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'brand__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        brand = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.brand));
                    } else if (this.props['@type'] === 'Brand') {
                        brand = _react2.default.createElement(_brand2.default, _extends({ key: index }, this.props.brand));
                    }
                }
            }

            var itemCondition = undefined;
            if (this.props.itemCondition) {
                if (this.props.itemCondition instanceof Array) {
                    itemCondition = _react2.default.createElement(
                        'div',
                        { className: 'itemCondition__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemCondition__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemConditions'
                        ),
                        this.props.itemCondition.map(function (item, index) {
                            return _react2.default.createElement(_offeritemcondition2.default, _extends({ key: index }, _this2.props.itemCondition));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemCondition__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    itemCondition = _react2.default.createElement(_offeritemcondition2.default, _extends({ key: index }, this.props.itemCondition));
                }
            }

            var manufacturer = undefined;
            if (this.props.manufacturer) {
                if (this.props.manufacturer instanceof Array) {
                    manufacturer = _react2.default.createElement(
                        'div',
                        { className: 'manufacturer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'manufacturer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'manufacturers'
                        ),
                        this.props.manufacturer.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.manufacturer));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'manufacturer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    manufacturer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.manufacturer));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var depth = undefined;
            if (this.props.depth) {
                if (this.props.depth instanceof Array) {
                    depth = _react2.default.createElement(
                        'div',
                        { className: 'depth__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'depth__header', 'data-advice': 'HTML for the *head* of the section' },
                            'depths'
                        ),
                        this.props.depth.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.depth));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.depth));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'depth__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        depth = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.depth));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        depth = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.depth));
                    }
                }
            }

            var model = undefined;
            if (this.props.model) {
                if (this.props.model instanceof Array) {
                    model = _react2.default.createElement(
                        'div',
                        { className: 'model__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'model__header', 'data-advice': 'HTML for the *head* of the section' },
                            'models'
                        ),
                        this.props.model.map(function (item, index) {
                            if (_this2.props['@type'] === 'ProductModel') {
                                return _react2.default.createElement(_productmodel2.default, _extends({ key: index }, _this2.props.model));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'model', 'data-advice': 'Put your HTML here. model is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Product-model' },
                                        'model: ',
                                        _this2.props.model
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'model__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ProductModel') {
                        model = _react2.default.createElement(_productmodel2.default, _extends({ key: index }, this.props.model));
                    } else if (this.props['@type'] === 'Text') {
                        model = _react2.default.createElement(
                            'div',
                            { className: 'model', 'data-advice': 'Put your HTML here. model is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Product-model' },
                                'model: ',
                                this.props.model
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Product' },
                isConsumableFor,
                weight,
                isAccessoryOrSparePartFor,
                image,
                height,
                isRelatedTo,
                logo,
                category,
                isSimilarTo,
                review,
                audience,
                width,
                additionalProperty,
                offers,
                mainEntityOfPage,
                brand,
                itemCondition,
                manufacturer,
                potentialAction,
                aggregateRating,
                depth,
                model
            );
        }
    }]);

    return Product;
}(_react.Component);

exports.default = Product;
;

Product.defaultProps = {};

Product.propTypes = {
    isConsumableFor: _react2.default.propTypes.object,
    weight: _react2.default.propTypes.object,
    isAccessoryOrSparePartFor: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    height: _react2.default.propTypes.object,
    isRelatedTo: _react2.default.propTypes.object,
    logo: _react2.default.propTypes.object,
    category: _react2.default.propTypes.object,
    isSimilarTo: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    width: _react2.default.propTypes.object,
    additionalProperty: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    brand: _react2.default.propTypes.object,
    itemCondition: _react2.default.propTypes.object,
    manufacturer: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    depth: _react2.default.propTypes.object,
    model: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _distance = require('./distance.js');

var _distance2 = _interopRequireDefault(_distance);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _brand = require('./brand.js');

var _brand2 = _interopRequireDefault(_brand);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _propertyvalue = require('./propertyvalue.js');

var _propertyvalue2 = _interopRequireDefault(_propertyvalue);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _physicalactivitycategory = require('./physicalactivitycategory.js');

var _physicalactivitycategory2 = _interopRequireDefault(_physicalactivitycategory);

var _offeritemcondition = require('./offeritemcondition.js');

var _offeritemcondition2 = _interopRequireDefault(_offeritemcondition);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ProductModel - A datasheet or vendor specification of a product (in the sense of a prototypical description).. Generated automatically by the reactGenerator. */


var ProductModel = function (_Component) {
    _inherits(ProductModel, _Component);

    function ProductModel() {
        _classCallCheck(this, ProductModel);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ProductModel).apply(this, arguments));
    }

    _createClass(ProductModel, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var isConsumableFor = undefined;
            if (this.props.isConsumableFor) {
                if (this.props.isConsumableFor instanceof Array) {
                    isConsumableFor = _react2.default.createElement(
                        'div',
                        { className: 'isConsumableFor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isConsumableFor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isConsumableFors'
                        ),
                        this.props.isConsumableFor.map(function (item, index) {
                            return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.isConsumableFor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isConsumableFor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isConsumableFor = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.isConsumableFor));
                }
            }

            var weight = undefined;
            if (this.props.weight) {
                if (this.props.weight instanceof Array) {
                    weight = _react2.default.createElement(
                        'div',
                        { className: 'weight__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'weight__header', 'data-advice': 'HTML for the *head* of the section' },
                            'weights'
                        ),
                        this.props.weight.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.weight));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'weight__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    weight = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.weight));
                }
            }

            var isAccessoryOrSparePartFor = undefined;
            if (this.props.isAccessoryOrSparePartFor) {
                if (this.props.isAccessoryOrSparePartFor instanceof Array) {
                    isAccessoryOrSparePartFor = _react2.default.createElement(
                        'div',
                        { className: 'isAccessoryOrSparePartFor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isAccessoryOrSparePartFor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isAccessoryOrSparePartFors'
                        ),
                        this.props.isAccessoryOrSparePartFor.map(function (item, index) {
                            return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.isAccessoryOrSparePartFor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isAccessoryOrSparePartFor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isAccessoryOrSparePartFor = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.isAccessoryOrSparePartFor));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ProductModel-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ProductModel-image', src: this.props.image })
                        );
                    }
                }
            }

            var height = undefined;
            if (this.props.height) {
                if (this.props.height instanceof Array) {
                    height = _react2.default.createElement(
                        'div',
                        { className: 'height__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'height__header', 'data-advice': 'HTML for the *head* of the section' },
                            'heights'
                        ),
                        this.props.height.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.height));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.height));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'height__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        height = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.height));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        height = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.height));
                    }
                }
            }

            var isRelatedTo = undefined;
            if (this.props.isRelatedTo) {
                if (this.props.isRelatedTo instanceof Array) {
                    isRelatedTo = _react2.default.createElement(
                        'div',
                        { className: 'isRelatedTo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isRelatedTo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isRelatedTos'
                        ),
                        this.props.isRelatedTo.map(function (item, index) {
                            return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.isRelatedTo));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isRelatedTo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isRelatedTo = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.isRelatedTo));
                }
            }

            var logo = undefined;
            if (this.props.logo) {
                if (this.props.logo instanceof Array) {
                    logo = _react2.default.createElement(
                        'div',
                        { className: 'logo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'logo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'logos'
                        ),
                        this.props.logo.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.logo));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ProductModel-logo', href: _this2.props.logo, target: '_blank' },
                                        'logo'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'logo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        logo = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.logo));
                    } else if (this.props['@type'] === 'URL') {
                        logo = _react2.default.createElement(
                            'div',
                            { className: 'logo', 'data-advice': 'Put your HTML here. logo is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ProductModel-logo', href: this.props.logo, target: '_blank' },
                                'logo'
                            )
                        );
                    }
                }
            }

            var category = undefined;
            if (this.props.category) {
                if (this.props.category instanceof Array) {
                    category = _react2.default.createElement(
                        'div',
                        { className: 'category__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'category__header', 'data-advice': 'HTML for the *head* of the section' },
                            'categorys'
                        ),
                        this.props.category.map(function (item, index) {
                            if (_this2.props['@type'] === 'Thing') {
                                return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'PhysicalActivityCategory') {
                                return _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ProductModel-category' },
                                        'category: ',
                                        _this2.props.category
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'category__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Thing') {
                        category = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'PhysicalActivityCategory') {
                        category = _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'Text') {
                        category = _react2.default.createElement(
                            'div',
                            { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ProductModel-category' },
                                'category: ',
                                this.props.category
                            )
                        );
                    }
                }
            }

            var predecessorOf = undefined;
            if (this.props.predecessorOf) {
                if (this.props.predecessorOf instanceof Array) {
                    predecessorOf = _react2.default.createElement(
                        'div',
                        { className: 'predecessorOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'predecessorOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'predecessorOfs'
                        ),
                        this.props.predecessorOf.map(function (item, index) {
                            return _react2.default.createElement(ProductModel, _extends({ key: index }, _this2.props.predecessorOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'predecessorOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    predecessorOf = _react2.default.createElement(ProductModel, _extends({ key: index }, this.props.predecessorOf));
                }
            }

            var isSimilarTo = undefined;
            if (this.props.isSimilarTo) {
                if (this.props.isSimilarTo instanceof Array) {
                    isSimilarTo = _react2.default.createElement(
                        'div',
                        { className: 'isSimilarTo__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isSimilarTo__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isSimilarTos'
                        ),
                        this.props.isSimilarTo.map(function (item, index) {
                            return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.isSimilarTo));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isSimilarTo__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isSimilarTo = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.isSimilarTo));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var depth = undefined;
            if (this.props.depth) {
                if (this.props.depth instanceof Array) {
                    depth = _react2.default.createElement(
                        'div',
                        { className: 'depth__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'depth__header', 'data-advice': 'HTML for the *head* of the section' },
                            'depths'
                        ),
                        this.props.depth.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.depth));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.depth));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'depth__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        depth = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.depth));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        depth = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.depth));
                    }
                }
            }

            var width = undefined;
            if (this.props.width) {
                if (this.props.width instanceof Array) {
                    width = _react2.default.createElement(
                        'div',
                        { className: 'width__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'width__header', 'data-advice': 'HTML for the *head* of the section' },
                            'widths'
                        ),
                        this.props.width.map(function (item, index) {
                            if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.width));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.width));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'width__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Distance') {
                        width = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.width));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        width = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.width));
                    }
                }
            }

            var additionalProperty = undefined;
            if (this.props.additionalProperty) {
                if (this.props.additionalProperty instanceof Array) {
                    additionalProperty = _react2.default.createElement(
                        'div',
                        { className: 'additionalProperty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'additionalProperty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'additionalPropertys'
                        ),
                        this.props.additionalProperty.map(function (item, index) {
                            return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.additionalProperty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'additionalProperty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    additionalProperty = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.additionalProperty));
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ProductModel-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ProductModel-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var isVariantOf = undefined;
            if (this.props.isVariantOf) {
                if (this.props.isVariantOf instanceof Array) {
                    isVariantOf = _react2.default.createElement(
                        'div',
                        { className: 'isVariantOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isVariantOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isVariantOfs'
                        ),
                        this.props.isVariantOf.map(function (item, index) {
                            return _react2.default.createElement(ProductModel, _extends({ key: index }, _this2.props.isVariantOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isVariantOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isVariantOf = _react2.default.createElement(ProductModel, _extends({ key: index }, this.props.isVariantOf));
                }
            }

            var brand = undefined;
            if (this.props.brand) {
                if (this.props.brand instanceof Array) {
                    brand = _react2.default.createElement(
                        'div',
                        { className: 'brand__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'brand__header', 'data-advice': 'HTML for the *head* of the section' },
                            'brands'
                        ),
                        this.props.brand.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.brand));
                            } else if (_this2.props['@type'] === 'Brand') {
                                return _react2.default.createElement(_brand2.default, _extends({ key: index }, _this2.props.brand));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'brand__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        brand = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.brand));
                    } else if (this.props['@type'] === 'Brand') {
                        brand = _react2.default.createElement(_brand2.default, _extends({ key: index }, this.props.brand));
                    }
                }
            }

            var successorOf = undefined;
            if (this.props.successorOf) {
                if (this.props.successorOf instanceof Array) {
                    successorOf = _react2.default.createElement(
                        'div',
                        { className: 'successorOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'successorOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'successorOfs'
                        ),
                        this.props.successorOf.map(function (item, index) {
                            return _react2.default.createElement(ProductModel, _extends({ key: index }, _this2.props.successorOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'successorOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    successorOf = _react2.default.createElement(ProductModel, _extends({ key: index }, this.props.successorOf));
                }
            }

            var itemCondition = undefined;
            if (this.props.itemCondition) {
                if (this.props.itemCondition instanceof Array) {
                    itemCondition = _react2.default.createElement(
                        'div',
                        { className: 'itemCondition__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemCondition__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemConditions'
                        ),
                        this.props.itemCondition.map(function (item, index) {
                            return _react2.default.createElement(_offeritemcondition2.default, _extends({ key: index }, _this2.props.itemCondition));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemCondition__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    itemCondition = _react2.default.createElement(_offeritemcondition2.default, _extends({ key: index }, this.props.itemCondition));
                }
            }

            var manufacturer = undefined;
            if (this.props.manufacturer) {
                if (this.props.manufacturer instanceof Array) {
                    manufacturer = _react2.default.createElement(
                        'div',
                        { className: 'manufacturer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'manufacturer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'manufacturers'
                        ),
                        this.props.manufacturer.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.manufacturer));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'manufacturer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    manufacturer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.manufacturer));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var model = undefined;
            if (this.props.model) {
                if (this.props.model instanceof Array) {
                    model = _react2.default.createElement(
                        'div',
                        { className: 'model__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'model__header', 'data-advice': 'HTML for the *head* of the section' },
                            'models'
                        ),
                        this.props.model.map(function (item, index) {
                            if (_this2.props['@type'] === 'ProductModel') {
                                return _react2.default.createElement(ProductModel, _extends({ key: index }, _this2.props.model));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'model', 'data-advice': 'Put your HTML here. model is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'ProductModel-model' },
                                        'model: ',
                                        _this2.props.model
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'model__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ProductModel') {
                        model = _react2.default.createElement(ProductModel, _extends({ key: index }, this.props.model));
                    } else if (this.props['@type'] === 'Text') {
                        model = _react2.default.createElement(
                            'div',
                            { className: 'model', 'data-advice': 'Put your HTML here. model is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'ProductModel-model' },
                                'model: ',
                                this.props.model
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ProductModel' },
                isConsumableFor,
                weight,
                isAccessoryOrSparePartFor,
                image,
                height,
                isRelatedTo,
                logo,
                category,
                predecessorOf,
                isSimilarTo,
                review,
                depth,
                width,
                additionalProperty,
                offers,
                mainEntityOfPage,
                isVariantOf,
                brand,
                successorOf,
                itemCondition,
                manufacturer,
                potentialAction,
                aggregateRating,
                audience,
                model
            );
        }
    }]);

    return ProductModel;
}(_react.Component);

exports.default = ProductModel;
;

ProductModel.defaultProps = {};

ProductModel.propTypes = {
    isConsumableFor: _react2.default.propTypes.object,
    weight: _react2.default.propTypes.object,
    isAccessoryOrSparePartFor: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    height: _react2.default.propTypes.object,
    isRelatedTo: _react2.default.propTypes.object,
    logo: _react2.default.propTypes.object,
    category: _react2.default.propTypes.object,
    predecessorOf: _react2.default.propTypes.object,
    isSimilarTo: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    depth: _react2.default.propTypes.object,
    width: _react2.default.propTypes.object,
    additionalProperty: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    isVariantOf: _react2.default.propTypes.object,
    brand: _react2.default.propTypes.object,
    successorOf: _react2.default.propTypes.object,
    itemCondition: _react2.default.propTypes.object,
    manufacturer: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    model: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ProgramMembership - Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.. Generated automatically by the reactGenerator. */


var ProgramMembership = function (_Component) {
    _inherits(ProgramMembership, _Component);

    function ProgramMembership() {
        _classCallCheck(this, ProgramMembership);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ProgramMembership).apply(this, arguments));
    }

    _createClass(ProgramMembership, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var hostingOrganization = undefined;
            if (this.props.hostingOrganization) {
                if (this.props.hostingOrganization instanceof Array) {
                    hostingOrganization = _react2.default.createElement(
                        'div',
                        { className: 'hostingOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hostingOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hostingOrganizations'
                        ),
                        this.props.hostingOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.hostingOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hostingOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hostingOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.hostingOrganization));
                }
            }

            var member = undefined;
            if (this.props.member) {
                if (this.props.member instanceof Array) {
                    member = _react2.default.createElement(
                        'div',
                        { className: 'member__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'member__header', 'data-advice': 'HTML for the *head* of the section' },
                            'members'
                        ),
                        this.props.member.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.member));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.member));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'member__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        member = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.member));
                    } else if (this.props['@type'] === 'Organization') {
                        member = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.member));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ProgramMembership-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ProgramMembership-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ProgramMembership-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ProgramMembership-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ProgramMembership' },
                hostingOrganization,
                member,
                image,
                potentialAction,
                mainEntityOfPage
            );
        }
    }]);

    return ProgramMembership;
}(_react.Component);

exports.default = ProgramMembership;
;

ProgramMembership.defaultProps = {};

ProgramMembership.propTypes = {
    hostingOrganization: _react2.default.propTypes.object,
    member: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Property - A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.. Generated automatically by the reactGenerator. */


var Property = function (_Component) {
    _inherits(Property, _Component);

    function Property() {
        _classCallCheck(this, Property);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Property).apply(this, arguments));
    }

    _createClass(Property, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var inverseOf = undefined;
            if (this.props.inverseOf) {
                if (this.props.inverseOf instanceof Array) {
                    inverseOf = _react2.default.createElement(
                        'div',
                        { className: 'inverseOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inverseOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inverseOfs'
                        ),
                        this.props.inverseOf.map(function (item, index) {
                            return _react2.default.createElement(Property, _extends({ key: index }, _this2.props.inverseOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inverseOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    inverseOf = _react2.default.createElement(Property, _extends({ key: index }, this.props.inverseOf));
                }
            }

            var rangeIncludes = undefined;
            if (this.props.rangeIncludes) {
                if (this.props.rangeIncludes instanceof Array) {
                    rangeIncludes = _react2.default.createElement(
                        'div',
                        { className: 'rangeIncludes__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'rangeIncludes__header', 'data-advice': 'HTML for the *head* of the section' },
                            'rangeIncludess'
                        ),
                        this.props.rangeIncludes.map(function (item, index) {
                            return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.rangeIncludes));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'rangeIncludes__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    rangeIncludes = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.rangeIncludes));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Property-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Property-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(Property, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(Property, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Property-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Property-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var domainIncludes = undefined;
            if (this.props.domainIncludes) {
                if (this.props.domainIncludes instanceof Array) {
                    domainIncludes = _react2.default.createElement(
                        'div',
                        { className: 'domainIncludes__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'domainIncludes__header', 'data-advice': 'HTML for the *head* of the section' },
                            'domainIncludess'
                        ),
                        this.props.domainIncludes.map(function (item, index) {
                            return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.domainIncludes));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'domainIncludes__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    domainIncludes = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.domainIncludes));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Property' },
                potentialAction,
                inverseOf,
                rangeIncludes,
                image,
                supersededBy,
                mainEntityOfPage,
                domainIncludes
            );
        }
    }]);

    return Property;
}(_react.Component);

exports.default = Property;
;

Property.defaultProps = {};

Property.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    inverseOf: _react2.default.propTypes.object,
    rangeIncludes: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    domainIncludes: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _qualitativevalue = require('./qualitativevalue.js');

var _qualitativevalue2 = _interopRequireDefault(_qualitativevalue);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _structuredvalue = require('./structuredvalue.js');

var _structuredvalue2 = _interopRequireDefault(_structuredvalue);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* PropertyValue - A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.. Generated automatically by the reactGenerator. */


var PropertyValue = function (_Component) {
    _inherits(PropertyValue, _Component);

    function PropertyValue() {
        _classCallCheck(this, PropertyValue);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(PropertyValue).apply(this, arguments));
    }

    _createClass(PropertyValue, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var valueReference = undefined;
            if (this.props.valueReference) {
                if (this.props.valueReference instanceof Array) {
                    valueReference = _react2.default.createElement(
                        'div',
                        { className: 'valueReference__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'valueReference__header', 'data-advice': 'HTML for the *head* of the section' },
                            'valueReferences'
                        ),
                        this.props.valueReference.map(function (item, index) {
                            if (_this2.props['@type'] === 'QualitativeValue') {
                                return _react2.default.createElement(_qualitativevalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'StructuredValue') {
                                return _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'PropertyValue') {
                                return _react2.default.createElement(PropertyValue, _extends({ key: index }, _this2.props.valueReference));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'valueReference__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'QualitativeValue') {
                        valueReference = _react2.default.createElement(_qualitativevalue2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'Enumeration') {
                        valueReference = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'StructuredValue') {
                        valueReference = _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        valueReference = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'PropertyValue') {
                        valueReference = _react2.default.createElement(PropertyValue, _extends({ key: index }, this.props.valueReference));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'PropertyValue-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'PropertyValue-image', src: this.props.image })
                        );
                    }
                }
            }

            var value = undefined;
            if (this.props.value) {
                if (this.props.value instanceof Array) {
                    value = _react2.default.createElement(
                        'div',
                        { className: 'value__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'value__header', 'data-advice': 'HTML for the *head* of the section' },
                            'values'
                        ),
                        this.props.value.map(function (item, index) {
                            if (_this2.props['@type'] === 'StructuredValue') {
                                return _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, _this2.props.value));
                            } else if (_this2.props['@type'] === 'Boolean') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'value', 'data-advice': 'Put your HTML here. value is a Boolean.' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'PropertyValue-value' },
                                        'value: ',
                                        _this2.props.value
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'value', 'data-advice': 'Put your HTML here. value is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PropertyValue-value' },
                                        'value: ',
                                        _this2.props.value
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'value', 'data-advice': 'Put your HTML here. value is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PropertyValue-value' },
                                        'value: ',
                                        _this2.props.value
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'value__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'StructuredValue') {
                        value = _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, this.props.value));
                    } else if (this.props['@type'] === 'Boolean') {
                        value = _react2.default.createElement(
                            'div',
                            { className: 'value', 'data-advice': 'Put your HTML here. value is a Boolean.' },
                            _react2.default.createElement(
                                'div',
                                { className: 'PropertyValue-value' },
                                'value: ',
                                this.props.value
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        value = _react2.default.createElement(
                            'div',
                            { className: 'value', 'data-advice': 'Put your HTML here. value is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PropertyValue-value' },
                                'value: ',
                                this.props.value
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        value = _react2.default.createElement(
                            'div',
                            { className: 'value', 'data-advice': 'Put your HTML here. value is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PropertyValue-value' },
                                'value: ',
                                this.props.value
                            )
                        );
                    }
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'PropertyValue-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'PropertyValue-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var unitCode = undefined;
            if (this.props.unitCode) {
                if (this.props.unitCode instanceof Array) {
                    unitCode = _react2.default.createElement(
                        'div',
                        { className: 'unitCode__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'unitCode__header', 'data-advice': 'HTML for the *head* of the section' },
                            'unitCodes'
                        ),
                        this.props.unitCode.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PropertyValue-unitCode' },
                                        'unitCode: ',
                                        _this2.props.unitCode
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'PropertyValue-unitCode', href: _this2.props.unitCode, target: '_blank' },
                                        'unitCode'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'unitCode__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        unitCode = _react2.default.createElement(
                            'div',
                            { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PropertyValue-unitCode' },
                                'unitCode: ',
                                this.props.unitCode
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        unitCode = _react2.default.createElement(
                            'div',
                            { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'PropertyValue-unitCode', href: this.props.unitCode, target: '_blank' },
                                'unitCode'
                            )
                        );
                    }
                }
            }

            var propertyID = undefined;
            if (this.props.propertyID) {
                if (this.props.propertyID instanceof Array) {
                    propertyID = _react2.default.createElement(
                        'div',
                        { className: 'propertyID__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'propertyID__header', 'data-advice': 'HTML for the *head* of the section' },
                            'propertyIDs'
                        ),
                        this.props.propertyID.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'propertyID', 'data-advice': 'Put your HTML here. propertyID is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PropertyValue-propertyID' },
                                        'propertyID: ',
                                        _this2.props.propertyID
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'propertyID', 'data-advice': 'Put your HTML here. propertyID is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'PropertyValue-propertyID', href: _this2.props.propertyID, target: '_blank' },
                                        'propertyID'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'propertyID__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        propertyID = _react2.default.createElement(
                            'div',
                            { className: 'propertyID', 'data-advice': 'Put your HTML here. propertyID is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PropertyValue-propertyID' },
                                'propertyID: ',
                                this.props.propertyID
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        propertyID = _react2.default.createElement(
                            'div',
                            { className: 'propertyID', 'data-advice': 'Put your HTML here. propertyID is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'PropertyValue-propertyID', href: this.props.propertyID, target: '_blank' },
                                'propertyID'
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'PropertyValue' },
                potentialAction,
                valueReference,
                image,
                value,
                mainEntityOfPage,
                unitCode,
                propertyID
            );
        }
    }]);

    return PropertyValue;
}(_react.Component);

exports.default = PropertyValue;
;

PropertyValue.defaultProps = {};

PropertyValue.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    valueReference: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    value: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    unitCode: _react2.default.propTypes.object,
    propertyID: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _eventstatustype = require('./eventstatustype.js');

var _eventstatustype2 = _interopRequireDefault(_eventstatustype);

var _broadcastservice = require('./broadcastservice.js');

var _broadcastservice2 = _interopRequireDefault(_broadcastservice);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* PublicationEvent - A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.. Generated automatically by the reactGenerator. */


var PublicationEvent = function (_Component) {
    _inherits(PublicationEvent, _Component);

    function PublicationEvent() {
        _classCallCheck(this, PublicationEvent);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(PublicationEvent).apply(this, arguments));
    }

    _createClass(PublicationEvent, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PublicationEvent-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PublicationEvent-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var attendee = undefined;
            if (this.props.attendee) {
                if (this.props.attendee instanceof Array) {
                    attendee = _react2.default.createElement(
                        'div',
                        { className: 'attendee__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'attendee__header', 'data-advice': 'HTML for the *head* of the section' },
                            'attendees'
                        ),
                        this.props.attendee.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.attendee));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.attendee));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'attendee__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        attendee = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.attendee));
                    } else if (this.props['@type'] === 'Organization') {
                        attendee = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.attendee));
                    }
                }
            }

            var performer = undefined;
            if (this.props.performer) {
                if (this.props.performer instanceof Array) {
                    performer = _react2.default.createElement(
                        'div',
                        { className: 'performer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'performer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'performers'
                        ),
                        this.props.performer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.performer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.performer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'performer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        performer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.performer));
                    } else if (this.props['@type'] === 'Organization') {
                        performer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.performer));
                    }
                }
            }

            var workPerformed = undefined;
            if (this.props.workPerformed) {
                if (this.props.workPerformed instanceof Array) {
                    workPerformed = _react2.default.createElement(
                        'div',
                        { className: 'workPerformed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workPerformed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workPerformeds'
                        ),
                        this.props.workPerformed.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workPerformed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workPerformed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workPerformed = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workPerformed));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'PublicationEvent-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'PublicationEvent-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var superEvent = undefined;
            if (this.props.superEvent) {
                if (this.props.superEvent instanceof Array) {
                    superEvent = _react2.default.createElement(
                        'div',
                        { className: 'superEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'superEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'superEvents'
                        ),
                        this.props.superEvent.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.superEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'superEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    superEvent = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.superEvent));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var recordedIn = undefined;
            if (this.props.recordedIn) {
                if (this.props.recordedIn instanceof Array) {
                    recordedIn = _react2.default.createElement(
                        'div',
                        { className: 'recordedIn__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedIn__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedIns'
                        ),
                        this.props.recordedIn.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.recordedIn));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedIn__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedIn = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.recordedIn));
                }
            }

            var workFeatured = undefined;
            if (this.props.workFeatured) {
                if (this.props.workFeatured instanceof Array) {
                    workFeatured = _react2.default.createElement(
                        'div',
                        { className: 'workFeatured__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workFeatured__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workFeatureds'
                        ),
                        this.props.workFeatured.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workFeatured));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workFeatured__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workFeatured = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workFeatured));
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var subEvent = undefined;
            if (this.props.subEvent) {
                if (this.props.subEvent instanceof Array) {
                    subEvent = _react2.default.createElement(
                        'div',
                        { className: 'subEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'subEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'subEvents'
                        ),
                        this.props.subEvent.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.subEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'subEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    subEvent = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.subEvent));
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var eventStatus = undefined;
            if (this.props.eventStatus) {
                if (this.props.eventStatus instanceof Array) {
                    eventStatus = _react2.default.createElement(
                        'div',
                        { className: 'eventStatus__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'eventStatus__header', 'data-advice': 'HTML for the *head* of the section' },
                            'eventStatuss'
                        ),
                        this.props.eventStatus.map(function (item, index) {
                            return _react2.default.createElement(_eventstatustype2.default, _extends({ key: index }, _this2.props.eventStatus));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'eventStatus__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    eventStatus = _react2.default.createElement(_eventstatustype2.default, _extends({ key: index }, this.props.eventStatus));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'PublicationEvent-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'PublicationEvent-image', src: this.props.image })
                        );
                    }
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var publishedOn = undefined;
            if (this.props.publishedOn) {
                if (this.props.publishedOn instanceof Array) {
                    publishedOn = _react2.default.createElement(
                        'div',
                        { className: 'publishedOn__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publishedOn__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishedOns'
                        ),
                        this.props.publishedOn.map(function (item, index) {
                            return _react2.default.createElement(_broadcastservice2.default, _extends({ key: index }, _this2.props.publishedOn));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publishedOn__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publishedOn = _react2.default.createElement(_broadcastservice2.default, _extends({ key: index }, this.props.publishedOn));
                }
            }

            var organizer = undefined;
            if (this.props.organizer) {
                if (this.props.organizer instanceof Array) {
                    organizer = _react2.default.createElement(
                        'div',
                        { className: 'organizer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'organizer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'organizers'
                        ),
                        this.props.organizer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.organizer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.organizer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'organizer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        organizer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.organizer));
                    } else if (this.props['@type'] === 'Organization') {
                        organizer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.organizer));
                    }
                }
            }

            var location = undefined;
            if (this.props.location) {
                if (this.props.location instanceof Array) {
                    location = _react2.default.createElement(
                        'div',
                        { className: 'location__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'location__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locations'
                        ),
                        this.props.location.map(function (item, index) {
                            if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.location));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'PublicationEvent-location' },
                                        'location: ',
                                        _this2.props.location
                                    )
                                );
                            } else if (_this2.props['@type'] === 'PostalAddress') {
                                return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.location));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'location__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Place') {
                        location = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.location));
                    } else if (this.props['@type'] === 'Text') {
                        location = _react2.default.createElement(
                            'div',
                            { className: 'location', 'data-advice': 'Put your HTML here. location is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'PublicationEvent-location' },
                                'location: ',
                                this.props.location
                            )
                        );
                    } else if (this.props['@type'] === 'PostalAddress') {
                        location = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.location));
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'PublicationEvent' },
                inLanguage,
                attendee,
                performer,
                workPerformed,
                potentialAction,
                mainEntityOfPage,
                superEvent,
                review,
                recordedIn,
                workFeatured,
                aggregateRating,
                subEvent,
                offers,
                eventStatus,
                image,
                duration,
                publishedOn,
                organizer,
                location
            );
        }
    }]);

    return PublicationEvent;
}(_react.Component);

exports.default = PublicationEvent;
;

PublicationEvent.defaultProps = {};

PublicationEvent.propTypes = {
    inLanguage: _react2.default.propTypes.object,
    attendee: _react2.default.propTypes.object,
    performer: _react2.default.propTypes.object,
    workPerformed: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    superEvent: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    recordedIn: _react2.default.propTypes.object,
    workFeatured: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    subEvent: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    eventStatus: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    publishedOn: _react2.default.propTypes.object,
    organizer: _react2.default.propTypes.object,
    location: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _structuredvalue = require('./structuredvalue.js');

var _structuredvalue2 = _interopRequireDefault(_structuredvalue);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _propertyvalue = require('./propertyvalue.js');

var _propertyvalue2 = _interopRequireDefault(_propertyvalue);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* QualitativeValue - A predefined value for a product characteristic, e.g. the power cord plug type "US" or the garment sizes "S", "M", "L", and "XL".. Generated automatically by the reactGenerator. */


var QualitativeValue = function (_Component) {
    _inherits(QualitativeValue, _Component);

    function QualitativeValue() {
        _classCallCheck(this, QualitativeValue);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(QualitativeValue).apply(this, arguments));
    }

    _createClass(QualitativeValue, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var valueReference = undefined;
            if (this.props.valueReference) {
                if (this.props.valueReference instanceof Array) {
                    valueReference = _react2.default.createElement(
                        'div',
                        { className: 'valueReference__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'valueReference__header', 'data-advice': 'HTML for the *head* of the section' },
                            'valueReferences'
                        ),
                        this.props.valueReference.map(function (item, index) {
                            if (_this2.props['@type'] === 'QualitativeValue') {
                                return _react2.default.createElement(QualitativeValue, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'StructuredValue') {
                                return _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'PropertyValue') {
                                return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'valueReference__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'QualitativeValue') {
                        valueReference = _react2.default.createElement(QualitativeValue, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'Enumeration') {
                        valueReference = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'StructuredValue') {
                        valueReference = _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        valueReference = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'PropertyValue') {
                        valueReference = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.valueReference));
                    }
                }
            }

            var greater = undefined;
            if (this.props.greater) {
                if (this.props.greater instanceof Array) {
                    greater = _react2.default.createElement(
                        'div',
                        { className: 'greater__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'greater__header', 'data-advice': 'HTML for the *head* of the section' },
                            'greaters'
                        ),
                        this.props.greater.map(function (item, index) {
                            return _react2.default.createElement(QualitativeValue, _extends({ key: index }, _this2.props.greater));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'greater__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    greater = _react2.default.createElement(QualitativeValue, _extends({ key: index }, this.props.greater));
                }
            }

            var lesserOrEqual = undefined;
            if (this.props.lesserOrEqual) {
                if (this.props.lesserOrEqual instanceof Array) {
                    lesserOrEqual = _react2.default.createElement(
                        'div',
                        { className: 'lesserOrEqual__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'lesserOrEqual__header', 'data-advice': 'HTML for the *head* of the section' },
                            'lesserOrEquals'
                        ),
                        this.props.lesserOrEqual.map(function (item, index) {
                            return _react2.default.createElement(QualitativeValue, _extends({ key: index }, _this2.props.lesserOrEqual));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'lesserOrEqual__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    lesserOrEqual = _react2.default.createElement(QualitativeValue, _extends({ key: index }, this.props.lesserOrEqual));
                }
            }

            var equal = undefined;
            if (this.props.equal) {
                if (this.props.equal instanceof Array) {
                    equal = _react2.default.createElement(
                        'div',
                        { className: 'equal__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'equal__header', 'data-advice': 'HTML for the *head* of the section' },
                            'equals'
                        ),
                        this.props.equal.map(function (item, index) {
                            return _react2.default.createElement(QualitativeValue, _extends({ key: index }, _this2.props.equal));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'equal__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    equal = _react2.default.createElement(QualitativeValue, _extends({ key: index }, this.props.equal));
                }
            }

            var lesser = undefined;
            if (this.props.lesser) {
                if (this.props.lesser instanceof Array) {
                    lesser = _react2.default.createElement(
                        'div',
                        { className: 'lesser__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'lesser__header', 'data-advice': 'HTML for the *head* of the section' },
                            'lessers'
                        ),
                        this.props.lesser.map(function (item, index) {
                            return _react2.default.createElement(QualitativeValue, _extends({ key: index }, _this2.props.lesser));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'lesser__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    lesser = _react2.default.createElement(QualitativeValue, _extends({ key: index }, this.props.lesser));
                }
            }

            var additionalProperty = undefined;
            if (this.props.additionalProperty) {
                if (this.props.additionalProperty instanceof Array) {
                    additionalProperty = _react2.default.createElement(
                        'div',
                        { className: 'additionalProperty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'additionalProperty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'additionalPropertys'
                        ),
                        this.props.additionalProperty.map(function (item, index) {
                            return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.additionalProperty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'additionalProperty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    additionalProperty = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.additionalProperty));
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var greaterOrEqual = undefined;
            if (this.props.greaterOrEqual) {
                if (this.props.greaterOrEqual instanceof Array) {
                    greaterOrEqual = _react2.default.createElement(
                        'div',
                        { className: 'greaterOrEqual__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'greaterOrEqual__header', 'data-advice': 'HTML for the *head* of the section' },
                            'greaterOrEquals'
                        ),
                        this.props.greaterOrEqual.map(function (item, index) {
                            return _react2.default.createElement(QualitativeValue, _extends({ key: index }, _this2.props.greaterOrEqual));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'greaterOrEqual__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    greaterOrEqual = _react2.default.createElement(QualitativeValue, _extends({ key: index }, this.props.greaterOrEqual));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'QualitativeValue-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'QualitativeValue-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var nonEqual = undefined;
            if (this.props.nonEqual) {
                if (this.props.nonEqual instanceof Array) {
                    nonEqual = _react2.default.createElement(
                        'div',
                        { className: 'nonEqual__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'nonEqual__header', 'data-advice': 'HTML for the *head* of the section' },
                            'nonEquals'
                        ),
                        this.props.nonEqual.map(function (item, index) {
                            return _react2.default.createElement(QualitativeValue, _extends({ key: index }, _this2.props.nonEqual));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'nonEqual__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    nonEqual = _react2.default.createElement(QualitativeValue, _extends({ key: index }, this.props.nonEqual));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'QualitativeValue-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'QualitativeValue-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'QualitativeValue' },
                potentialAction,
                valueReference,
                greater,
                lesserOrEqual,
                equal,
                lesser,
                additionalProperty,
                supersededBy,
                greaterOrEqual,
                mainEntityOfPage,
                nonEqual,
                image
            );
        }
    }]);

    return QualitativeValue;
}(_react.Component);

exports.default = QualitativeValue;
;

QualitativeValue.defaultProps = {};

QualitativeValue.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    valueReference: _react2.default.propTypes.object,
    greater: _react2.default.propTypes.object,
    lesserOrEqual: _react2.default.propTypes.object,
    equal: _react2.default.propTypes.object,
    lesser: _react2.default.propTypes.object,
    additionalProperty: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    greaterOrEqual: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    nonEqual: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _structuredvalue = require('./structuredvalue.js');

var _structuredvalue2 = _interopRequireDefault(_structuredvalue);

var _qualitativevalue = require('./qualitativevalue.js');

var _qualitativevalue2 = _interopRequireDefault(_qualitativevalue);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _propertyvalue = require('./propertyvalue.js');

var _propertyvalue2 = _interopRequireDefault(_propertyvalue);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* QuantitativeValue - A point value or interval for product characteristics and other purposes.. Generated automatically by the reactGenerator. */


var QuantitativeValue = function (_Component) {
    _inherits(QuantitativeValue, _Component);

    function QuantitativeValue() {
        _classCallCheck(this, QuantitativeValue);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(QuantitativeValue).apply(this, arguments));
    }

    _createClass(QuantitativeValue, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var valueReference = undefined;
            if (this.props.valueReference) {
                if (this.props.valueReference instanceof Array) {
                    valueReference = _react2.default.createElement(
                        'div',
                        { className: 'valueReference__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'valueReference__header', 'data-advice': 'HTML for the *head* of the section' },
                            'valueReferences'
                        ),
                        this.props.valueReference.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'StructuredValue') {
                                return _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'PropertyValue') {
                                return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'QualitativeValue') {
                                return _react2.default.createElement(_qualitativevalue2.default, _extends({ key: index }, _this2.props.valueReference));
                            } else if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(QuantitativeValue, _extends({ key: index }, _this2.props.valueReference));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'valueReference__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        valueReference = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'StructuredValue') {
                        valueReference = _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'PropertyValue') {
                        valueReference = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'QualitativeValue') {
                        valueReference = _react2.default.createElement(_qualitativevalue2.default, _extends({ key: index }, this.props.valueReference));
                    } else if (this.props['@type'] === 'QuantitativeValue') {
                        valueReference = _react2.default.createElement(QuantitativeValue, _extends({ key: index }, this.props.valueReference));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'QuantitativeValue-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'QuantitativeValue-image', src: this.props.image })
                        );
                    }
                }
            }

            var value = undefined;
            if (this.props.value) {
                if (this.props.value instanceof Array) {
                    value = _react2.default.createElement(
                        'div',
                        { className: 'value__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'value__header', 'data-advice': 'HTML for the *head* of the section' },
                            'values'
                        ),
                        this.props.value.map(function (item, index) {
                            if (_this2.props['@type'] === 'StructuredValue') {
                                return _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, _this2.props.value));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'value', 'data-advice': 'Put your HTML here. value is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'QuantitativeValue-value' },
                                        'value: ',
                                        _this2.props.value
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'value', 'data-advice': 'Put your HTML here. value is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'QuantitativeValue-value' },
                                        'value: ',
                                        _this2.props.value
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Boolean') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'value', 'data-advice': 'Put your HTML here. value is a Boolean.' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'QuantitativeValue-value' },
                                        'value: ',
                                        _this2.props.value
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'value__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'StructuredValue') {
                        value = _react2.default.createElement(_structuredvalue2.default, _extends({ key: index }, this.props.value));
                    } else if (this.props['@type'] === 'Text') {
                        value = _react2.default.createElement(
                            'div',
                            { className: 'value', 'data-advice': 'Put your HTML here. value is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'QuantitativeValue-value' },
                                'value: ',
                                this.props.value
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        value = _react2.default.createElement(
                            'div',
                            { className: 'value', 'data-advice': 'Put your HTML here. value is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'QuantitativeValue-value' },
                                'value: ',
                                this.props.value
                            )
                        );
                    } else if (this.props['@type'] === 'Boolean') {
                        value = _react2.default.createElement(
                            'div',
                            { className: 'value', 'data-advice': 'Put your HTML here. value is a Boolean.' },
                            _react2.default.createElement(
                                'div',
                                { className: 'QuantitativeValue-value' },
                                'value: ',
                                this.props.value
                            )
                        );
                    }
                }
            }

            var additionalProperty = undefined;
            if (this.props.additionalProperty) {
                if (this.props.additionalProperty instanceof Array) {
                    additionalProperty = _react2.default.createElement(
                        'div',
                        { className: 'additionalProperty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'additionalProperty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'additionalPropertys'
                        ),
                        this.props.additionalProperty.map(function (item, index) {
                            return _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, _this2.props.additionalProperty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'additionalProperty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    additionalProperty = _react2.default.createElement(_propertyvalue2.default, _extends({ key: index }, this.props.additionalProperty));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'QuantitativeValue-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'QuantitativeValue-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var unitCode = undefined;
            if (this.props.unitCode) {
                if (this.props.unitCode instanceof Array) {
                    unitCode = _react2.default.createElement(
                        'div',
                        { className: 'unitCode__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'unitCode__header', 'data-advice': 'HTML for the *head* of the section' },
                            'unitCodes'
                        ),
                        this.props.unitCode.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'QuantitativeValue-unitCode' },
                                        'unitCode: ',
                                        _this2.props.unitCode
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'QuantitativeValue-unitCode', href: _this2.props.unitCode, target: '_blank' },
                                        'unitCode'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'unitCode__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        unitCode = _react2.default.createElement(
                            'div',
                            { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'QuantitativeValue-unitCode' },
                                'unitCode: ',
                                this.props.unitCode
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        unitCode = _react2.default.createElement(
                            'div',
                            { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'QuantitativeValue-unitCode', href: this.props.unitCode, target: '_blank' },
                                'unitCode'
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'QuantitativeValue' },
                potentialAction,
                valueReference,
                image,
                value,
                additionalProperty,
                mainEntityOfPage,
                unitCode
            );
        }
    }]);

    return QuantitativeValue;
}(_react.Component);

exports.default = QuantitativeValue;
;

QuantitativeValue.defaultProps = {};

QuantitativeValue.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    valueReference: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    value: _react2.default.propTypes.object,
    additionalProperty: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    unitCode: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _answer = require('./answer.js');

var _answer2 = _interopRequireDefault(_answer);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Question - A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.. Generated automatically by the reactGenerator. */


var Question = function (_Component) {
    _inherits(Question, _Component);

    function Question() {
        _classCallCheck(this, Question);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Question).apply(this, arguments));
    }

    _createClass(Question, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Question-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Question-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Question-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Question-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Question-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Question-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Question-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Question-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var acceptedAnswer = undefined;
            if (this.props.acceptedAnswer) {
                if (this.props.acceptedAnswer instanceof Array) {
                    acceptedAnswer = _react2.default.createElement(
                        'div',
                        { className: 'acceptedAnswer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'acceptedAnswer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'acceptedAnswers'
                        ),
                        this.props.acceptedAnswer.map(function (item, index) {
                            return _react2.default.createElement(_answer2.default, _extends({ key: index }, _this2.props.acceptedAnswer));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'acceptedAnswer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    acceptedAnswer = _react2.default.createElement(_answer2.default, _extends({ key: index }, this.props.acceptedAnswer));
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Question-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Question-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Question-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Question-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Question-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Question-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Question-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Question-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Question-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Question-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Question-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Question-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Question-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Question-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Question-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Question-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Question-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Question-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Question-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Question-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Question-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Question-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var suggestedAnswer = undefined;
            if (this.props.suggestedAnswer) {
                if (this.props.suggestedAnswer instanceof Array) {
                    suggestedAnswer = _react2.default.createElement(
                        'div',
                        { className: 'suggestedAnswer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'suggestedAnswer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'suggestedAnswers'
                        ),
                        this.props.suggestedAnswer.map(function (item, index) {
                            return _react2.default.createElement(_answer2.default, _extends({ key: index }, _this2.props.suggestedAnswer));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'suggestedAnswer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    suggestedAnswer = _react2.default.createElement(_answer2.default, _extends({ key: index }, this.props.suggestedAnswer));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Question' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                acceptedAnswer,
                isPartOf,
                recordedAt,
                dateModified,
                interactionStatistic,
                educationalAlignment,
                provider,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                suggestedAnswer,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return Question;
}(_react.Component);

exports.default = Question;
;

Question.defaultProps = {};

Question.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    acceptedAnswer: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    suggestedAnswer: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Rating - A rating is an evaluation on a numeric scale, such as 1 to 5 stars.. Generated automatically by the reactGenerator. */


var Rating = function (_Component) {
    _inherits(Rating, _Component);

    function Rating() {
        _classCallCheck(this, Rating);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Rating).apply(this, arguments));
    }

    _createClass(Rating, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Rating-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Rating-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Rating-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Rating-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var worstRating = undefined;
            if (this.props.worstRating) {
                if (this.props.worstRating instanceof Array) {
                    worstRating = _react2.default.createElement(
                        'div',
                        { className: 'worstRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'worstRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'worstRatings'
                        ),
                        this.props.worstRating.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'worstRating', 'data-advice': 'Put your HTML here. worstRating is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Rating-worstRating' },
                                        'worstRating: ',
                                        _this2.props.worstRating
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'worstRating', 'data-advice': 'Put your HTML here. worstRating is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Rating-worstRating' },
                                        'worstRating: ',
                                        _this2.props.worstRating
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'worstRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        worstRating = _react2.default.createElement(
                            'div',
                            { className: 'worstRating', 'data-advice': 'Put your HTML here. worstRating is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Rating-worstRating' },
                                'worstRating: ',
                                this.props.worstRating
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        worstRating = _react2.default.createElement(
                            'div',
                            { className: 'worstRating', 'data-advice': 'Put your HTML here. worstRating is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Rating-worstRating' },
                                'worstRating: ',
                                this.props.worstRating
                            )
                        );
                    }
                }
            }

            var bestRating = undefined;
            if (this.props.bestRating) {
                if (this.props.bestRating instanceof Array) {
                    bestRating = _react2.default.createElement(
                        'div',
                        { className: 'bestRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'bestRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'bestRatings'
                        ),
                        this.props.bestRating.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'bestRating', 'data-advice': 'Put your HTML here. bestRating is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Rating-bestRating' },
                                        'bestRating: ',
                                        _this2.props.bestRating
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Number') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'bestRating', 'data-advice': 'Put your HTML here. bestRating is a Number.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Rating-bestRating' },
                                        'bestRating: ',
                                        _this2.props.bestRating
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'bestRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        bestRating = _react2.default.createElement(
                            'div',
                            { className: 'bestRating', 'data-advice': 'Put your HTML here. bestRating is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Rating-bestRating' },
                                'bestRating: ',
                                this.props.bestRating
                            )
                        );
                    } else if (this.props['@type'] === 'Number') {
                        bestRating = _react2.default.createElement(
                            'div',
                            { className: 'bestRating', 'data-advice': 'Put your HTML here. bestRating is a Number.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Rating-bestRating' },
                                'bestRating: ',
                                this.props.bestRating
                            )
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Rating' },
                mainEntityOfPage,
                image,
                potentialAction,
                worstRating,
                bestRating
            );
        }
    }]);

    return Rating;
}(_react.Component);

exports.default = Rating;
;

Rating.defaultProps = {};

Rating.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    worstRating: _react2.default.propTypes.object,
    bestRating: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _rating = require('./rating.js');

var _rating2 = _interopRequireDefault(_rating);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Review - A review of an item - for example, of a restaurant, movie, or store.. Generated automatically by the reactGenerator. */


var Review = function (_Component) {
    _inherits(Review, _Component);

    function Review() {
        _classCallCheck(this, Review);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Review).apply(this, arguments));
    }

    _createClass(Review, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Review-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Review-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Review-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Review-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Review-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    } else if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Review-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Review-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Review-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Review-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Review-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(Review, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(Review, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Review-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Review-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Review-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Review-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Review-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Review-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var itemReviewed = undefined;
            if (this.props.itemReviewed) {
                if (this.props.itemReviewed instanceof Array) {
                    itemReviewed = _react2.default.createElement(
                        'div',
                        { className: 'itemReviewed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'itemReviewed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'itemRevieweds'
                        ),
                        this.props.itemReviewed.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.itemReviewed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'itemReviewed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    itemReviewed = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.itemReviewed));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Review-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'Review-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Review-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'Review-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var reviewRating = undefined;
            if (this.props.reviewRating) {
                if (this.props.reviewRating instanceof Array) {
                    reviewRating = _react2.default.createElement(
                        'div',
                        { className: 'reviewRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'reviewRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviewRatings'
                        ),
                        this.props.reviewRating.map(function (item, index) {
                            return _react2.default.createElement(_rating2.default, _extends({ key: index }, _this2.props.reviewRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'reviewRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    reviewRating = _react2.default.createElement(_rating2.default, _extends({ key: index }, this.props.reviewRating));
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Review-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Review-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Review-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Review-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Review-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Review-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Review-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Review-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Review-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    } else if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Review-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Review' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                position,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                itemReviewed,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                reviewRating,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return Review;
}(_react.Component);

exports.default = Review;
;

Review.defaultProps = {};

Review.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    itemReviewed: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    reviewRating: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _openinghoursspecification = require('./openinghoursspecification.js');

var _openinghoursspecification2 = _interopRequireDefault(_openinghoursspecification);

var _geoshape = require('./geoshape.js');

var _geoshape2 = _interopRequireDefault(_geoshape);

var _offercatalog = require('./offercatalog.js');

var _offercatalog2 = _interopRequireDefault(_offercatalog);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _servicechannel = require('./servicechannel.js');

var _servicechannel2 = _interopRequireDefault(_servicechannel);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _administrativearea = require('./administrativearea.js');

var _administrativearea2 = _interopRequireDefault(_administrativearea);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _physicalactivitycategory = require('./physicalactivitycategory.js');

var _physicalactivitycategory2 = _interopRequireDefault(_physicalactivitycategory);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Service - A service provided by an organization, e.g. delivery service, print services, etc.. Generated automatically by the reactGenerator. */


var Service = function (_Component) {
    _inherits(Service, _Component);

    function Service() {
        _classCallCheck(this, Service);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Service).apply(this, arguments));
    }

    _createClass(Service, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var category = undefined;
            if (this.props.category) {
                if (this.props.category instanceof Array) {
                    category = _react2.default.createElement(
                        'div',
                        { className: 'category__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'category__header', 'data-advice': 'HTML for the *head* of the section' },
                            'categorys'
                        ),
                        this.props.category.map(function (item, index) {
                            if (_this2.props['@type'] === 'Thing') {
                                return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'PhysicalActivityCategory') {
                                return _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, _this2.props.category));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Service-category' },
                                        'category: ',
                                        _this2.props.category
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'category__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Thing') {
                        category = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'PhysicalActivityCategory') {
                        category = _react2.default.createElement(_physicalactivitycategory2.default, _extends({ key: index }, this.props.category));
                    } else if (this.props['@type'] === 'Text') {
                        category = _react2.default.createElement(
                            'div',
                            { className: 'category', 'data-advice': 'Put your HTML here. category is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Service-category' },
                                'category: ',
                                this.props.category
                            )
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var availableChannel = undefined;
            if (this.props.availableChannel) {
                if (this.props.availableChannel instanceof Array) {
                    availableChannel = _react2.default.createElement(
                        'div',
                        { className: 'availableChannel__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableChannel__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableChannels'
                        ),
                        this.props.availableChannel.map(function (item, index) {
                            return _react2.default.createElement(_servicechannel2.default, _extends({ key: index }, _this2.props.availableChannel));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableChannel__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableChannel = _react2.default.createElement(_servicechannel2.default, _extends({ key: index }, this.props.availableChannel));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var serviceOutput = undefined;
            if (this.props.serviceOutput) {
                if (this.props.serviceOutput instanceof Array) {
                    serviceOutput = _react2.default.createElement(
                        'div',
                        { className: 'serviceOutput__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'serviceOutput__header', 'data-advice': 'HTML for the *head* of the section' },
                            'serviceOutputs'
                        ),
                        this.props.serviceOutput.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.serviceOutput));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'serviceOutput__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    serviceOutput = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.serviceOutput));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Service-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Service-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var hoursAvailable = undefined;
            if (this.props.hoursAvailable) {
                if (this.props.hoursAvailable instanceof Array) {
                    hoursAvailable = _react2.default.createElement(
                        'div',
                        { className: 'hoursAvailable__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hoursAvailable__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hoursAvailables'
                        ),
                        this.props.hoursAvailable.map(function (item, index) {
                            return _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, _this2.props.hoursAvailable));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hoursAvailable__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hoursAvailable = _react2.default.createElement(_openinghoursspecification2.default, _extends({ key: index }, this.props.hoursAvailable));
                }
            }

            var areaServed = undefined;
            if (this.props.areaServed) {
                if (this.props.areaServed instanceof Array) {
                    areaServed = _react2.default.createElement(
                        'div',
                        { className: 'areaServed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'areaServed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'areaServeds'
                        ),
                        this.props.areaServed.map(function (item, index) {
                            if (_this2.props['@type'] === 'AdministrativeArea') {
                                return _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Place') {
                                return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.areaServed));
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'Service-areaServed' },
                                        'areaServed: ',
                                        _this2.props.areaServed
                                    )
                                );
                            } else if (_this2.props['@type'] === 'GeoShape') {
                                return _react2.default.createElement(_geoshape2.default, _extends({ key: index }, _this2.props.areaServed));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'areaServed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'AdministrativeArea') {
                        areaServed = _react2.default.createElement(_administrativearea2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Place') {
                        areaServed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.areaServed));
                    } else if (this.props['@type'] === 'Text') {
                        areaServed = _react2.default.createElement(
                            'div',
                            { className: 'areaServed', 'data-advice': 'Put your HTML here. areaServed is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'Service-areaServed' },
                                'areaServed: ',
                                this.props.areaServed
                            )
                        );
                    } else if (this.props['@type'] === 'GeoShape') {
                        areaServed = _react2.default.createElement(_geoshape2.default, _extends({ key: index }, this.props.areaServed));
                    }
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var hasOfferCatalog = undefined;
            if (this.props.hasOfferCatalog) {
                if (this.props.hasOfferCatalog instanceof Array) {
                    hasOfferCatalog = _react2.default.createElement(
                        'div',
                        { className: 'hasOfferCatalog__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasOfferCatalog__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasOfferCatalogs'
                        ),
                        this.props.hasOfferCatalog.map(function (item, index) {
                            return _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, _this2.props.hasOfferCatalog));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasOfferCatalog__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasOfferCatalog = _react2.default.createElement(_offercatalog2.default, _extends({ key: index }, this.props.hasOfferCatalog));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Service-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Service-image', src: this.props.image })
                        );
                    }
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Service' },
                category,
                potentialAction,
                availableChannel,
                review,
                serviceOutput,
                mainEntityOfPage,
                aggregateRating,
                offers,
                hoursAvailable,
                areaServed,
                provider,
                hasOfferCatalog,
                image
            );
        }
    }]);

    return Service;
}(_react.Component);

exports.default = Service;
;

Service.defaultProps = {};

Service.propTypes = {
    category: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    availableChannel: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    serviceOutput: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    hoursAvailable: _react2.default.propTypes.object,
    areaServed: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    hasOfferCatalog: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _service = require('./service.js');

var _service2 = _interopRequireDefault(_service);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _contactpoint = require('./contactpoint.js');

var _contactpoint2 = _interopRequireDefault(_contactpoint);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _postaladdress = require('./postaladdress.js');

var _postaladdress2 = _interopRequireDefault(_postaladdress);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* ServiceChannel - A means for accessing a service, e.g. a government office location, web site, or phone number.. Generated automatically by the reactGenerator. */


var ServiceChannel = function (_Component) {
    _inherits(ServiceChannel, _Component);

    function ServiceChannel() {
        _classCallCheck(this, ServiceChannel);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ServiceChannel).apply(this, arguments));
    }

    _createClass(ServiceChannel, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var serviceLocation = undefined;
            if (this.props.serviceLocation) {
                if (this.props.serviceLocation instanceof Array) {
                    serviceLocation = _react2.default.createElement(
                        'div',
                        { className: 'serviceLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'serviceLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'serviceLocations'
                        ),
                        this.props.serviceLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.serviceLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'serviceLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    serviceLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.serviceLocation));
                }
            }

            var servicePhone = undefined;
            if (this.props.servicePhone) {
                if (this.props.servicePhone instanceof Array) {
                    servicePhone = _react2.default.createElement(
                        'div',
                        { className: 'servicePhone__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'servicePhone__header', 'data-advice': 'HTML for the *head* of the section' },
                            'servicePhones'
                        ),
                        this.props.servicePhone.map(function (item, index) {
                            return _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, _this2.props.servicePhone));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'servicePhone__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    servicePhone = _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, this.props.servicePhone));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'ServiceChannel-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'ServiceChannel-image', src: this.props.image })
                        );
                    }
                }
            }

            var processingTime = undefined;
            if (this.props.processingTime) {
                if (this.props.processingTime instanceof Array) {
                    processingTime = _react2.default.createElement(
                        'div',
                        { className: 'processingTime__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'processingTime__header', 'data-advice': 'HTML for the *head* of the section' },
                            'processingTimes'
                        ),
                        this.props.processingTime.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.processingTime));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'processingTime__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    processingTime = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.processingTime));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var servicePostalAddress = undefined;
            if (this.props.servicePostalAddress) {
                if (this.props.servicePostalAddress instanceof Array) {
                    servicePostalAddress = _react2.default.createElement(
                        'div',
                        { className: 'servicePostalAddress__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'servicePostalAddress__header', 'data-advice': 'HTML for the *head* of the section' },
                            'servicePostalAddresss'
                        ),
                        this.props.servicePostalAddress.map(function (item, index) {
                            return _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, _this2.props.servicePostalAddress));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'servicePostalAddress__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    servicePostalAddress = _react2.default.createElement(_postaladdress2.default, _extends({ key: index }, this.props.servicePostalAddress));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'ServiceChannel-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'ServiceChannel-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var providesService = undefined;
            if (this.props.providesService) {
                if (this.props.providesService instanceof Array) {
                    providesService = _react2.default.createElement(
                        'div',
                        { className: 'providesService__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'providesService__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providesServices'
                        ),
                        this.props.providesService.map(function (item, index) {
                            return _react2.default.createElement(_service2.default, _extends({ key: index }, _this2.props.providesService));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'providesService__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    providesService = _react2.default.createElement(_service2.default, _extends({ key: index }, this.props.providesService));
                }
            }

            var availableLanguage = undefined;
            if (this.props.availableLanguage) {
                if (this.props.availableLanguage instanceof Array) {
                    availableLanguage = _react2.default.createElement(
                        'div',
                        { className: 'availableLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'availableLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'availableLanguages'
                        ),
                        this.props.availableLanguage.map(function (item, index) {
                            return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.availableLanguage));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'availableLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    availableLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.availableLanguage));
                }
            }

            var serviceSmsNumber = undefined;
            if (this.props.serviceSmsNumber) {
                if (this.props.serviceSmsNumber instanceof Array) {
                    serviceSmsNumber = _react2.default.createElement(
                        'div',
                        { className: 'serviceSmsNumber__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'serviceSmsNumber__header', 'data-advice': 'HTML for the *head* of the section' },
                            'serviceSmsNumbers'
                        ),
                        this.props.serviceSmsNumber.map(function (item, index) {
                            return _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, _this2.props.serviceSmsNumber));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'serviceSmsNumber__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    serviceSmsNumber = _react2.default.createElement(_contactpoint2.default, _extends({ key: index }, this.props.serviceSmsNumber));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'ServiceChannel' },
                serviceLocation,
                servicePhone,
                image,
                processingTime,
                potentialAction,
                servicePostalAddress,
                mainEntityOfPage,
                providesService,
                availableLanguage,
                serviceSmsNumber
            );
        }
    }]);

    return ServiceChannel;
}(_react.Component);

exports.default = ServiceChannel;
;

ServiceChannel.defaultProps = {};

ServiceChannel.propTypes = {
    serviceLocation: _react2.default.propTypes.object,
    servicePhone: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    processingTime: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    servicePostalAddress: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    providesService: _react2.default.propTypes.object,
    availableLanguage: _react2.default.propTypes.object,
    serviceSmsNumber: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _datafeed = require('./datafeed.js');

var _datafeed2 = _interopRequireDefault(_datafeed);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* SoftwareApplication - A software application.. Generated automatically by the reactGenerator. */


var SoftwareApplication = function (_Component) {
    _inherits(SoftwareApplication, _Component);

    function SoftwareApplication() {
        _classCallCheck(this, SoftwareApplication);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(SoftwareApplication).apply(this, arguments));
    }

    _createClass(SoftwareApplication, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'SoftwareApplication-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'SoftwareApplication-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var memoryRequirements = undefined;
            if (this.props.memoryRequirements) {
                if (this.props.memoryRequirements instanceof Array) {
                    memoryRequirements = _react2.default.createElement(
                        'div',
                        { className: 'memoryRequirements__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'memoryRequirements__header', 'data-advice': 'HTML for the *head* of the section' },
                            'memoryRequirementss'
                        ),
                        this.props.memoryRequirements.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'memoryRequirements', 'data-advice': 'Put your HTML here. memoryRequirements is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-memoryRequirements' },
                                        'memoryRequirements: ',
                                        _this2.props.memoryRequirements
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'memoryRequirements', 'data-advice': 'Put your HTML here. memoryRequirements is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-memoryRequirements', href: _this2.props.memoryRequirements, target: '_blank' },
                                        'memoryRequirements'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'memoryRequirements__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        memoryRequirements = _react2.default.createElement(
                            'div',
                            { className: 'memoryRequirements', 'data-advice': 'Put your HTML here. memoryRequirements is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-memoryRequirements' },
                                'memoryRequirements: ',
                                this.props.memoryRequirements
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        memoryRequirements = _react2.default.createElement(
                            'div',
                            { className: 'memoryRequirements', 'data-advice': 'Put your HTML here. memoryRequirements is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-memoryRequirements', href: this.props.memoryRequirements, target: '_blank' },
                                'memoryRequirements'
                            )
                        );
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var featureList = undefined;
            if (this.props.featureList) {
                if (this.props.featureList instanceof Array) {
                    featureList = _react2.default.createElement(
                        'div',
                        { className: 'featureList__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'featureList__header', 'data-advice': 'HTML for the *head* of the section' },
                            'featureLists'
                        ),
                        this.props.featureList.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'featureList', 'data-advice': 'Put your HTML here. featureList is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-featureList' },
                                        'featureList: ',
                                        _this2.props.featureList
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'featureList', 'data-advice': 'Put your HTML here. featureList is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-featureList', href: _this2.props.featureList, target: '_blank' },
                                        'featureList'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'featureList__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        featureList = _react2.default.createElement(
                            'div',
                            { className: 'featureList', 'data-advice': 'Put your HTML here. featureList is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-featureList' },
                                'featureList: ',
                                this.props.featureList
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        featureList = _react2.default.createElement(
                            'div',
                            { className: 'featureList', 'data-advice': 'Put your HTML here. featureList is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-featureList', href: this.props.featureList, target: '_blank' },
                                'featureList'
                            )
                        );
                    }
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var applicationSubCategory = undefined;
            if (this.props.applicationSubCategory) {
                if (this.props.applicationSubCategory instanceof Array) {
                    applicationSubCategory = _react2.default.createElement(
                        'div',
                        { className: 'applicationSubCategory__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'applicationSubCategory__header', 'data-advice': 'HTML for the *head* of the section' },
                            'applicationSubCategorys'
                        ),
                        this.props.applicationSubCategory.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'applicationSubCategory', 'data-advice': 'Put your HTML here. applicationSubCategory is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-applicationSubCategory' },
                                        'applicationSubCategory: ',
                                        _this2.props.applicationSubCategory
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'applicationSubCategory', 'data-advice': 'Put your HTML here. applicationSubCategory is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-applicationSubCategory', href: _this2.props.applicationSubCategory, target: '_blank' },
                                        'applicationSubCategory'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'applicationSubCategory__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        applicationSubCategory = _react2.default.createElement(
                            'div',
                            { className: 'applicationSubCategory', 'data-advice': 'Put your HTML here. applicationSubCategory is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-applicationSubCategory' },
                                'applicationSubCategory: ',
                                this.props.applicationSubCategory
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        applicationSubCategory = _react2.default.createElement(
                            'div',
                            { className: 'applicationSubCategory', 'data-advice': 'Put your HTML here. applicationSubCategory is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-applicationSubCategory', href: this.props.applicationSubCategory, target: '_blank' },
                                'applicationSubCategory'
                            )
                        );
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var softwareHelp = undefined;
            if (this.props.softwareHelp) {
                if (this.props.softwareHelp instanceof Array) {
                    softwareHelp = _react2.default.createElement(
                        'div',
                        { className: 'softwareHelp__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'softwareHelp__header', 'data-advice': 'HTML for the *head* of the section' },
                            'softwareHelps'
                        ),
                        this.props.softwareHelp.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.softwareHelp));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'softwareHelp__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    softwareHelp = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.softwareHelp));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var applicationCategory = undefined;
            if (this.props.applicationCategory) {
                if (this.props.applicationCategory instanceof Array) {
                    applicationCategory = _react2.default.createElement(
                        'div',
                        { className: 'applicationCategory__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'applicationCategory__header', 'data-advice': 'HTML for the *head* of the section' },
                            'applicationCategorys'
                        ),
                        this.props.applicationCategory.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'applicationCategory', 'data-advice': 'Put your HTML here. applicationCategory is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-applicationCategory' },
                                        'applicationCategory: ',
                                        _this2.props.applicationCategory
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'applicationCategory', 'data-advice': 'Put your HTML here. applicationCategory is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-applicationCategory', href: _this2.props.applicationCategory, target: '_blank' },
                                        'applicationCategory'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'applicationCategory__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        applicationCategory = _react2.default.createElement(
                            'div',
                            { className: 'applicationCategory', 'data-advice': 'Put your HTML here. applicationCategory is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-applicationCategory' },
                                'applicationCategory: ',
                                this.props.applicationCategory
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        applicationCategory = _react2.default.createElement(
                            'div',
                            { className: 'applicationCategory', 'data-advice': 'Put your HTML here. applicationCategory is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-applicationCategory', href: this.props.applicationCategory, target: '_blank' },
                                'applicationCategory'
                            )
                        );
                    }
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'SoftwareApplication-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'SoftwareApplication-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'SoftwareApplication-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'SoftwareApplication-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var softwareRequirements = undefined;
            if (this.props.softwareRequirements) {
                if (this.props.softwareRequirements instanceof Array) {
                    softwareRequirements = _react2.default.createElement(
                        'div',
                        { className: 'softwareRequirements__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'softwareRequirements__header', 'data-advice': 'HTML for the *head* of the section' },
                            'softwareRequirementss'
                        ),
                        this.props.softwareRequirements.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'softwareRequirements', 'data-advice': 'Put your HTML here. softwareRequirements is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-softwareRequirements' },
                                        'softwareRequirements: ',
                                        _this2.props.softwareRequirements
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'softwareRequirements', 'data-advice': 'Put your HTML here. softwareRequirements is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-softwareRequirements', href: _this2.props.softwareRequirements, target: '_blank' },
                                        'softwareRequirements'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'softwareRequirements__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        softwareRequirements = _react2.default.createElement(
                            'div',
                            { className: 'softwareRequirements', 'data-advice': 'Put your HTML here. softwareRequirements is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-softwareRequirements' },
                                'softwareRequirements: ',
                                this.props.softwareRequirements
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        softwareRequirements = _react2.default.createElement(
                            'div',
                            { className: 'softwareRequirements', 'data-advice': 'Put your HTML here. softwareRequirements is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-softwareRequirements', href: this.props.softwareRequirements, target: '_blank' },
                                'softwareRequirements'
                            )
                        );
                    }
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var screenshot = undefined;
            if (this.props.screenshot) {
                if (this.props.screenshot instanceof Array) {
                    screenshot = _react2.default.createElement(
                        'div',
                        { className: 'screenshot__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'screenshot__header', 'data-advice': 'HTML for the *head* of the section' },
                            'screenshots'
                        ),
                        this.props.screenshot.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.screenshot));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'screenshot', 'data-advice': 'Put your HTML here. screenshot is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-screenshot', href: _this2.props.screenshot, target: '_blank' },
                                        'screenshot'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'screenshot__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        screenshot = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.screenshot));
                    } else if (this.props['@type'] === 'URL') {
                        screenshot = _react2.default.createElement(
                            'div',
                            { className: 'screenshot', 'data-advice': 'Put your HTML here. screenshot is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-screenshot', href: this.props.screenshot, target: '_blank' },
                                'screenshot'
                            )
                        );
                    }
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releaseNotes = undefined;
            if (this.props.releaseNotes) {
                if (this.props.releaseNotes instanceof Array) {
                    releaseNotes = _react2.default.createElement(
                        'div',
                        { className: 'releaseNotes__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releaseNotes__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releaseNotess'
                        ),
                        this.props.releaseNotes.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'releaseNotes', 'data-advice': 'Put your HTML here. releaseNotes is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-releaseNotes' },
                                        'releaseNotes: ',
                                        _this2.props.releaseNotes
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'releaseNotes', 'data-advice': 'Put your HTML here. releaseNotes is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-releaseNotes', href: _this2.props.releaseNotes, target: '_blank' },
                                        'releaseNotes'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releaseNotes__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        releaseNotes = _react2.default.createElement(
                            'div',
                            { className: 'releaseNotes', 'data-advice': 'Put your HTML here. releaseNotes is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-releaseNotes' },
                                'releaseNotes: ',
                                this.props.releaseNotes
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        releaseNotes = _react2.default.createElement(
                            'div',
                            { className: 'releaseNotes', 'data-advice': 'Put your HTML here. releaseNotes is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-releaseNotes', href: this.props.releaseNotes, target: '_blank' },
                                'releaseNotes'
                            )
                        );
                    }
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'SoftwareApplication-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'SoftwareApplication-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'SoftwareApplication-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'SoftwareApplication-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var softwareAddOn = undefined;
            if (this.props.softwareAddOn) {
                if (this.props.softwareAddOn instanceof Array) {
                    softwareAddOn = _react2.default.createElement(
                        'div',
                        { className: 'softwareAddOn__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'softwareAddOn__header', 'data-advice': 'HTML for the *head* of the section' },
                            'softwareAddOns'
                        ),
                        this.props.softwareAddOn.map(function (item, index) {
                            return _react2.default.createElement(SoftwareApplication, _extends({ key: index }, _this2.props.softwareAddOn));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'softwareAddOn__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    softwareAddOn = _react2.default.createElement(SoftwareApplication, _extends({ key: index }, this.props.softwareAddOn));
                }
            }

            var storageRequirements = undefined;
            if (this.props.storageRequirements) {
                if (this.props.storageRequirements instanceof Array) {
                    storageRequirements = _react2.default.createElement(
                        'div',
                        { className: 'storageRequirements__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'storageRequirements__header', 'data-advice': 'HTML for the *head* of the section' },
                            'storageRequirementss'
                        ),
                        this.props.storageRequirements.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'storageRequirements', 'data-advice': 'Put your HTML here. storageRequirements is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-storageRequirements' },
                                        'storageRequirements: ',
                                        _this2.props.storageRequirements
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'storageRequirements', 'data-advice': 'Put your HTML here. storageRequirements is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-storageRequirements', href: _this2.props.storageRequirements, target: '_blank' },
                                        'storageRequirements'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'storageRequirements__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        storageRequirements = _react2.default.createElement(
                            'div',
                            { className: 'storageRequirements', 'data-advice': 'Put your HTML here. storageRequirements is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-storageRequirements' },
                                'storageRequirements: ',
                                this.props.storageRequirements
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        storageRequirements = _react2.default.createElement(
                            'div',
                            { className: 'storageRequirements', 'data-advice': 'Put your HTML here. storageRequirements is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-storageRequirements', href: this.props.storageRequirements, target: '_blank' },
                                'storageRequirements'
                            )
                        );
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'SoftwareApplication-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'SoftwareApplication-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'SoftwareApplication-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'SoftwareApplication-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var supportingData = undefined;
            if (this.props.supportingData) {
                if (this.props.supportingData instanceof Array) {
                    supportingData = _react2.default.createElement(
                        'div',
                        { className: 'supportingData__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supportingData__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supportingDatas'
                        ),
                        this.props.supportingData.map(function (item, index) {
                            return _react2.default.createElement(_datafeed2.default, _extends({ key: index }, _this2.props.supportingData));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supportingData__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    supportingData = _react2.default.createElement(_datafeed2.default, _extends({ key: index }, this.props.supportingData));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'SoftwareApplication' },
                comment,
                inLanguage,
                producer,
                creator,
                image,
                citation,
                memoryRequirements,
                aggregateRating,
                accountablePerson,
                video,
                featureList,
                contributor,
                applicationSubCategory,
                mainEntity,
                softwareHelp,
                publication,
                author,
                review,
                encoding,
                character,
                mainEntityOfPage,
                applicationCategory,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                softwareRequirements,
                timeRequired,
                interactionStatistic,
                screenshot,
                educationalAlignment,
                releaseNotes,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                softwareAddOn,
                storageRequirements,
                position,
                genre,
                schemaVersion,
                contentLocation,
                hasPart,
                publisher,
                about,
                potentialAction,
                license,
                associatedMedia,
                workExample,
                copyrightHolder,
                audience,
                supportingData,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return SoftwareApplication;
}(_react.Component);

exports.default = SoftwareApplication;
;

SoftwareApplication.defaultProps = {};

SoftwareApplication.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    memoryRequirements: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    featureList: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    applicationSubCategory: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    softwareHelp: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    applicationCategory: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    softwareRequirements: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    screenshot: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releaseNotes: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    softwareAddOn: _react2.default.propTypes.object,
    storageRequirements: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    supportingData: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* StructuredValue - Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.. Generated automatically by the reactGenerator. */


var StructuredValue = function (_Component) {
    _inherits(StructuredValue, _Component);

    function StructuredValue() {
        _classCallCheck(this, StructuredValue);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(StructuredValue).apply(this, arguments));
    }

    _createClass(StructuredValue, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'StructuredValue-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'StructuredValue-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'StructuredValue-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'StructuredValue-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'StructuredValue' },
                mainEntityOfPage,
                image,
                potentialAction
            );
        }
    }]);

    return StructuredValue;
}(_react.Component);

exports.default = StructuredValue;
;

StructuredValue.defaultProps = {};

StructuredValue.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Thing - The most generic type of item.. Generated automatically by the reactGenerator. */


var Thing = function (_Component) {
    _inherits(Thing, _Component);

    function Thing() {
        _classCallCheck(this, Thing);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Thing).apply(this, arguments));
    }

    _createClass(Thing, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'Thing-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'Thing-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'Thing-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'Thing-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'Thing' },
                mainEntityOfPage,
                image,
                potentialAction
            );
        }
    }]);

    return Thing;
}(_react.Component);

exports.default = Thing;
;

Thing.defaultProps = {};

Thing.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* Time - A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see XML schema for details).. Generated automatically by the reactGenerator. */

var Time = function (_Component) {
    _inherits(Time, _Component);

    function Time() {
        _classCallCheck(this, Time);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Time).apply(this, arguments));
    }

    _createClass(Time, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement('div', { className: 'Time' });
        }
    }]);

    return Time;
}(_react.Component);

exports.default = Time;
;

Time.defaultProps = {};

Time.propTypes = {};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _businessfunction = require('./businessfunction.js');

var _businessfunction2 = _interopRequireDefault(_businessfunction);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _product = require('./product.js');

var _product2 = _interopRequireDefault(_product);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* TypeAndQuantityNode - A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.. Generated automatically by the reactGenerator. */


var TypeAndQuantityNode = function (_Component) {
    _inherits(TypeAndQuantityNode, _Component);

    function TypeAndQuantityNode() {
        _classCallCheck(this, TypeAndQuantityNode);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TypeAndQuantityNode).apply(this, arguments));
    }

    _createClass(TypeAndQuantityNode, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var businessFunction = undefined;
            if (this.props.businessFunction) {
                if (this.props.businessFunction instanceof Array) {
                    businessFunction = _react2.default.createElement(
                        'div',
                        { className: 'businessFunction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'businessFunction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'businessFunctions'
                        ),
                        this.props.businessFunction.map(function (item, index) {
                            return _react2.default.createElement(_businessfunction2.default, _extends({ key: index }, _this2.props.businessFunction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'businessFunction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    businessFunction = _react2.default.createElement(_businessfunction2.default, _extends({ key: index }, this.props.businessFunction));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'TypeAndQuantityNode-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'TypeAndQuantityNode-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var unitCode = undefined;
            if (this.props.unitCode) {
                if (this.props.unitCode instanceof Array) {
                    unitCode = _react2.default.createElement(
                        'div',
                        { className: 'unitCode__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'unitCode__header', 'data-advice': 'HTML for the *head* of the section' },
                            'unitCodes'
                        ),
                        this.props.unitCode.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'TypeAndQuantityNode-unitCode' },
                                        'unitCode: ',
                                        _this2.props.unitCode
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'TypeAndQuantityNode-unitCode', href: _this2.props.unitCode, target: '_blank' },
                                        'unitCode'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'unitCode__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        unitCode = _react2.default.createElement(
                            'div',
                            { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'TypeAndQuantityNode-unitCode' },
                                'unitCode: ',
                                this.props.unitCode
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        unitCode = _react2.default.createElement(
                            'div',
                            { className: 'unitCode', 'data-advice': 'Put your HTML here. unitCode is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'TypeAndQuantityNode-unitCode', href: this.props.unitCode, target: '_blank' },
                                'unitCode'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'TypeAndQuantityNode-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'TypeAndQuantityNode-image', src: this.props.image })
                        );
                    }
                }
            }

            var typeOfGood = undefined;
            if (this.props.typeOfGood) {
                if (this.props.typeOfGood instanceof Array) {
                    typeOfGood = _react2.default.createElement(
                        'div',
                        { className: 'typeOfGood__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'typeOfGood__header', 'data-advice': 'HTML for the *head* of the section' },
                            'typeOfGoods'
                        ),
                        this.props.typeOfGood.map(function (item, index) {
                            return _react2.default.createElement(_product2.default, _extends({ key: index }, _this2.props.typeOfGood));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'typeOfGood__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    typeOfGood = _react2.default.createElement(_product2.default, _extends({ key: index }, this.props.typeOfGood));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'TypeAndQuantityNode' },
                potentialAction,
                businessFunction,
                mainEntityOfPage,
                unitCode,
                image,
                typeOfGood
            );
        }
    }]);

    return TypeAndQuantityNode;
}(_react.Component);

exports.default = TypeAndQuantityNode;
;

TypeAndQuantityNode.defaultProps = {};

TypeAndQuantityNode.propTypes = {
    potentialAction: _react2.default.propTypes.object,
    businessFunction: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    unitCode: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    typeOfGood: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _newsarticle = require('./newsarticle.js');

var _newsarticle2 = _interopRequireDefault(_newsarticle);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _distance = require('./distance.js');

var _distance2 = _interopRequireDefault(_distance);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _musicgroup = require('./musicgroup.js');

var _musicgroup2 = _interopRequireDefault(_musicgroup);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* VideoObject - A video file.. Generated automatically by the reactGenerator. */


var VideoObject = function (_Component) {
    _inherits(VideoObject, _Component);

    function VideoObject() {
        _classCallCheck(this, VideoObject);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(VideoObject).apply(this, arguments));
    }

    _createClass(VideoObject, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'VideoObject-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'VideoObject-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var encodesCreativeWork = undefined;
            if (this.props.encodesCreativeWork) {
                if (this.props.encodesCreativeWork instanceof Array) {
                    encodesCreativeWork = _react2.default.createElement(
                        'div',
                        { className: 'encodesCreativeWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encodesCreativeWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodesCreativeWorks'
                        ),
                        this.props.encodesCreativeWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.encodesCreativeWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encodesCreativeWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encodesCreativeWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.encodesCreativeWork));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'VideoObject-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'VideoObject-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'VideoObject-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'VideoObject-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var musicBy = undefined;
            if (this.props.musicBy) {
                if (this.props.musicBy instanceof Array) {
                    musicBy = _react2.default.createElement(
                        'div',
                        { className: 'musicBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'musicBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'musicBys'
                        ),
                        this.props.musicBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'MusicGroup') {
                                return _react2.default.createElement(_musicgroup2.default, _extends({ key: index }, _this2.props.musicBy));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.musicBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'musicBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'MusicGroup') {
                        musicBy = _react2.default.createElement(_musicgroup2.default, _extends({ key: index }, this.props.musicBy));
                    } else if (this.props['@type'] === 'Person') {
                        musicBy = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.musicBy));
                    }
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var height = undefined;
            if (this.props.height) {
                if (this.props.height instanceof Array) {
                    height = _react2.default.createElement(
                        'div',
                        { className: 'height__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'height__header', 'data-advice': 'HTML for the *head* of the section' },
                            'heights'
                        ),
                        this.props.height.map(function (item, index) {
                            if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.height));
                            } else if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.height));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'height__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'QuantitativeValue') {
                        height = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.height));
                    } else if (this.props['@type'] === 'Distance') {
                        height = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.height));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(VideoObject, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(VideoObject, _extends({ key: index }, this.props.video));
                }
            }

            var duration = undefined;
            if (this.props.duration) {
                if (this.props.duration instanceof Array) {
                    duration = _react2.default.createElement(
                        'div',
                        { className: 'duration__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'duration__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durations'
                        ),
                        this.props.duration.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.duration));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'duration__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    duration = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.duration));
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var productionCompany = undefined;
            if (this.props.productionCompany) {
                if (this.props.productionCompany instanceof Array) {
                    productionCompany = _react2.default.createElement(
                        'div',
                        { className: 'productionCompany__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'productionCompany__header', 'data-advice': 'HTML for the *head* of the section' },
                            'productionCompanys'
                        ),
                        this.props.productionCompany.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.productionCompany));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'productionCompany__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    productionCompany = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.productionCompany));
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var actor = undefined;
            if (this.props.actor) {
                if (this.props.actor instanceof Array) {
                    actor = _react2.default.createElement(
                        'div',
                        { className: 'actor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'actor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'actors'
                        ),
                        this.props.actor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.actor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'actor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    actor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.actor));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'VideoObject-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'VideoObject-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var associatedArticle = undefined;
            if (this.props.associatedArticle) {
                if (this.props.associatedArticle instanceof Array) {
                    associatedArticle = _react2.default.createElement(
                        'div',
                        { className: 'associatedArticle__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedArticle__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedArticles'
                        ),
                        this.props.associatedArticle.map(function (item, index) {
                            return _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, _this2.props.associatedArticle));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedArticle__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedArticle = _react2.default.createElement(_newsarticle2.default, _extends({ key: index }, this.props.associatedArticle));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var thumbnail = undefined;
            if (this.props.thumbnail) {
                if (this.props.thumbnail instanceof Array) {
                    thumbnail = _react2.default.createElement(
                        'div',
                        { className: 'thumbnail__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'thumbnail__header', 'data-advice': 'HTML for the *head* of the section' },
                            'thumbnails'
                        ),
                        this.props.thumbnail.map(function (item, index) {
                            return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.thumbnail));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'thumbnail__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    thumbnail = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.thumbnail));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'VideoObject-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'VideoObject-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'VideoObject-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'VideoObject-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var director = undefined;
            if (this.props.director) {
                if (this.props.director instanceof Array) {
                    director = _react2.default.createElement(
                        'div',
                        { className: 'director__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'director__header', 'data-advice': 'HTML for the *head* of the section' },
                            'directors'
                        ),
                        this.props.director.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.director));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'director__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    director = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.director));
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'VideoObject-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'VideoObject-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'VideoObject-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'VideoObject-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'VideoObject-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'VideoObject-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'VideoObject-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'VideoObject-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'VideoObject-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'VideoObject-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'VideoObject-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'VideoObject-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'VideoObject-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'VideoObject-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'VideoObject-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'VideoObject-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'VideoObject-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'VideoObject-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            var width = undefined;
            if (this.props.width) {
                if (this.props.width instanceof Array) {
                    width = _react2.default.createElement(
                        'div',
                        { className: 'width__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'width__header', 'data-advice': 'HTML for the *head* of the section' },
                            'widths'
                        ),
                        this.props.width.map(function (item, index) {
                            if (_this2.props['@type'] === 'QuantitativeValue') {
                                return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.width));
                            } else if (_this2.props['@type'] === 'Distance') {
                                return _react2.default.createElement(_distance2.default, _extends({ key: index }, _this2.props.width));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'width__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'QuantitativeValue') {
                        width = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.width));
                    } else if (this.props['@type'] === 'Distance') {
                        width = _react2.default.createElement(_distance2.default, _extends({ key: index }, this.props.width));
                    }
                }
            }

            var regionsAllowed = undefined;
            if (this.props.regionsAllowed) {
                if (this.props.regionsAllowed instanceof Array) {
                    regionsAllowed = _react2.default.createElement(
                        'div',
                        { className: 'regionsAllowed__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'regionsAllowed__header', 'data-advice': 'HTML for the *head* of the section' },
                            'regionsAlloweds'
                        ),
                        this.props.regionsAllowed.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.regionsAllowed));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'regionsAllowed__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    regionsAllowed = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.regionsAllowed));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'VideoObject' },
                comment,
                inLanguage,
                translator,
                encodesCreativeWork,
                creator,
                image,
                citation,
                musicBy,
                contributor,
                height,
                aggregateRating,
                accountablePerson,
                video,
                duration,
                mainEntity,
                producer,
                productionCompany,
                review,
                encoding,
                character,
                actor,
                mainEntityOfPage,
                associatedArticle,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                thumbnail,
                timeRequired,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                director,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                publication,
                hasPart,
                publisher,
                about,
                potentialAction,
                license,
                associatedMedia,
                workExample,
                author,
                dateModified,
                audience,
                mentions,
                audio,
                sourceOrganization,
                width,
                regionsAllowed
            );
        }
    }]);

    return VideoObject;
}(_react.Component);

exports.default = VideoObject;
;

VideoObject.defaultProps = {};

VideoObject.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    encodesCreativeWork: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    musicBy: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    height: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    duration: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    productionCompany: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    actor: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    associatedArticle: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    thumbnail: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    director: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object,
    width: _react2.default.propTypes.object,
    regionsAllowed: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _warrantyscope = require('./warrantyscope.js');

var _warrantyscope2 = _interopRequireDefault(_warrantyscope);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _quantitativevalue = require('./quantitativevalue.js');

var _quantitativevalue2 = _interopRequireDefault(_quantitativevalue);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* WarrantyPromise - A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.. Generated automatically by the reactGenerator. */


var WarrantyPromise = function (_Component) {
    _inherits(WarrantyPromise, _Component);

    function WarrantyPromise() {
        _classCallCheck(this, WarrantyPromise);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(WarrantyPromise).apply(this, arguments));
    }

    _createClass(WarrantyPromise, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'WarrantyPromise-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'WarrantyPromise-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var durationOfWarranty = undefined;
            if (this.props.durationOfWarranty) {
                if (this.props.durationOfWarranty instanceof Array) {
                    durationOfWarranty = _react2.default.createElement(
                        'div',
                        { className: 'durationOfWarranty__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'durationOfWarranty__header', 'data-advice': 'HTML for the *head* of the section' },
                            'durationOfWarrantys'
                        ),
                        this.props.durationOfWarranty.map(function (item, index) {
                            return _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, _this2.props.durationOfWarranty));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'durationOfWarranty__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    durationOfWarranty = _react2.default.createElement(_quantitativevalue2.default, _extends({ key: index }, this.props.durationOfWarranty));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'WarrantyPromise-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'WarrantyPromise-image', src: this.props.image })
                        );
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var warrantyScope = undefined;
            if (this.props.warrantyScope) {
                if (this.props.warrantyScope instanceof Array) {
                    warrantyScope = _react2.default.createElement(
                        'div',
                        { className: 'warrantyScope__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'warrantyScope__header', 'data-advice': 'HTML for the *head* of the section' },
                            'warrantyScopes'
                        ),
                        this.props.warrantyScope.map(function (item, index) {
                            return _react2.default.createElement(_warrantyscope2.default, _extends({ key: index }, _this2.props.warrantyScope));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'warrantyScope__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    warrantyScope = _react2.default.createElement(_warrantyscope2.default, _extends({ key: index }, this.props.warrantyScope));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'WarrantyPromise' },
                mainEntityOfPage,
                durationOfWarranty,
                image,
                potentialAction,
                warrantyScope
            );
        }
    }]);

    return WarrantyPromise;
}(_react.Component);

exports.default = WarrantyPromise;
;

WarrantyPromise.defaultProps = {};

WarrantyPromise.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    durationOfWarranty: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    warrantyScope: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _enumeration = require('./enumeration.js');

var _enumeration2 = _interopRequireDefault(_enumeration);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _property = require('./property.js');

var _property2 = _interopRequireDefault(_property);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _class = require('./class.js');

var _class2 = _interopRequireDefault(_class);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* WarrantyScope - A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Commonly used values:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#Labor-BringIn
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#PartsAndLabor-BringIn
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               http://purl.org/goodrelations/v1#PartsAndLabor-PickUp. Generated automatically by the reactGenerator. */


var WarrantyScope = function (_Component) {
    _inherits(WarrantyScope, _Component);

    function WarrantyScope() {
        _classCallCheck(this, WarrantyScope);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(WarrantyScope).apply(this, arguments));
    }

    _createClass(WarrantyScope, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'WarrantyScope-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    } else if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'WarrantyScope-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    }
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'WarrantyScope-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'WarrantyScope-image', src: this.props.image })
                        );
                    }
                }
            }

            var supersededBy = undefined;
            if (this.props.supersededBy) {
                if (this.props.supersededBy instanceof Array) {
                    supersededBy = _react2.default.createElement(
                        'div',
                        { className: 'supersededBy__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'supersededBy__header', 'data-advice': 'HTML for the *head* of the section' },
                            'supersededBys'
                        ),
                        this.props.supersededBy.map(function (item, index) {
                            if (_this2.props['@type'] === 'Enumeration') {
                                return _react2.default.createElement(_enumeration2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Class') {
                                return _react2.default.createElement(_class2.default, _extends({ key: index }, _this2.props.supersededBy));
                            } else if (_this2.props['@type'] === 'Property') {
                                return _react2.default.createElement(_property2.default, _extends({ key: index }, _this2.props.supersededBy));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'supersededBy__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Enumeration') {
                        supersededBy = _react2.default.createElement(_enumeration2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Class') {
                        supersededBy = _react2.default.createElement(_class2.default, _extends({ key: index }, this.props.supersededBy));
                    } else if (this.props['@type'] === 'Property') {
                        supersededBy = _react2.default.createElement(_property2.default, _extends({ key: index }, this.props.supersededBy));
                    }
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'WarrantyScope' },
                mainEntityOfPage,
                image,
                supersededBy,
                potentialAction
            );
        }
    }]);

    return WarrantyScope;
}(_react.Component);

exports.default = WarrantyScope;
;

WarrantyScope.defaultProps = {};

WarrantyScope.propTypes = {
    mainEntityOfPage: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    supersededBy: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _audioobject = require('./audioobject.js');

var _audioobject2 = _interopRequireDefault(_audioobject);

var _comment = require('./comment.js');

var _comment2 = _interopRequireDefault(_comment);

var _videoobject = require('./videoobject.js');

var _videoobject2 = _interopRequireDefault(_videoobject);

var _alignmentobject = require('./alignmentobject.js');

var _alignmentobject2 = _interopRequireDefault(_alignmentobject);

var _action = require('./action.js');

var _action2 = _interopRequireDefault(_action);

var _language = require('./language.js');

var _language2 = _interopRequireDefault(_language);

var _aggregaterating = require('./aggregaterating.js');

var _aggregaterating2 = _interopRequireDefault(_aggregaterating);

var _mediaobject = require('./mediaobject.js');

var _mediaobject2 = _interopRequireDefault(_mediaobject);

var _offer = require('./offer.js');

var _offer2 = _interopRequireDefault(_offer);

var _publicationevent = require('./publicationevent.js');

var _publicationevent2 = _interopRequireDefault(_publicationevent);

var _person = require('./person.js');

var _person2 = _interopRequireDefault(_person);

var _imageobject = require('./imageobject.js');

var _imageobject2 = _interopRequireDefault(_imageobject);

var _thing = require('./thing.js');

var _thing2 = _interopRequireDefault(_thing);

var _audience = require('./audience.js');

var _audience2 = _interopRequireDefault(_audience);

var _place = require('./place.js');

var _place2 = _interopRequireDefault(_place);

var _interactioncounter = require('./interactioncounter.js');

var _interactioncounter2 = _interopRequireDefault(_interactioncounter);

var _duration = require('./duration.js');

var _duration2 = _interopRequireDefault(_duration);

var _organization = require('./organization.js');

var _organization2 = _interopRequireDefault(_organization);

var _creativework = require('./creativework.js');

var _creativework2 = _interopRequireDefault(_creativework);

var _event = require('./event.js');

var _event2 = _interopRequireDefault(_event);

var _review = require('./review.js');

var _review2 = _interopRequireDefault(_review);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* WebSite - A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.. Generated automatically by the reactGenerator. */


var WebSite = function (_Component) {
    _inherits(WebSite, _Component);

    function WebSite() {
        _classCallCheck(this, WebSite);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(WebSite).apply(this, arguments));
    }

    _createClass(WebSite, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var comment = undefined;
            if (this.props.comment) {
                if (this.props.comment instanceof Array) {
                    comment = _react2.default.createElement(
                        'div',
                        { className: 'comment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'comment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'comments'
                        ),
                        this.props.comment.map(function (item, index) {
                            return _react2.default.createElement(_comment2.default, _extends({ key: index }, _this2.props.comment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'comment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    comment = _react2.default.createElement(_comment2.default, _extends({ key: index }, this.props.comment));
                }
            }

            var inLanguage = undefined;
            if (this.props.inLanguage) {
                if (this.props.inLanguage instanceof Array) {
                    inLanguage = _react2.default.createElement(
                        'div',
                        { className: 'inLanguage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'inLanguage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'inLanguages'
                        ),
                        this.props.inLanguage.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'WebSite-inLanguage' },
                                        'inLanguage: ',
                                        _this2.props.inLanguage
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Language') {
                                return _react2.default.createElement(_language2.default, _extends({ key: index }, _this2.props.inLanguage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'inLanguage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        inLanguage = _react2.default.createElement(
                            'div',
                            { className: 'inLanguage', 'data-advice': 'Put your HTML here. inLanguage is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'WebSite-inLanguage' },
                                'inLanguage: ',
                                this.props.inLanguage
                            )
                        );
                    } else if (this.props['@type'] === 'Language') {
                        inLanguage = _react2.default.createElement(_language2.default, _extends({ key: index }, this.props.inLanguage));
                    }
                }
            }

            var producer = undefined;
            if (this.props.producer) {
                if (this.props.producer instanceof Array) {
                    producer = _react2.default.createElement(
                        'div',
                        { className: 'producer__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'producer__header', 'data-advice': 'HTML for the *head* of the section' },
                            'producers'
                        ),
                        this.props.producer.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.producer));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.producer));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'producer__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        producer = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.producer));
                    } else if (this.props['@type'] === 'Person') {
                        producer = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.producer));
                    }
                }
            }

            var encoding = undefined;
            if (this.props.encoding) {
                if (this.props.encoding instanceof Array) {
                    encoding = _react2.default.createElement(
                        'div',
                        { className: 'encoding__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'encoding__header', 'data-advice': 'HTML for the *head* of the section' },
                            'encodings'
                        ),
                        this.props.encoding.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.encoding));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'encoding__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    encoding = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.encoding));
                }
            }

            var image = undefined;
            if (this.props.image) {
                if (this.props.image instanceof Array) {
                    image = _react2.default.createElement(
                        'div',
                        { className: 'image__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'image__header', 'data-advice': 'HTML for the *head* of the section' },
                            'images'
                        ),
                        this.props.image.map(function (item, index) {
                            if (_this2.props['@type'] === 'ImageObject') {
                                return _react2.default.createElement(_imageobject2.default, _extends({ key: index }, _this2.props.image));
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                                    _react2.default.createElement('img', { className: 'WebSite-image', src: _this2.props.image })
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'image__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'ImageObject') {
                        image = _react2.default.createElement(_imageobject2.default, _extends({ key: index }, this.props.image));
                    } else if (this.props['@type'] === 'URL') {
                        image = _react2.default.createElement(
                            'div',
                            { className: 'image', 'data-advice': 'Put your HTML here. image is a URL.' },
                            _react2.default.createElement('img', { className: 'WebSite-image', src: this.props.image })
                        );
                    }
                }
            }

            var citation = undefined;
            if (this.props.citation) {
                if (this.props.citation instanceof Array) {
                    citation = _react2.default.createElement(
                        'div',
                        { className: 'citation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'citation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'citations'
                        ),
                        this.props.citation.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'WebSite-citation' },
                                        'citation: ',
                                        _this2.props.citation
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.citation));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'citation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        citation = _react2.default.createElement(
                            'div',
                            { className: 'citation', 'data-advice': 'Put your HTML here. citation is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'WebSite-citation' },
                                'citation: ',
                                this.props.citation
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        citation = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.citation));
                    }
                }
            }

            var associatedMedia = undefined;
            if (this.props.associatedMedia) {
                if (this.props.associatedMedia instanceof Array) {
                    associatedMedia = _react2.default.createElement(
                        'div',
                        { className: 'associatedMedia__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'associatedMedia__header', 'data-advice': 'HTML for the *head* of the section' },
                            'associatedMedias'
                        ),
                        this.props.associatedMedia.map(function (item, index) {
                            return _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, _this2.props.associatedMedia));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'associatedMedia__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    associatedMedia = _react2.default.createElement(_mediaobject2.default, _extends({ key: index }, this.props.associatedMedia));
                }
            }

            var accountablePerson = undefined;
            if (this.props.accountablePerson) {
                if (this.props.accountablePerson instanceof Array) {
                    accountablePerson = _react2.default.createElement(
                        'div',
                        { className: 'accountablePerson__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'accountablePerson__header', 'data-advice': 'HTML for the *head* of the section' },
                            'accountablePersons'
                        ),
                        this.props.accountablePerson.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.accountablePerson));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'accountablePerson__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    accountablePerson = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.accountablePerson));
                }
            }

            var video = undefined;
            if (this.props.video) {
                if (this.props.video instanceof Array) {
                    video = _react2.default.createElement(
                        'div',
                        { className: 'video__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'video__header', 'data-advice': 'HTML for the *head* of the section' },
                            'videos'
                        ),
                        this.props.video.map(function (item, index) {
                            return _react2.default.createElement(_videoobject2.default, _extends({ key: index }, _this2.props.video));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'video__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    video = _react2.default.createElement(_videoobject2.default, _extends({ key: index }, this.props.video));
                }
            }

            var contributor = undefined;
            if (this.props.contributor) {
                if (this.props.contributor instanceof Array) {
                    contributor = _react2.default.createElement(
                        'div',
                        { className: 'contributor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contributor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contributors'
                        ),
                        this.props.contributor.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.contributor));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.contributor));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contributor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        contributor = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.contributor));
                    } else if (this.props['@type'] === 'Person') {
                        contributor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.contributor));
                    }
                }
            }

            var mainEntity = undefined;
            if (this.props.mainEntity) {
                if (this.props.mainEntity instanceof Array) {
                    mainEntity = _react2.default.createElement(
                        'div',
                        { className: 'mainEntity__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntity__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntitys'
                        ),
                        this.props.mainEntity.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mainEntity));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntity__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mainEntity = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mainEntity));
                }
            }

            var publication = undefined;
            if (this.props.publication) {
                if (this.props.publication instanceof Array) {
                    publication = _react2.default.createElement(
                        'div',
                        { className: 'publication__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publication__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publications'
                        ),
                        this.props.publication.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.publication));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publication__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    publication = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.publication));
                }
            }

            var author = undefined;
            if (this.props.author) {
                if (this.props.author instanceof Array) {
                    author = _react2.default.createElement(
                        'div',
                        { className: 'author__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'author__header', 'data-advice': 'HTML for the *head* of the section' },
                            'authors'
                        ),
                        this.props.author.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.author));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.author));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'author__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        author = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.author));
                    } else if (this.props['@type'] === 'Person') {
                        author = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.author));
                    }
                }
            }

            var review = undefined;
            if (this.props.review) {
                if (this.props.review instanceof Array) {
                    review = _react2.default.createElement(
                        'div',
                        { className: 'review__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'review__header', 'data-advice': 'HTML for the *head* of the section' },
                            'reviews'
                        ),
                        this.props.review.map(function (item, index) {
                            return _react2.default.createElement(_review2.default, _extends({ key: index }, _this2.props.review));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'review__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    review = _react2.default.createElement(_review2.default, _extends({ key: index }, this.props.review));
                }
            }

            var creator = undefined;
            if (this.props.creator) {
                if (this.props.creator instanceof Array) {
                    creator = _react2.default.createElement(
                        'div',
                        { className: 'creator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'creator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'creators'
                        ),
                        this.props.creator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.creator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.creator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'creator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        creator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.creator));
                    } else if (this.props['@type'] === 'Person') {
                        creator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.creator));
                    }
                }
            }

            var character = undefined;
            if (this.props.character) {
                if (this.props.character instanceof Array) {
                    character = _react2.default.createElement(
                        'div',
                        { className: 'character__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'character__header', 'data-advice': 'HTML for the *head* of the section' },
                            'characters'
                        ),
                        this.props.character.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.character));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'character__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    character = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.character));
                }
            }

            var mainEntityOfPage = undefined;
            if (this.props.mainEntityOfPage) {
                if (this.props.mainEntityOfPage instanceof Array) {
                    mainEntityOfPage = _react2.default.createElement(
                        'div',
                        { className: 'mainEntityOfPage__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mainEntityOfPages'
                        ),
                        this.props.mainEntityOfPage.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'WebSite-mainEntityOfPage', href: _this2.props.mainEntityOfPage, target: '_blank' },
                                        'mainEntityOfPage'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.mainEntityOfPage));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mainEntityOfPage__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        mainEntityOfPage = _react2.default.createElement(
                            'div',
                            { className: 'mainEntityOfPage', 'data-advice': 'Put your HTML here. mainEntityOfPage is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'WebSite-mainEntityOfPage', href: this.props.mainEntityOfPage, target: '_blank' },
                                'mainEntityOfPage'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        mainEntityOfPage = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.mainEntityOfPage));
                    }
                }
            }

            var hasPart = undefined;
            if (this.props.hasPart) {
                if (this.props.hasPart instanceof Array) {
                    hasPart = _react2.default.createElement(
                        'div',
                        { className: 'hasPart__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'hasPart__header', 'data-advice': 'HTML for the *head* of the section' },
                            'hasParts'
                        ),
                        this.props.hasPart.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.hasPart));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'hasPart__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    hasPart = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.hasPart));
                }
            }

            var exampleOfWork = undefined;
            if (this.props.exampleOfWork) {
                if (this.props.exampleOfWork instanceof Array) {
                    exampleOfWork = _react2.default.createElement(
                        'div',
                        { className: 'exampleOfWork__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'exampleOfWork__header', 'data-advice': 'HTML for the *head* of the section' },
                            'exampleOfWorks'
                        ),
                        this.props.exampleOfWork.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.exampleOfWork));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'exampleOfWork__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    exampleOfWork = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.exampleOfWork));
                }
            }

            var locationCreated = undefined;
            if (this.props.locationCreated) {
                if (this.props.locationCreated instanceof Array) {
                    locationCreated = _react2.default.createElement(
                        'div',
                        { className: 'locationCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'locationCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'locationCreateds'
                        ),
                        this.props.locationCreated.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.locationCreated));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'locationCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    locationCreated = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.locationCreated));
                }
            }

            var editor = undefined;
            if (this.props.editor) {
                if (this.props.editor instanceof Array) {
                    editor = _react2.default.createElement(
                        'div',
                        { className: 'editor__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'editor__header', 'data-advice': 'HTML for the *head* of the section' },
                            'editors'
                        ),
                        this.props.editor.map(function (item, index) {
                            return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.editor));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'editor__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    editor = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.editor));
                }
            }

            var provider = undefined;
            if (this.props.provider) {
                if (this.props.provider instanceof Array) {
                    provider = _react2.default.createElement(
                        'div',
                        { className: 'provider__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'provider__header', 'data-advice': 'HTML for the *head* of the section' },
                            'providers'
                        ),
                        this.props.provider.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.provider));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.provider));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'provider__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        provider = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.provider));
                    } else if (this.props['@type'] === 'Person') {
                        provider = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.provider));
                    }
                }
            }

            var isPartOf = undefined;
            if (this.props.isPartOf) {
                if (this.props.isPartOf instanceof Array) {
                    isPartOf = _react2.default.createElement(
                        'div',
                        { className: 'isPartOf__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'isPartOf__header', 'data-advice': 'HTML for the *head* of the section' },
                            'isPartOfs'
                        ),
                        this.props.isPartOf.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.isPartOf));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'isPartOf__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    isPartOf = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.isPartOf));
                }
            }

            var recordedAt = undefined;
            if (this.props.recordedAt) {
                if (this.props.recordedAt instanceof Array) {
                    recordedAt = _react2.default.createElement(
                        'div',
                        { className: 'recordedAt__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'recordedAt__header', 'data-advice': 'HTML for the *head* of the section' },
                            'recordedAts'
                        ),
                        this.props.recordedAt.map(function (item, index) {
                            return _react2.default.createElement(_event2.default, _extends({ key: index }, _this2.props.recordedAt));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'recordedAt__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    recordedAt = _react2.default.createElement(_event2.default, _extends({ key: index }, this.props.recordedAt));
                }
            }

            var dateModified = undefined;
            if (this.props.dateModified) {
                if (this.props.dateModified instanceof Array) {
                    dateModified = _react2.default.createElement(
                        'div',
                        { className: 'dateModified__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateModified__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateModifieds'
                        ),
                        this.props.dateModified.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'WebSite-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'WebSite-dateModified' },
                                        'dateModified: ',
                                        _this2.props.dateModified
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateModified__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'WebSite-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateModified = _react2.default.createElement(
                            'div',
                            { className: 'dateModified', 'data-advice': 'Put your HTML here. dateModified is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'WebSite-dateModified' },
                                'dateModified: ',
                                this.props.dateModified
                            )
                        );
                    }
                }
            }

            var interactionStatistic = undefined;
            if (this.props.interactionStatistic) {
                if (this.props.interactionStatistic instanceof Array) {
                    interactionStatistic = _react2.default.createElement(
                        'div',
                        { className: 'interactionStatistic__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'interactionStatistic__header', 'data-advice': 'HTML for the *head* of the section' },
                            'interactionStatistics'
                        ),
                        this.props.interactionStatistic.map(function (item, index) {
                            return _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, _this2.props.interactionStatistic));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'interactionStatistic__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    interactionStatistic = _react2.default.createElement(_interactioncounter2.default, _extends({ key: index }, this.props.interactionStatistic));
                }
            }

            var educationalAlignment = undefined;
            if (this.props.educationalAlignment) {
                if (this.props.educationalAlignment instanceof Array) {
                    educationalAlignment = _react2.default.createElement(
                        'div',
                        { className: 'educationalAlignment__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'educationalAlignment__header', 'data-advice': 'HTML for the *head* of the section' },
                            'educationalAlignments'
                        ),
                        this.props.educationalAlignment.map(function (item, index) {
                            return _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, _this2.props.educationalAlignment));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'educationalAlignment__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    educationalAlignment = _react2.default.createElement(_alignmentobject2.default, _extends({ key: index }, this.props.educationalAlignment));
                }
            }

            var releasedEvent = undefined;
            if (this.props.releasedEvent) {
                if (this.props.releasedEvent instanceof Array) {
                    releasedEvent = _react2.default.createElement(
                        'div',
                        { className: 'releasedEvent__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'releasedEvent__header', 'data-advice': 'HTML for the *head* of the section' },
                            'releasedEvents'
                        ),
                        this.props.releasedEvent.map(function (item, index) {
                            return _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, _this2.props.releasedEvent));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'releasedEvent__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    releasedEvent = _react2.default.createElement(_publicationevent2.default, _extends({ key: index }, this.props.releasedEvent));
                }
            }

            var dateCreated = undefined;
            if (this.props.dateCreated) {
                if (this.props.dateCreated instanceof Array) {
                    dateCreated = _react2.default.createElement(
                        'div',
                        { className: 'dateCreated__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'dateCreated__header', 'data-advice': 'HTML for the *head* of the section' },
                            'dateCreateds'
                        ),
                        this.props.dateCreated.map(function (item, index) {
                            if (_this2.props['@type'] === 'DateTime') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'WebSite-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Date') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                                    _react2.default.createElement(
                                        'time',
                                        { className: 'WebSite-dateCreated' },
                                        'dateCreated: ',
                                        _this2.props.dateCreated
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'dateCreated__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'DateTime') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a DateTime.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'WebSite-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    } else if (this.props['@type'] === 'Date') {
                        dateCreated = _react2.default.createElement(
                            'div',
                            { className: 'dateCreated', 'data-advice': 'Put your HTML here. dateCreated is a Date.' },
                            _react2.default.createElement(
                                'time',
                                { className: 'WebSite-dateCreated' },
                                'dateCreated: ',
                                this.props.dateCreated
                            )
                        );
                    }
                }
            }

            var translator = undefined;
            if (this.props.translator) {
                if (this.props.translator instanceof Array) {
                    translator = _react2.default.createElement(
                        'div',
                        { className: 'translator__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'translator__header', 'data-advice': 'HTML for the *head* of the section' },
                            'translators'
                        ),
                        this.props.translator.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.translator));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.translator));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'translator__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        translator = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.translator));
                    } else if (this.props['@type'] === 'Person') {
                        translator = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.translator));
                    }
                }
            }

            var offers = undefined;
            if (this.props.offers) {
                if (this.props.offers instanceof Array) {
                    offers = _react2.default.createElement(
                        'div',
                        { className: 'offers__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'offers__header', 'data-advice': 'HTML for the *head* of the section' },
                            'offerss'
                        ),
                        this.props.offers.map(function (item, index) {
                            return _react2.default.createElement(_offer2.default, _extends({ key: index }, _this2.props.offers));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'offers__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    offers = _react2.default.createElement(_offer2.default, _extends({ key: index }, this.props.offers));
                }
            }

            var copyrightHolder = undefined;
            if (this.props.copyrightHolder) {
                if (this.props.copyrightHolder instanceof Array) {
                    copyrightHolder = _react2.default.createElement(
                        'div',
                        { className: 'copyrightHolder__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'copyrightHolder__header', 'data-advice': 'HTML for the *head* of the section' },
                            'copyrightHolders'
                        ),
                        this.props.copyrightHolder.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.copyrightHolder));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'copyrightHolder__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        copyrightHolder = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.copyrightHolder));
                    } else if (this.props['@type'] === 'Person') {
                        copyrightHolder = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.copyrightHolder));
                    }
                }
            }

            var position = undefined;
            if (this.props.position) {
                if (this.props.position instanceof Array) {
                    position = _react2.default.createElement(
                        'div',
                        { className: 'position__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'position__header', 'data-advice': 'HTML for the *head* of the section' },
                            'positions'
                        ),
                        this.props.position.map(function (item, index) {
                            if (_this2.props['@type'] === 'Integer') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'WebSite-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            } else if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'WebSite-position' },
                                        'position: ',
                                        _this2.props.position
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'position__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Integer') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Integer.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'WebSite-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    } else if (this.props['@type'] === 'Text') {
                        position = _react2.default.createElement(
                            'div',
                            { className: 'position', 'data-advice': 'Put your HTML here. position is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'WebSite-position' },
                                'position: ',
                                this.props.position
                            )
                        );
                    }
                }
            }

            var genre = undefined;
            if (this.props.genre) {
                if (this.props.genre instanceof Array) {
                    genre = _react2.default.createElement(
                        'div',
                        { className: 'genre__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'genre__header', 'data-advice': 'HTML for the *head* of the section' },
                            'genres'
                        ),
                        this.props.genre.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'WebSite-genre' },
                                        'genre: ',
                                        _this2.props.genre
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'WebSite-genre', href: _this2.props.genre, target: '_blank' },
                                        'genre'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'genre__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'WebSite-genre' },
                                'genre: ',
                                this.props.genre
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        genre = _react2.default.createElement(
                            'div',
                            { className: 'genre', 'data-advice': 'Put your HTML here. genre is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'WebSite-genre', href: this.props.genre, target: '_blank' },
                                'genre'
                            )
                        );
                    }
                }
            }

            var schemaVersion = undefined;
            if (this.props.schemaVersion) {
                if (this.props.schemaVersion instanceof Array) {
                    schemaVersion = _react2.default.createElement(
                        'div',
                        { className: 'schemaVersion__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion__header', 'data-advice': 'HTML for the *head* of the section' },
                            'schemaVersions'
                        ),
                        this.props.schemaVersion.map(function (item, index) {
                            if (_this2.props['@type'] === 'Text') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'WebSite-schemaVersion' },
                                        'schemaVersion: ',
                                        _this2.props.schemaVersion
                                    )
                                );
                            } else if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'WebSite-schemaVersion', href: _this2.props.schemaVersion, target: '_blank' },
                                        'schemaVersion'
                                    )
                                );
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'schemaVersion__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Text') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a Text.' },
                            _react2.default.createElement(
                                'p',
                                { className: 'WebSite-schemaVersion' },
                                'schemaVersion: ',
                                this.props.schemaVersion
                            )
                        );
                    } else if (this.props['@type'] === 'URL') {
                        schemaVersion = _react2.default.createElement(
                            'div',
                            { className: 'schemaVersion', 'data-advice': 'Put your HTML here. schemaVersion is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'WebSite-schemaVersion', href: this.props.schemaVersion, target: '_blank' },
                                'schemaVersion'
                            )
                        );
                    }
                }
            }

            var contentLocation = undefined;
            if (this.props.contentLocation) {
                if (this.props.contentLocation instanceof Array) {
                    contentLocation = _react2.default.createElement(
                        'div',
                        { className: 'contentLocation__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'contentLocation__header', 'data-advice': 'HTML for the *head* of the section' },
                            'contentLocations'
                        ),
                        this.props.contentLocation.map(function (item, index) {
                            return _react2.default.createElement(_place2.default, _extends({ key: index }, _this2.props.contentLocation));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'contentLocation__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    contentLocation = _react2.default.createElement(_place2.default, _extends({ key: index }, this.props.contentLocation));
                }
            }

            var timeRequired = undefined;
            if (this.props.timeRequired) {
                if (this.props.timeRequired instanceof Array) {
                    timeRequired = _react2.default.createElement(
                        'div',
                        { className: 'timeRequired__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'timeRequired__header', 'data-advice': 'HTML for the *head* of the section' },
                            'timeRequireds'
                        ),
                        this.props.timeRequired.map(function (item, index) {
                            return _react2.default.createElement(_duration2.default, _extends({ key: index }, _this2.props.timeRequired));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'timeRequired__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    timeRequired = _react2.default.createElement(_duration2.default, _extends({ key: index }, this.props.timeRequired));
                }
            }

            var publisher = undefined;
            if (this.props.publisher) {
                if (this.props.publisher instanceof Array) {
                    publisher = _react2.default.createElement(
                        'div',
                        { className: 'publisher__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'publisher__header', 'data-advice': 'HTML for the *head* of the section' },
                            'publishers'
                        ),
                        this.props.publisher.map(function (item, index) {
                            if (_this2.props['@type'] === 'Organization') {
                                return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.publisher));
                            } else if (_this2.props['@type'] === 'Person') {
                                return _react2.default.createElement(_person2.default, _extends({ key: index }, _this2.props.publisher));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'publisher__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'Organization') {
                        publisher = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.publisher));
                    } else if (this.props['@type'] === 'Person') {
                        publisher = _react2.default.createElement(_person2.default, _extends({ key: index }, this.props.publisher));
                    }
                }
            }

            var about = undefined;
            if (this.props.about) {
                if (this.props.about instanceof Array) {
                    about = _react2.default.createElement(
                        'div',
                        { className: 'about__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'about__header', 'data-advice': 'HTML for the *head* of the section' },
                            'abouts'
                        ),
                        this.props.about.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.about));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'about__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    about = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.about));
                }
            }

            var potentialAction = undefined;
            if (this.props.potentialAction) {
                if (this.props.potentialAction instanceof Array) {
                    potentialAction = _react2.default.createElement(
                        'div',
                        { className: 'potentialAction__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'potentialAction__header', 'data-advice': 'HTML for the *head* of the section' },
                            'potentialActions'
                        ),
                        this.props.potentialAction.map(function (item, index) {
                            return _react2.default.createElement(_action2.default, _extends({ key: index }, _this2.props.potentialAction));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'potentialAction__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    potentialAction = _react2.default.createElement(_action2.default, _extends({ key: index }, this.props.potentialAction));
                }
            }

            var license = undefined;
            if (this.props.license) {
                if (this.props.license instanceof Array) {
                    license = _react2.default.createElement(
                        'div',
                        { className: 'license__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'license__header', 'data-advice': 'HTML for the *head* of the section' },
                            'licenses'
                        ),
                        this.props.license.map(function (item, index) {
                            if (_this2.props['@type'] === 'URL') {
                                return _react2.default.createElement(
                                    'div',
                                    { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                                    _react2.default.createElement(
                                        'a',
                                        { className: 'WebSite-license', href: _this2.props.license, target: '_blank' },
                                        'license'
                                    )
                                );
                            } else if (_this2.props['@type'] === 'CreativeWork') {
                                return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.license));
                            }
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'license__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    if (this.props['@type'] === 'URL') {
                        license = _react2.default.createElement(
                            'div',
                            { className: 'license', 'data-advice': 'Put your HTML here. license is a URL.' },
                            _react2.default.createElement(
                                'a',
                                { className: 'WebSite-license', href: this.props.license, target: '_blank' },
                                'license'
                            )
                        );
                    } else if (this.props['@type'] === 'CreativeWork') {
                        license = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.license));
                    }
                }
            }

            var aggregateRating = undefined;
            if (this.props.aggregateRating) {
                if (this.props.aggregateRating instanceof Array) {
                    aggregateRating = _react2.default.createElement(
                        'div',
                        { className: 'aggregateRating__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'aggregateRating__header', 'data-advice': 'HTML for the *head* of the section' },
                            'aggregateRatings'
                        ),
                        this.props.aggregateRating.map(function (item, index) {
                            return _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, _this2.props.aggregateRating));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'aggregateRating__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    aggregateRating = _react2.default.createElement(_aggregaterating2.default, _extends({ key: index }, this.props.aggregateRating));
                }
            }

            var workExample = undefined;
            if (this.props.workExample) {
                if (this.props.workExample instanceof Array) {
                    workExample = _react2.default.createElement(
                        'div',
                        { className: 'workExample__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'workExample__header', 'data-advice': 'HTML for the *head* of the section' },
                            'workExamples'
                        ),
                        this.props.workExample.map(function (item, index) {
                            return _react2.default.createElement(_creativework2.default, _extends({ key: index }, _this2.props.workExample));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'workExample__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    workExample = _react2.default.createElement(_creativework2.default, _extends({ key: index }, this.props.workExample));
                }
            }

            var audience = undefined;
            if (this.props.audience) {
                if (this.props.audience instanceof Array) {
                    audience = _react2.default.createElement(
                        'div',
                        { className: 'audience__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audience__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audiences'
                        ),
                        this.props.audience.map(function (item, index) {
                            return _react2.default.createElement(_audience2.default, _extends({ key: index }, _this2.props.audience));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audience__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audience = _react2.default.createElement(_audience2.default, _extends({ key: index }, this.props.audience));
                }
            }

            var mentions = undefined;
            if (this.props.mentions) {
                if (this.props.mentions instanceof Array) {
                    mentions = _react2.default.createElement(
                        'div',
                        { className: 'mentions__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'mentions__header', 'data-advice': 'HTML for the *head* of the section' },
                            'mentionss'
                        ),
                        this.props.mentions.map(function (item, index) {
                            return _react2.default.createElement(_thing2.default, _extends({ key: index }, _this2.props.mentions));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'mentions__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    mentions = _react2.default.createElement(_thing2.default, _extends({ key: index }, this.props.mentions));
                }
            }

            var audio = undefined;
            if (this.props.audio) {
                if (this.props.audio instanceof Array) {
                    audio = _react2.default.createElement(
                        'div',
                        { className: 'audio__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'audio__header', 'data-advice': 'HTML for the *head* of the section' },
                            'audios'
                        ),
                        this.props.audio.map(function (item, index) {
                            return _react2.default.createElement(_audioobject2.default, _extends({ key: index }, _this2.props.audio));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'audio__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    audio = _react2.default.createElement(_audioobject2.default, _extends({ key: index }, this.props.audio));
                }
            }

            var sourceOrganization = undefined;
            if (this.props.sourceOrganization) {
                if (this.props.sourceOrganization instanceof Array) {
                    sourceOrganization = _react2.default.createElement(
                        'div',
                        { className: 'sourceOrganization__container' },
                        _react2.default.createElement(
                            'div',
                            { className: 'sourceOrganization__header', 'data-advice': 'HTML for the *head* of the section' },
                            'sourceOrganizations'
                        ),
                        this.props.sourceOrganization.map(function (item, index) {
                            return _react2.default.createElement(_organization2.default, _extends({ key: index }, _this2.props.sourceOrganization));
                        }),
                        ';',
                        _react2.default.createElement('div', { className: 'sourceOrganization__footer', 'data-advice': 'HTML for the *footer* of the section' }),
                        ';'
                    );
                } else {
                    sourceOrganization = _react2.default.createElement(_organization2.default, _extends({ key: index }, this.props.sourceOrganization));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'WebSite' },
                comment,
                inLanguage,
                producer,
                encoding,
                image,
                citation,
                associatedMedia,
                accountablePerson,
                video,
                contributor,
                mainEntity,
                publication,
                author,
                review,
                creator,
                character,
                mainEntityOfPage,
                hasPart,
                exampleOfWork,
                locationCreated,
                editor,
                provider,
                isPartOf,
                recordedAt,
                dateModified,
                interactionStatistic,
                educationalAlignment,
                releasedEvent,
                dateCreated,
                translator,
                offers,
                copyrightHolder,
                position,
                genre,
                schemaVersion,
                contentLocation,
                timeRequired,
                publisher,
                about,
                potentialAction,
                license,
                aggregateRating,
                workExample,
                audience,
                mentions,
                audio,
                sourceOrganization
            );
        }
    }]);

    return WebSite;
}(_react.Component);

exports.default = WebSite;
;

WebSite.defaultProps = {};

WebSite.propTypes = {
    comment: _react2.default.propTypes.object,
    inLanguage: _react2.default.propTypes.object,
    producer: _react2.default.propTypes.object,
    encoding: _react2.default.propTypes.object,
    image: _react2.default.propTypes.object,
    citation: _react2.default.propTypes.object,
    associatedMedia: _react2.default.propTypes.object,
    accountablePerson: _react2.default.propTypes.object,
    video: _react2.default.propTypes.object,
    contributor: _react2.default.propTypes.object,
    mainEntity: _react2.default.propTypes.object,
    publication: _react2.default.propTypes.object,
    author: _react2.default.propTypes.object,
    review: _react2.default.propTypes.object,
    creator: _react2.default.propTypes.object,
    character: _react2.default.propTypes.object,
    mainEntityOfPage: _react2.default.propTypes.object,
    hasPart: _react2.default.propTypes.object,
    exampleOfWork: _react2.default.propTypes.object,
    locationCreated: _react2.default.propTypes.object,
    editor: _react2.default.propTypes.object,
    provider: _react2.default.propTypes.object,
    isPartOf: _react2.default.propTypes.object,
    recordedAt: _react2.default.propTypes.object,
    dateModified: _react2.default.propTypes.object,
    interactionStatistic: _react2.default.propTypes.object,
    educationalAlignment: _react2.default.propTypes.object,
    releasedEvent: _react2.default.propTypes.object,
    dateCreated: _react2.default.propTypes.object,
    translator: _react2.default.propTypes.object,
    offers: _react2.default.propTypes.object,
    copyrightHolder: _react2.default.propTypes.object,
    position: _react2.default.propTypes.object,
    genre: _react2.default.propTypes.object,
    schemaVersion: _react2.default.propTypes.object,
    contentLocation: _react2.default.propTypes.object,
    timeRequired: _react2.default.propTypes.object,
    publisher: _react2.default.propTypes.object,
    about: _react2.default.propTypes.object,
    potentialAction: _react2.default.propTypes.object,
    license: _react2.default.propTypes.object,
    aggregateRating: _react2.default.propTypes.object,
    workExample: _react2.default.propTypes.object,
    audience: _react2.default.propTypes.object,
    mentions: _react2.default.propTypes.object,
    audio: _react2.default.propTypes.object,
    sourceOrganization: _react2.default.propTypes.object
};